[
    {
        "id": "a66ad1ae.ff0e18",
        "type": "tab",
        "label": "iSensPro cloud data",
        "disabled": false,
        "info": ""
    },
    {
        "id": "3fb5a67.37c495a",
        "type": "tab",
        "label": "GW data",
        "disabled": false,
        "info": ""
    },
    {
        "id": "de4ffc77.a55ab8",
        "type": "tab",
        "label": "fake data",
        "disabled": true,
        "info": ""
    },
    {
        "id": "23aae268.c697d6",
        "type": "tab",
        "label": "GW UI",
        "disabled": false,
        "info": ""
    },
    {
        "id": "d6ad709e.7c639",
        "type": "tab",
        "label": "config setup",
        "disabled": false,
        "info": ""
    },
    {
        "id": "1e1017d1.eb962",
        "type": "tab",
        "label": "Machine L",
        "disabled": false,
        "info": ""
    },
    {
        "id": "48325126.46d01",
        "type": "tab",
        "label": "stockdb grafana",
        "disabled": true,
        "info": ""
    },
    {
        "id": "460f2b8f.a23dbc",
        "type": "tab",
        "label": "Postgres example flows",
        "disabled": true,
        "info": "# Postgres example flows\n\nThese flows demonstrate the use of the\n`node-red-contrib-postgres-multi` node.\n\n## Setup\n\nFor the flows in this tab,\nyou'll need a PostgreSQL table like so:\n\n    begin;\n    create table mytable\n    (\n        id integer not null,\n        message character varying(20)\n    );\n    create unique index on mytable (id);\n    commit;\n\nThen you'll need to configure the postgres\nblocks to have access to this database and table.\n"
    },
    {
        "id": "548d67a6.28d68",
        "type": "tab",
        "label": "MEEKI TEST",
        "disabled": true,
        "info": ""
    },
    {
        "id": "6f1be511.28231c",
        "type": "tab",
        "label": "Grafana dashboard example",
        "disabled": true,
        "info": ""
    },
    {
        "id": "9ed7d418.301618",
        "type": "tab",
        "label": "Etable Test",
        "disabled": true,
        "info": ""
    },
    {
        "id": "6a9ab149.4f5198",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": ""
    },
    {
        "id": "e73b0862.e9edb",
        "type": "tab",
        "label": "Flow 2",
        "disabled": false,
        "info": ""
    },
    {
        "id": "8ab54f8b.ad0c68",
        "type": "tab",
        "label": "Flow 3",
        "disabled": false,
        "info": ""
    },
    {
        "id": "2924702c.b33a7",
        "type": "subflow",
        "name": "ui-table handler",
        "info": "# ui-table handler\nUniversal handler for ui-table.\n## features\n- buffer table data\n- add or update individual rows or cells of the table\n- delete rows\n- clear tableData\n- handle column width\n- handle column order\n- hide und unhide columns\n- hide and unhide rows\n- records row order\n- support for nested columns [(column groups)](http://tabulator.info/examples/4.7#column-groups)\n- support for child rows (_children) [(nested data trees)](http://tabulator.info/examples/4.7#tree)\n\nFor real life example see:\n\n**syslog server** for logfile like table with filters\n\n**remote device table** for dynamically updated table with context menues\n\n**irrigation system** for sortable rows\n\n## sending data to ui-tabel\n\n- sending an `array` as discribed in ui-table will replace the complete table and delete all table edits\n  \n  if `msg.keepEdits=true` is added the existing edits will be kept.\n- send an `object` containing the updated properties of a table row by sending msg.<tableDataProp>.\n\n  The table is updated using the `updateOrAddData` command. You can alter the command used by adding the `msg.tabulatorCommand` and `msg.tabulatorParameter`\n\n```\nmsg.tabulatorCommand=\"addData\";\nmsg.tabulatorParameter=[true];\n```\n## configuration\n- `tabulator` json formatted object containing configuration of the table. See ui-table for more details.\n- `property` property of the msg object that contains the data to be passed to ui-table. I.e. *state* `msg.state`\n- `index` index column to identify individual rows. Each message containing data must have a unique `msg.topic` to identify the row. Messages without this `msg.topic` will be droped. It is not nessesary but possible to display the index column in the table. Do not enable editing on this column otherwise you will loose the connection and another row will be added to the table as soon as a new message arrives!\n\n   Defaults to *$topic* `msg.state.$topic`\n- `maxRows`maximum number of rows held by table widget. If grater than **0** the amount of rows in ui-table is limited. For this to work the index row must be a Number. ´rows < currentID-maxRows´ will be deleted.\n- `maxStore`maximum number of rows stored by this node for replay if a client connects. If grater than **0** the amount of rows in flow context is limited. for this to work the index row must be a Number. ´rows < currentID-maxStore´ will be deleted.\n- `dashboard` name of the dashboard tab to only update the table if the dashboard is visible. If empty the table will be updated on every tab change and connect.\n- `context` configuration of context data. The subflow will save or cache data in the flows context using `$parent.`. \n   **tableData** caches the incoming data to restore it on `ui-control´ *change* messages.\n   **tableConfig** saves column width and order to save the interactive table layot\n   **tableEdit** saves edits on the table data otherwise it would be overwritten when new data arrives\n```json\n{\n    \"tableData\": {\n        \"name\": \"tableData\"\n    },\n    \"tableConfig\": {\n        \"name\": \"tableConfig\",\n        \"storage\": \"file\"\n    },\n    \"tableEdit\": {\n        \"name\": \"tableEdit\",\n        \"storage\": \"file\"\n    }\n}\n```\n\n## commands\ncommands can be passed by sending a object as `msg.payload`\n\n```json\n{\n    \"command\": \"delete\",\n    \"object\": \"columnOrder\"\n}\n```\n\n- `deleteTable` tableCache\n- `deleteRow` delete single row. `object` matching index property\n- `ignoreRow` delete single row and put it on an ignore list. `object` matching index property\n- `unIgnoreRow`remove row from the ignore list.  `object` matching index property\n- `unIgnoreRows`delte the ignore list. \n- `deleteRowOrder` delete custom row order\n- `deleteColumnOrder` delete custom column order\n  This is important if you add or delete columns in the tabulator config otherwise the columns most likely don`t show up\n- `deleteColumnWidth` delete custom column width\n- `columnHide` hide a column. `object` matching column field\n- `columnUnHide` unhide a column. `object` matching column field\n- `columnsUnHide` unhide all hidden columns.\n- `setMaxStore` set maximum amount of rows in cache\n- `setMaxDisplay` set maximum amout of rows in ui-table\n- `getTable` get table data (as displayed) as an array (on 2nd output)\n \n## background\nui-table warps the powerfull tabluator library.  This subflow makes it easier to unleash the powerfull features of ui-table",
        "category": "dashboard",
        "in": [
            {
                "x": 54,
                "y": 85,
                "wires": [
                    {
                        "id": "5eb0bd6b.74b794"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 360,
                "y": 85,
                "wires": [
                    {
                        "id": "5eb0bd6b.74b794",
                        "port": 1
                    }
                ]
            },
            {
                "x": 360,
                "y": 136,
                "wires": [
                    {
                        "id": "5eb0bd6b.74b794",
                        "port": 2
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "tabulator",
                "type": "json",
                "value": "{\"tabulator\":{\"responsiveLayout\":\"collapse\",\"responsiveLayoutCollapseStartOpen\":false,\"index\":\"$name\",\"layout\":\"fitColumns\",\"movableColumns\":true,\"groupBy\":\"\",\"columnResized\":\"function(column){     var newColumn = {         field: column._column.field,         visible: column._column.visible,         width: column._column.width,         widthFixed: column._column.widthFixed,         widthStyled: column._column.widthStyled     }; this.send({topic:this.config.topic,ui_control:{callback:'columnResized',columnWidths:newColumn}}); }\",\"columnMoved\":\"function(column, columns){     var newColumns=[];     columns.forEach(function (column) {         newColumns.push({'field': column._column.definition.field, 'title': column._column.definition.title});     });     this.send({topic:this.config.topic,ui_control:{callback:'columnMoved',columns:newColumns}}); }\",\"rowFormatter\":\"function(row){     var data = row.getData();     switch (data.$state) {         case \\\"lost\\\":             row.getElement().style.backgroundColor = \\\"#9e2e66\\\";             row.getElement().style.color = \\\"#a6a6a6\\\";             break;         case \\\"sleeping\\\":             row.getElement().style.backgroundColor = \\\"#336699\\\";             break;         case \\\"disconnected\\\":             row.getElement().style.backgroundColor = \\\"#cc3300\\\";             row.getElement().style.color = \\\"#a6a6a6\\\";             break;         case \\\"alert\\\":             row.getElement().style.backgroundColor = \\\"#A6A6DF\\\";             break;         case \\\"init\\\":             row.getElement().style.backgroundColor = \\\"#f2f20d\\\";             break;         case \\\"ready\\\":             row.getElement().style.backgroundColor = \\\"\\\";             row.getElement().style.color = \\\"\\\";             break;         } }\",\"columns\":[{\"formatter\":\"responsiveCollapse\",\"width\":30,\"minWidth\":30,\"align\":\"center\",\"resizable\":false,\"headerSort\":false,\"frozen\":true,\"title\":\"expand\",\"field\":\"expand\",\"headerVertical\":\"flip\"},{\"formatter\":\"function(cell, formatterParams, onRendered) {      var html = cell.getValue(); return html;  }\",\"title\":\"State\",\"field\":\"$stateIcon\",\"width\":100,\"frozen\":true,\"headerVertical\":\"flip\"},{\"formatter\":\"function(cell, formatterParams, onRendered) {     var html = cell.getValue(); return html;  }\",\"title\":\"Signal\",\"field\":\"signalIcon\",\"width\":100,\"frozen\":true,\"headerVertical\":\"flip\"},{\"title\":\"Name\",\"field\":\"$name\",\"width\":100,\"frozen\":true,\"headerVertical\":\"flip\"},{\"title\":\"State\",\"field\":\"$state\",\"width\":100,\"align\":\"center\",\"headerVertical\":\"flip\"},{\"title\":\"last-ready\",\"field\":\"lastSeenreadyFormatted\",\"width\":100,\"align\":\"left\",\"headerVertical\":\"flip\"},{\"title\":\"Homie\",\"field\":\"$homie\",\"width\":100,\"align\":\"left\",\"headerVertical\":\"flip\"},{\"title\":\"Platform\",\"field\":\"$implementation\",\"width\":100,\"align\":\"left\",\"headerVertical\":\"flip\"},{\"title\":\"Statistics\",\"columns\":[{\"title\":\"Interval\",\"field\":\"interval\",\"width\":100,\"headerVertical\":\"flip\"},{\"formatterParams\":{\"outputFormat\":\"d hh:mm:ss\",\"inputFormat\":\"seconds\",\"invalidPlaceholder\":\"(unknown)\"},\"title\":\"Uptime\",\"field\":\"uptime\",\"formatter\":\"function(cell, formatterParams, onRendered){     var pad = function (num) {         return (\\\"0\\\"+num).slice(-2);     };     var secs = Number(cell.getValue());     if (Number.isNaN(secs)) return;     var minutes = Math.floor(secs / 60);     secs = secs%60;     var hours = Math.floor(minutes/60);     minutes = minutes%60;     var days = Math.floor(hours/24);     hours = hours%24;     if (days>0)         return days+\\\"d \\\"+pad(hours)+\\\":\\\"+pad(minutes);     else         return pad(hours)+\\\":\\\"+pad(minutes)+\\\":\\\"+pad(secs); }\",\"width\":100,\"headerVertical\":\"flip\"},{\"formatterParams\":{\"min\":0,\"max\":100,\"color\":[\"red\",\"orange\",\"green\"],\"legend\":\"function (value) {if (value>0) return \\\"<span style='color:#FFFFFF;'>\\\"+value+\\\" %</span>\\\"; else return; }\",\"legendColor\":\"#FFFFFF\",\"legendAlign\":\"center\"},\"title\":\"Signal\",\"field\":\"signal\",\"formatter\":\"progress\",\"width\":100,\"headerVertical\":\"flip\"},{\"formatterParams\":{\"min\":2.5,\"max\":3.5,\"color\":[\"red\",\"green\",\"red\"],\"legend\":\"function (value) { if (value>0) return \\\"<span style='color:#FFFFFF;'>\\\"+value+\\\" V</span>\\\"; else return; }\",\"legendColor\":\"#101010\",\"legendAlign\":\"center\"},\"title\":\"Supply\",\"field\":\"supply\",\"formatter\":\"progress\",\"width\":100,\"headerVertical\":\"flip\"},{\"formatterParams\":{\"min\":0,\"max\":100,\"color\":[\"red\",\"orange\",\"green\"],\"legend\":\"function (value) {     if (value>0)         return \\\"<span style='color:#FFFFFF;'>\\\"+value+\\\" %</span>\\\";     else         return; }\",\"legendColor\":\"#101010\",\"legendAlign\":\"center\"},\"title\":\"Battery\",\"field\":\"battery\",\"formatter\":\"progress\",\"width\":100,\"headerVertical\":\"flip\"},{\"formatterParams\":{\"min\":0,\"max\":100000,\"color\":[\"red\",\"orange\",\"green\"],\"legend\":\"function (value) { if (value>0) return \\\"<span style='color:#FFFFFF;'>\\\"+(value/1024).toFixed(2)+\\\" kB</span>\\\"; else return; }\",\"legendColor\":\"#101010\",\"legendAlign\":\"center\"},\"title\":\"Memory\",\"field\":\"freeheap\",\"formatter\":\"progress\",\"width\":100,\"headerVertical\":\"flip\"},{\"formatterParams\":{\"target\":\"_blank\",\"min\":0,\"max\":100,\"color\":[\"red\",\"orange\",\"green\"],\"legend\":\"function (value) {     if (value>0)         return \\\"<span style='color:#FFFFFF;'>\\\"+value+\\\" %</span>\\\";     else         return; }\",\"legendColor\":\"#101010\",\"legendAlign\":\"center\"},\"title\":\"CPU load\",\"field\":\"cpuload\",\"formatter\":\"progress\",\"width\":100,\"headerVertical\":\"flip\"},{\"formatterParams\":{\"min\":20,\"max\":60,\"color\":[\"green\",\"orange\",\"red\"],\"legend\":\"function (value) { if (value>0) return \\\"<span style='color:#FFFFFF;'>\\\"+value+\\\" °C</span>\\\"; else return; }\",\"legendColor\":\"#101010\",\"legendAlign\":\"center\"},\"title\":\"CPU temp\",\"field\":\"cputemp\",\"formatter\":\"progress\",\"width\":100,\"headerVertical\":\"flip\"}]},{\"title\":\"Firmware\",\"columns\":[{\"formatter\":\"link\",\"formatterParams\":{\"labelField\":\"$localip\",\"urlPrefix\":\"http://\",\"target\":\"_blank\"},\"title\":\"IP\",\"field\":\"$localip\",\"width\":100},{\"title\":\"mac\",\"field\":\"$mac\",\"width\":100},{\"title\":\"Accsess Point\",\"field\":\"SSID\",\"width\":100},{\"title\":\"Firmware\",\"field\":\"name\",\"width\":100},{\"title\":\"Version\",\"field\":\"version\",\"width\":100},{\"title\":\"Last Boot Cause\",\"field\":\"lastBootCause\",\"width\":100},{\"title\":\"Reset Reason\",\"field\":\"resetReason\",\"width\":100}]}]},\"customHeight\":12}",
                "ui": {
                    "icon": "font-awesome/fa-table",
                    "label": {
                        "en-US": "Tabulator"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "json",
                            "env"
                        ]
                    }
                }
            },
            {
                "name": "tableDataProp",
                "type": "str",
                "value": "row",
                "ui": {
                    "icon": "font-awesome/fa-tag",
                    "label": {
                        "en-US": "rowProperty"
                    }
                }
            },
            {
                "name": "tableIndex",
                "type": "str",
                "value": "$topic",
                "ui": {
                    "icon": "font-awesome/fa-indent",
                    "label": {
                        "en-US": "Index"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "str",
                            "json",
                            "env"
                        ]
                    }
                }
            },
            {
                "name": "maxRows",
                "type": "num",
                "value": "0",
                "ui": {
                    "icon": "font-awesome/fa-list-ol",
                    "type": "input",
                    "opts": {
                        "types": [
                            "num",
                            "bool",
                            "env"
                        ]
                    }
                }
            },
            {
                "name": "maxStore",
                "type": "num",
                "value": "0",
                "ui": {
                    "icon": "font-awesome/fa-database",
                    "type": "input",
                    "opts": {
                        "types": [
                            "num",
                            "env"
                        ]
                    }
                }
            },
            {
                "name": "dashboard",
                "type": "str",
                "value": "Remote Device Table",
                "ui": {
                    "icon": "font-awesome/fa-dashboard",
                    "label": {
                        "en-US": "Dashboard"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "str",
                            "env"
                        ]
                    }
                }
            },
            {
                "name": "tableContext",
                "type": "json",
                "value": "{\"tableData\":{\"name\":\"tableData\"},\"tableConfig\":{\"name\":\"tableConfig\",\"storage\":\"file\"},\"tableEdit\":{\"name\":\"tableEdit\",\"storage\":\"file\"}}",
                "ui": {
                    "icon": "font-awesome/fa-database",
                    "label": {
                        "en-US": "Context"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "json",
                            "env"
                        ]
                    }
                }
            }
        ],
        "color": "#3FADB5",
        "icon": "node-red-dashboard/ui_slider.png",
        "status": {
            "x": 360,
            "y": 34,
            "wires": [
                {
                    "id": "5eb0bd6b.74b794",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "b6a1f6a2.91de88",
        "type": "ui_base",
        "theme": {
            "name": "theme-custom",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#ffffff",
                "baseFont": "Arial Black,Arial Black,Gadget,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#3edc74",
                    "value": "#ffffff",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#080303",
                    "edited": true
                },
                "page-backgroundColor": {
                    "value": "#52525e",
                    "edited": true
                },
                "page-sidebar-backgroundColor": {
                    "value": "#082ac4",
                    "edited": true
                },
                "group-textColor": {
                    "value": "#04fc25",
                    "edited": true
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": true
                },
                "group-backgroundColor": {
                    "value": "#ccc7c7",
                    "edited": true
                },
                "widget-textColor": {
                    "value": "#ededf7",
                    "edited": true
                },
                "widget-backgroundColor": {
                    "value": "#575757",
                    "edited": true
                },
                "widget-borderColor": {
                    "value": "#34343d",
                    "edited": true
                },
                "base-font": {
                    "value": "Arial Black,Arial Black,Gadget,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey"
            }
        },
        "site": {
            "name": "                                                         iSensPro",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "true",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 60,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 2,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "5932c310.1c96d4",
        "type": "postgresdb",
        "hostname": "localhost",
        "port": "5432",
        "db": "foo",
        "ssl": false
    },
    {
        "id": "74bfc636.269f68",
        "type": "postgresDB",
        "name": "postgres@127.0.0.1:5432/testdb2",
        "host": "127.0.0.1",
        "hostFieldType": "str",
        "port": "5432",
        "portFieldType": "num",
        "database": "testdb2",
        "databaseFieldType": "str",
        "ssl": "false",
        "sslFieldType": "bool",
        "max": "10",
        "maxFieldType": "num",
        "min": "1",
        "minFieldType": "num",
        "idle": "1000",
        "idleFieldType": "num",
        "user": "postgres",
        "userFieldType": "str",
        "password": "19Glasgow69",
        "passwordFieldType": "str"
    },
    {
        "id": "de6b1325.f01d58",
        "type": "postgresDB",
        "name": "postgres@127.0.0.1:5432/sensor_data",
        "host": "127.0.0.1",
        "hostFieldType": "str",
        "port": "5432",
        "portFieldType": "num",
        "database": "sensor_data",
        "databaseFieldType": "str",
        "ssl": "false",
        "sslFieldType": "bool",
        "max": "50",
        "maxFieldType": "num",
        "min": "1",
        "minFieldType": "num",
        "idle": "1",
        "idleFieldType": "num",
        "user": "postgres",
        "userFieldType": "str",
        "password": "isenspro",
        "passwordFieldType": "str"
    },
    {
        "id": "de28406b.eebd5",
        "type": "postgresDB",
        "name": "postgres@127.0.0.1:5432/sensor_data",
        "host": "127.0.0.1",
        "hostFieldType": "str",
        "port": "5432",
        "portFieldType": "num",
        "database": "sensor_data",
        "databaseFieldType": "str",
        "ssl": "false",
        "sslFieldType": "bool",
        "max": "10",
        "maxFieldType": "num",
        "min": "1",
        "minFieldType": "num",
        "idle": "1",
        "idleFieldType": "num",
        "user": "postgres",
        "userFieldType": "str",
        "password": "isenspro",
        "passwordFieldType": "str"
    },
    {
        "id": "1ff97cd4.681d5b",
        "type": "ui_tab",
        "name": "GrafanaTest",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "579134ab.a3cad4",
        "type": "ui_tab",
        "name": "graph",
        "icon": "timeline",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "4d8d2f83.26819",
        "type": "ui_tab",
        "name": "Customer Settings",
        "icon": "settings",
        "order": 3,
        "disabled": false,
        "hidden": true
    },
    {
        "id": "ab5ede70.ae4df8",
        "type": "postgresDB",
        "name": "postgres@127.0.0.1:5432/bridge_config",
        "host": "127.0.0.1",
        "hostFieldType": "str",
        "port": "5432",
        "portFieldType": "num",
        "database": "bridge_config",
        "databaseFieldType": "str",
        "ssl": "false",
        "sslFieldType": "bool",
        "max": "10",
        "maxFieldType": "num",
        "min": "1",
        "minFieldType": "num",
        "idle": "1",
        "idleFieldType": "num",
        "user": "postgres",
        "userFieldType": "str",
        "password": "isenspro",
        "passwordFieldType": "str"
    },
    {
        "id": "6733d493.9cca6c",
        "type": "postgresDB",
        "name": "postgres@127.0.0.1:5432/sensor_config",
        "host": "127.0.0.1",
        "hostFieldType": "str",
        "port": "5432",
        "portFieldType": "num",
        "database": "sensor_config",
        "databaseFieldType": "str",
        "ssl": "false",
        "sslFieldType": "bool",
        "max": "50",
        "maxFieldType": "num",
        "min": "1",
        "minFieldType": "num",
        "idle": "1",
        "idleFieldType": "num",
        "user": "postgres",
        "userFieldType": "str",
        "password": "isenspro",
        "passwordFieldType": "str"
    },
    {
        "id": "53f3f43e.6ee9dc",
        "type": "postgresDB",
        "name": "postgres@127.0.0.1:5432/gateway_config",
        "host": "127.0.0.1",
        "hostFieldType": "str",
        "port": "5432",
        "portFieldType": "num",
        "database": "gateway_config",
        "databaseFieldType": "str",
        "ssl": "false",
        "sslFieldType": "bool",
        "max": "10",
        "maxFieldType": "num",
        "min": "1",
        "minFieldType": "num",
        "idle": "1",
        "idleFieldType": "num",
        "user": "postgres",
        "userFieldType": "str",
        "password": "isenspro",
        "passwordFieldType": "str"
    },
    {
        "id": "47fd9ead.7e0dd8",
        "type": "postgresDB",
        "name": "@127.0.0.1:5432/customer_config",
        "host": "127.0.0.1",
        "hostFieldType": "str",
        "port": "5432",
        "portFieldType": "num",
        "database": "customer_config",
        "databaseFieldType": "str",
        "ssl": "false",
        "sslFieldType": "bool",
        "max": "50",
        "maxFieldType": "num",
        "min": "1",
        "minFieldType": "num",
        "idle": "1",
        "idleFieldType": "num",
        "user": "postgres",
        "userFieldType": "str",
        "password": "isenspro",
        "passwordFieldType": "str"
    },
    {
        "id": "5e8771da.5e3118",
        "type": "ui_group",
        "name": "longitude",
        "tab": "adfd65ab.59a5f",
        "order": 2,
        "disp": false,
        "width": "5",
        "collapse": false
    },
    {
        "id": "b9a86460.45fb5",
        "type": "ui_group",
        "name": "map",
        "tab": "adfd65ab.59a5f",
        "order": 3,
        "disp": false,
        "width": "13",
        "collapse": false
    },
    {
        "id": "ff3870f1.2378b",
        "type": "ui_group",
        "name": "Country",
        "tab": "adfd65ab.59a5f",
        "order": 4,
        "disp": false,
        "width": "5",
        "collapse": false
    },
    {
        "id": "adfd65ab.59a5f",
        "type": "ui_tab",
        "name": "This computer",
        "icon": "computer",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "35f430aa.219838",
        "type": "ui_group",
        "name": "Customer Selection (click to update)",
        "tab": "4d8d2f83.26819",
        "order": 1,
        "disp": true,
        "width": "20",
        "collapse": false
    },
    {
        "id": "4b09e848.a45888",
        "type": "ui_group",
        "name": "Area",
        "tab": "4d8d2f83.26819",
        "order": 3,
        "disp": true,
        "width": "10",
        "collapse": false
    },
    {
        "id": "16497c3d.5fc65c",
        "type": "ui_group",
        "name": "Sensor",
        "tab": "4d8d2f83.26819",
        "order": 4,
        "disp": true,
        "width": 3,
        "collapse": false
    },
    {
        "id": "ce8735cb.a26fe8",
        "type": "ui_group",
        "name": "Bridge",
        "tab": "4d8d2f83.26819",
        "order": 5,
        "disp": true,
        "width": 3,
        "collapse": false
    },
    {
        "id": "44c5de85.856cc",
        "type": "ui_group",
        "name": "grafana",
        "tab": "579134ab.a3cad4",
        "order": 1,
        "disp": true,
        "width": "30",
        "collapse": false
    },
    {
        "id": "f27d9792.709888",
        "type": "ui_group",
        "name": "Group 1",
        "tab": "e930e09f.cf58",
        "order": 2,
        "disp": true,
        "width": 6
    },
    {
        "id": "e930e09f.cf58",
        "type": "ui_tab",
        "name": "Tab 2",
        "icon": "dashboard",
        "order": 7
    },
    {
        "id": "cec06512.a43738",
        "type": "ui_group",
        "name": "Formatted",
        "tab": "b4be09eb.9c2dc",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "810d7da4.fff398",
        "type": "ui_group",
        "name": "Un-Formatted",
        "tab": "b4be09eb.9c2dc",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "b4be09eb.9c2dc",
        "type": "ui_tab",
        "name": "Meeki Test",
        "icon": "dashboard",
        "order": 6,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "e647361f.7a4908",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "order": 8,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "67b5d208.7be444",
        "type": "ui_group",
        "name": "Google sheets",
        "tab": "8176611d.cfaa1",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "8176611d.cfaa1",
        "type": "ui_tab",
        "name": "Submit form to google sheets",
        "icon": "dashboard",
        "order": 9,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "700e0299.f39d8c",
        "type": "ui_tab",
        "d": true,
        "name": "Home",
        "icon": "dashboard",
        "order": 10,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "cd895ba5.a7168",
        "type": "ui_tab",
        "name": "newTable",
        "icon": "dashboard",
        "order": 11,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "379a501f.53b59",
        "type": "ui_tab",
        "name": "ui-table command",
        "icon": "fa-table",
        "order": 12,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "a1c14418.954cd8",
        "type": "ui_tab",
        "name": "ui-table test",
        "icon": "dashboard",
        "order": 13,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "d9755f90.aefdc8",
        "type": "ui_group",
        "name": "Group",
        "tab": "e930e09f.cf58",
        "order": 1,
        "disp": true,
        "width": 6
    },
    {
        "id": "f50f05a6.b79b88",
        "type": "ui_group",
        "name": "Customer Data",
        "tab": "4d8d2f83.26819",
        "order": 2,
        "disp": true,
        "width": "20",
        "collapse": false
    },
    {
        "id": "3fb1010f.83e41e",
        "type": "remote-config",
        "name": "Node-RED UI",
        "host": "localhost",
        "protocol": "http",
        "port": "1880",
        "baseurl": "/ui",
        "instancehash": "oe7qehoas1z9gnd3tstg745zat085ponw0zcti04f2cwg9uy7s1g6xg8pg7m8574",
        "server": "nodered02.remote-red.com",
        "region": "de"
    },
    {
        "id": "e21e4642.c12f6",
        "type": "mqtt-broker",
        "name": "",
        "broker": "/ws/mqtt",
        "port": "1885",
        "clientid": "",
        "usetls": false,
        "compatmode": false,
        "protocolVersion": "5",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "isenspro started",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "9b2b343e.8ba328",
        "type": "telegram bot",
        "botname": "config",
        "usernames": "",
        "chatids": "1866897836",
        "baseapiurl": "",
        "updatemode": "polling",
        "pollinterval": "1000",
        "usesocks": false,
        "sockshost": "",
        "socksport": "6667",
        "socksusername": "anonymous",
        "sockspassword": "",
        "bothost": "",
        "botpath": "",
        "localbotport": "8443",
        "publicbotport": "8443",
        "privatekey": "",
        "certificate": "",
        "useselfsignedcertificate": false,
        "sslterminated": false,
        "verboselogging": true
    },
    {
        "id": "c0c78039.fb5a58",
        "type": "postgresDB",
        "name": "postgres",
        "host": "127.0.0.1",
        "hostFieldType": "str",
        "port": "5432",
        "portFieldType": "num",
        "database": "postgres",
        "databaseFieldType": "str",
        "ssl": "false",
        "sslFieldType": "bool",
        "max": "10",
        "maxFieldType": "num",
        "min": "2",
        "minFieldType": "num",
        "idle": "1",
        "idleFieldType": "num",
        "user": "postgres",
        "userFieldType": "str",
        "password": "isenspro",
        "passwordFieldType": "str"
    },
    {
        "id": "a775e4e2.db3998",
        "type": "postgresDB",
        "name": "postgres@127.0.0.1:5432/weather_data",
        "host": "127.0.0.1",
        "hostFieldType": "str",
        "port": "5432",
        "portFieldType": "num",
        "database": "weather_data",
        "databaseFieldType": "str",
        "ssl": "false",
        "sslFieldType": "bool",
        "max": "25",
        "maxFieldType": "num",
        "min": "1",
        "minFieldType": "num",
        "idle": "1",
        "idleFieldType": "num",
        "user": "postgres",
        "userFieldType": "str",
        "password": "isenspro",
        "passwordFieldType": "str"
    },
    {
        "id": "dc726705.a597c8",
        "type": "serial-port",
        "serialport": "/dev/ttyACM0",
        "serialbaud": "115200",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": false,
        "responsetimeout": "50000"
    },
    {
        "id": "bbc3532f.41ca7",
        "type": "ui_group",
        "name": "Bathroom",
        "tab": "1ff97cd4.681d5b",
        "order": 1,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "1f606473.d8ad9c",
        "type": "ngrokauth",
        "name": ""
    },
    {
        "id": "ce8b884.b3726f8",
        "type": "ui_group",
        "name": "Time",
        "tab": "adfd65ab.59a5f",
        "order": 1,
        "disp": false,
        "width": "6",
        "collapse": false
    },
    {
        "id": "6b1f1186.74445",
        "type": "ui_tab",
        "name": "Configuration",
        "icon": "settings",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "59f11dff.1c54d4",
        "type": "postgresDB",
        "name": "customer_geom",
        "host": "127.0.0.1",
        "hostFieldType": "str",
        "port": "5432",
        "portFieldType": "num",
        "database": "customer_geom",
        "databaseFieldType": "str",
        "ssl": "false",
        "sslFieldType": "bool",
        "max": "10",
        "maxFieldType": "num",
        "min": "1",
        "minFieldType": "num",
        "idle": "1",
        "idleFieldType": "num",
        "user": "postgres",
        "userFieldType": "str",
        "password": "isenspro",
        "passwordFieldType": "str"
    },
    {
        "id": "9eb70b76.24bc",
        "type": "ui_group",
        "name": "test",
        "tab": "700e0299.f39d8c",
        "order": 1,
        "disp": true,
        "width": "20",
        "collapse": false
    },
    {
        "id": "6467854a.60785c",
        "type": "ui_group",
        "name": "Node-RED",
        "tab": "d2d722c.92e12e",
        "order": 1,
        "disp": true,
        "width": "16",
        "collapse": false
    },
    {
        "id": "d2d722c.92e12e",
        "type": "ui_tab",
        "name": "IFrame03",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "ac145052.878c48",
        "type": "ui_group",
        "name": "Default",
        "tab": "c80963a7.f1cc98",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "c80963a7.f1cc98",
        "type": "ui_tab",
        "name": "test",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "1b214600.17935a",
        "type": "ui_group",
        "name": "Default",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "26332cb7.024dd4",
        "type": "ui_group",
        "name": "Default",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "c925f0a1.c2066",
        "type": "ui_group",
        "name": "Group 1",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": 6
    },
    {
        "id": "4b6331ce.8d9e38",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ac429162.f5e53",
        "order": 11,
        "width": "12",
        "height": "3"
    },
    {
        "id": "77d77046.ab1d1",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "f85a53ed.889968",
        "order": 12,
        "width": "12",
        "height": "3"
    },
    {
        "id": "7980cb65.097bf4",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "a66eb97d.54124",
        "order": 13,
        "width": "6",
        "height": "3"
    },
    {
        "id": "f12df54.fdd1f08",
        "type": "ui_group",
        "name": "LEFT",
        "tab": "6b1f1186.74445",
        "order": 1,
        "disp": false,
        "width": "12",
        "collapse": false
    },
    {
        "id": "f726791c.9d1d88",
        "type": "ui_group",
        "name": "MIDDLE",
        "tab": "6b1f1186.74445",
        "order": 2,
        "disp": false,
        "width": "6",
        "collapse": false
    },
    {
        "id": "92957720.d414",
        "type": "ui_group",
        "name": "RIGHT",
        "tab": "6b1f1186.74445",
        "order": 3,
        "disp": false,
        "width": "12",
        "collapse": false
    },
    {
        "id": "c39cfd51.14f1c",
        "type": "ui_group",
        "name": "camFoscam",
        "tab": "",
        "order": 13,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "fd6c249c.71f2d8",
        "type": "serial-port",
        "serialport": "/dev/ttyACM1",
        "serialbaud": "115200",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": false,
        "responsetimeout": "50000"
    },
    {
        "id": "50f22906.5ea4b",
        "type": "serial-port",
        "serialport": "/dev/ttyACM2",
        "serialbaud": "115200",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": false,
        "responsetimeout": "50000"
    },
    {
        "id": "6787392.d78b7c8",
        "type": "postgresDB",
        "name": "postgres@127.0.0.1:5432/translations",
        "host": "127.0.0.1",
        "hostFieldType": "str",
        "port": "5432",
        "portFieldType": "num",
        "database": "translations",
        "databaseFieldType": "str",
        "ssl": "false",
        "sslFieldType": "bool",
        "max": "50",
        "maxFieldType": "num",
        "min": "1",
        "minFieldType": "num",
        "idle": "1000",
        "idleFieldType": "num",
        "user": "postgres",
        "userFieldType": "str",
        "password": "isenspro",
        "passwordFieldType": "str"
    },
    {
        "id": "d6060f19.2b834",
        "type": "ui_group",
        "name": "Default",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "65dfd687.bc39a8",
        "type": "ui_group",
        "name": "Default",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "93a37a7d.51539",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "f12df54.fdd1f08",
        "order": 1,
        "width": 6,
        "height": "2"
    },
    {
        "id": "3b11038a.8bdd8c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "f12df54.fdd1f08",
        "order": 15,
        "width": 12,
        "height": 1
    },
    {
        "id": "c7cd070c.d934",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "92957720.d414",
        "order": 2,
        "width": "6",
        "height": "2"
    },
    {
        "id": "49e460eb.15138",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "92957720.d414",
        "order": 15,
        "width": 12,
        "height": 1
    },
    {
        "id": "951e51e1.166a48",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "92957720.d414",
        "order": 17,
        "width": 6,
        "height": "2"
    },
    {
        "id": "8badf1b1.498b18",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "3662e2de.7d5436",
        "type": "ui_tab",
        "name": "Start",
        "icon": "dashboard"
    },
    {
        "id": "620ee91c.a9a9e8",
        "type": "ui_tab",
        "name": "Text-Button",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "ba57f312.05d2d8",
        "type": "ui_tab",
        "name": "Dashboard",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "3de6ad51.9f3582",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "f12df54.fdd1f08",
        "order": 16,
        "width": "6",
        "height": "2"
    },
    {
        "id": "19ec838a.d731e4",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "f726791c.9d1d88",
        "order": 10,
        "width": "6",
        "height": 1
    },
    {
        "id": "3794180a.7bf398",
        "type": "inject",
        "z": "48325126.46d01",
        "name": "",
        "props": [
            {
                "p": "payload",
                "v": "",
                "vt": "date"
            },
            {
                "p": "topic",
                "v": "msft",
                "vt": "string"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "msft",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 360,
        "wires": [
            [
                "b60de237.87ba6"
            ]
        ]
    },
    {
        "id": "b60de237.87ba6",
        "type": "http request",
        "z": "48325126.46d01",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://www.alphavantage.co/query?function=TIME_SERIES_DAILY_ADJUSTED&symbol=MSFT&apikey=demo&datatype=csv",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 290,
        "y": 360,
        "wires": [
            [
                "c97fd692.0358b8"
            ]
        ]
    },
    {
        "id": "c97fd692.0358b8",
        "type": "csv",
        "z": "48325126.46d01",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 430,
        "y": 360,
        "wires": [
            [
                "3919a1e4.b46a4e",
                "bf9bc6cf.6e1988"
            ]
        ]
    },
    {
        "id": "c7ee1c15.fb1e8",
        "type": "inject",
        "z": "48325126.46d01",
        "name": "",
        "props": [
            {
                "p": "payload",
                "v": "",
                "vt": "date"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "string"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 480,
        "wires": [
            [
                "8dec8515.3cb388"
            ]
        ]
    },
    {
        "id": "2be77a45.f0f236",
        "type": "comment",
        "z": "48325126.46d01",
        "name": "Setup Timescale database",
        "info": "",
        "x": 150,
        "y": 40,
        "wires": []
    },
    {
        "id": "f431c230.7d731",
        "type": "comment",
        "z": "48325126.46d01",
        "name": "Query the database",
        "info": "",
        "x": 110,
        "y": 440,
        "wires": []
    },
    {
        "id": "bfdb757.feb3388",
        "type": "comment",
        "z": "48325126.46d01",
        "name": "Embed Grafana dashboard in Dashboard UI",
        "info": "",
        "x": 610,
        "y": 520,
        "wires": []
    },
    {
        "id": "b5bf86a8.dc5c58",
        "type": "ui_template",
        "z": "48325126.46d01",
        "group": "f27d9792.709888",
        "name": "Grafana dashboard",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<div ng-bind-html=\"msg.payload | trusted\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 470,
        "y": 480,
        "wires": [
            [
                "34a20d1.413c872"
            ]
        ]
    },
    {
        "id": "3919a1e4.b46a4e",
        "type": "debug",
        "z": "48325126.46d01",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 300,
        "wires": []
    },
    {
        "id": "4f654e8c.c18ef",
        "type": "inject",
        "z": "48325126.46d01",
        "name": "stockdb::database",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "stockdb",
        "payloadType": "str",
        "x": 140,
        "y": 80,
        "wires": [
            [
                "43259f2e.d3f8d8",
                "e126f07a.97493"
            ]
        ]
    },
    {
        "id": "43259f2e.d3f8d8",
        "type": "debug",
        "z": "48325126.46d01",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 450,
        "y": 20,
        "wires": []
    },
    {
        "id": "5498d534.e9cc54",
        "type": "comment",
        "z": "460f2b8f.a23dbc",
        "name": "Reset",
        "info": "This flow clears any contents from\nthe `mytable` table and inserts a single\nrecord:\n\n    id   message\n    1    'hello world'\n",
        "x": 90,
        "y": 40,
        "wires": []
    },
    {
        "id": "2ef9ce55.1ee282",
        "type": "inject",
        "z": "460f2b8f.a23dbc",
        "name": "click me",
        "props": [
            {
                "p": "payload",
                "v": "",
                "vt": "date"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "string"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 100,
        "wires": [
            [
                "98595979.a97fe"
            ]
        ]
    },
    {
        "id": "98595979.a97fe",
        "type": "function",
        "z": "460f2b8f.a23dbc",
        "name": "prepare",
        "func": "\nmsg.payload = [\n    {\n        query: 'begin',\n    },\n    {\n        query: 'delete from mytable',\n    },\n    {\n        query: 'insert into mytable (id, message) values ($1, $2)',\n        params: [1, 'hello world'],\n    },\n    {\n        query: 'select * from mytable',\n        output: true,\n    },\n    {\n        query: 'commit',\n    },\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 100,
        "wires": [
            [
                "30d1db79.179dd4"
            ]
        ]
    },
    {
        "id": "30d1db79.179dd4",
        "type": "postgres",
        "z": "460f2b8f.a23dbc",
        "postgresdb": "5932c310.1c96d4",
        "name": "",
        "output": true,
        "outputs": 1,
        "x": 480,
        "y": 100,
        "wires": [
            [
                "87793132.0d9d88"
            ]
        ]
    },
    {
        "id": "87793132.0d9d88",
        "type": "debug",
        "z": "460f2b8f.a23dbc",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 679.5,
        "y": 100,
        "wires": []
    },
    {
        "id": "27e47fba.f5896",
        "type": "comment",
        "z": "460f2b8f.a23dbc",
        "name": "Demo",
        "info": "This flow demonstrates:\n\n* transactions and auto-commit queries\n* positional arguments (i.e. $argName)\n* query output from multiple queries\n",
        "x": 86.5,
        "y": 182,
        "wires": []
    },
    {
        "id": "2de05c89.ff8454",
        "type": "inject",
        "z": "460f2b8f.a23dbc",
        "name": "click me",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 240,
        "wires": [
            [
                "b5127483.4ae8d8"
            ]
        ]
    },
    {
        "id": "b5127483.4ae8d8",
        "type": "function",
        "z": "460f2b8f.a23dbc",
        "name": "prepare",
        "func": "\nmsg.payload = [\n    {\n        query: 'begin',\n    },\n    {\n        query: 'delete from mytable',\n    },\n    {\n        query:\n            'insert into mytable (id, message) ' +\n            'values ($foo, $bar), ($baz, $boop)',\n        params: {\n            foo: 10,\n            bar: 'hello',\n            baz: 20,\n            boop: 'world',\n        },\n    },\n    {\n        query: 'commit',\n    },\n    {\n        query: 'select * from mytable',\n        output: true,\n    },\n    {\n        query: 'insert into mytable (id, message) values (30, \\'xtra\\')',\n    },\n    {\n        query: 'select message from mytable order by id',\n        output: true,\n    },\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 300,
        "y": 240,
        "wires": [
            [
                "6308b299.b5a87c"
            ]
        ]
    },
    {
        "id": "6308b299.b5a87c",
        "type": "postgres",
        "z": "460f2b8f.a23dbc",
        "postgresdb": "5932c310.1c96d4",
        "name": "",
        "output": true,
        "outputs": 1,
        "x": 480,
        "y": 240,
        "wires": [
            [
                "68797b5f.c0a3ec"
            ]
        ]
    },
    {
        "id": "68797b5f.c0a3ec",
        "type": "debug",
        "z": "460f2b8f.a23dbc",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 679.5,
        "y": 240,
        "wires": []
    },
    {
        "id": "35f6d8a5.a36018",
        "type": "comment",
        "z": "460f2b8f.a23dbc",
        "name": "Rollback",
        "info": "If you start a transaction and don't commit it,\nyour changes will not be saved.",
        "x": 100,
        "y": 320,
        "wires": []
    },
    {
        "id": "ba356a1b.b7c2e8",
        "type": "inject",
        "z": "460f2b8f.a23dbc",
        "name": "click me",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 380,
        "wires": [
            [
                "73628965.7539d8"
            ]
        ]
    },
    {
        "id": "73628965.7539d8",
        "type": "function",
        "z": "460f2b8f.a23dbc",
        "name": "prepare",
        "func": "\nmsg.payload = [\n    {\n        query: 'begin',\n    },\n    {\n        query: 'delete from mytable',\n    },\n    {\n        query:\n            'insert into mytable (id, message) ' +\n            'values ($foo, $bar), ($baz, $boop), ($bing, $bang)',\n        params: {\n            foo: 10,\n            bar: 'one does not simply',\n            baz: 20,\n            boop: 'begin',\n            bing: 30,\n            bang: 'but not commit',\n        },\n    },\n    {\n        query: 'select message from mytable order by id',\n        output: true,\n    },\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 300,
        "y": 380,
        "wires": [
            [
                "f7c2f77b.85d6b8"
            ]
        ]
    },
    {
        "id": "f7c2f77b.85d6b8",
        "type": "postgres",
        "z": "460f2b8f.a23dbc",
        "postgresdb": "5932c310.1c96d4",
        "name": "",
        "output": true,
        "outputs": 1,
        "x": 480,
        "y": 380,
        "wires": [
            [
                "77248a23.6a48b4",
                "b5a1d7d5.4301a8"
            ]
        ]
    },
    {
        "id": "77248a23.6a48b4",
        "type": "debug",
        "z": "460f2b8f.a23dbc",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 679.5,
        "y": 380,
        "wires": []
    },
    {
        "id": "b5a1d7d5.4301a8",
        "type": "function",
        "z": "460f2b8f.a23dbc",
        "name": "check",
        "func": "\nmsg.payload = [\n    {\n        query: 'select message from mytable order by id',\n        output: true,\n    },\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 290,
        "y": 460,
        "wires": [
            [
                "d8d8e5bc.f76488"
            ]
        ]
    },
    {
        "id": "d8d8e5bc.f76488",
        "type": "postgres",
        "z": "460f2b8f.a23dbc",
        "postgresdb": "5932c310.1c96d4",
        "name": "",
        "output": true,
        "outputs": 1,
        "x": 480,
        "y": 460,
        "wires": [
            [
                "b0f96526.7a4648"
            ]
        ]
    },
    {
        "id": "b0f96526.7a4648",
        "type": "debug",
        "z": "460f2b8f.a23dbc",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 679.5,
        "y": 460,
        "wires": []
    },
    {
        "id": "5e1bff26.0208c",
        "type": "exec",
        "z": "48325126.46d01",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 530,
        "y": 80,
        "wires": [
            [
                "30f8a446.b9f754"
            ],
            [],
            []
        ]
    },
    {
        "id": "e126f07a.97493",
        "type": "template",
        "z": "48325126.46d01",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "echo '\\x \\\\ DROP DATABASE IF EXISTS {{payload}};' | psql -U postgres -h localhost\n\necho '\\x \\\\ CREATE DATABASE {{payload}};' | psql -U postgres -h localhost\necho '\\x \\\\ CREATE EXTENSION IF NOT EXISTS timescaledb CASCADE;' | psql -U postgres -h localhost\n ",
        "output": "str",
        "x": 380,
        "y": 80,
        "wires": [
            [
                "5e1bff26.0208c"
            ]
        ]
    },
    {
        "id": "1830056.7b594fb",
        "type": "postgrestor",
        "z": "48325126.46d01",
        "name": "stockdb@localhost",
        "query": "DROP TABLE IF EXISTS {{ msg.topic }} CASCADE;\n\nCREATE TABLE {{ msg.topic }}\n(\n    time TIMESTAMPTZ NOT NULL,\n    company text COLLATE pg_catalog.\"default\" NOT NULL,\n    datum date NOT NULL,\n    open numeric,\n    high numeric,\n    low numeric,\n    close numeric,\n    volume numeric,\n    adjclose numeric,\n    dividend numeric,\n    split numeric,\n    CONSTRAINT stock_pkey PRIMARY KEY (company, datum)\n)\nWITH (\n    OIDS = FALSE\n)\nTABLESPACE pg_default;\n",
        "postgresDB": "de28406b.eebd5",
        "output": true,
        "outputs": 1,
        "x": 290,
        "y": 140,
        "wires": [
            [
                "8fab1a27.a61e98"
            ]
        ]
    },
    {
        "id": "30f8a446.b9f754",
        "type": "debug",
        "z": "48325126.46d01",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 80,
        "wires": []
    },
    {
        "id": "ec01adab.9980a8",
        "type": "inject",
        "z": "48325126.46d01",
        "name": "stocks:table",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "stocks",
        "x": 110,
        "y": 140,
        "wires": [
            [
                "1830056.7b594fb"
            ]
        ]
    },
    {
        "id": "c5b096a9.f5a318",
        "type": "comment",
        "z": "48325126.46d01",
        "name": "Write time serie to database",
        "info": "",
        "x": 140,
        "y": 300,
        "wires": []
    },
    {
        "id": "8fab1a27.a61e98",
        "type": "template",
        "z": "48325126.46d01",
        "name": "Create hypertable",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "echo '\\x \\\\ SELECT create_hypertable('{{ msg.topic }}', 'time');' | psql -U postgres -h localhost -d stockdb\n\n",
        "output": "str",
        "x": 510,
        "y": 140,
        "wires": [
            [
                "d775a457.54c268"
            ]
        ]
    },
    {
        "id": "d775a457.54c268",
        "type": "exec",
        "z": "48325126.46d01",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 690,
        "y": 140,
        "wires": [
            [
                "56056fea.6e7238"
            ],
            [],
            []
        ]
    },
    {
        "id": "56056fea.6e7238",
        "type": "debug",
        "z": "48325126.46d01",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 140,
        "wires": []
    },
    {
        "id": "8dec8515.3cb388",
        "type": "postgrestor",
        "z": "48325126.46d01",
        "name": "stockdb@localhost",
        "query": "SELECT * FROM stocks;",
        "postgresDB": "de6b1325.f01d58",
        "output": true,
        "outputs": 1,
        "x": 270,
        "y": 480,
        "wires": [
            [
                "b5bf86a8.dc5c58"
            ]
        ]
    },
    {
        "id": "bf9bc6cf.6e1988",
        "type": "postgrestor",
        "z": "48325126.46d01",
        "name": "stockdb@localhost",
        "query": "INSERT INTO stocks (time, company, datum, open, high, low, close, adjclose, volume, dividend, split) VALUES\n('{{msg.payload.timestamp}}', '{{msg.topic}}', '{{msg.payload.timestamp}}', '{{msg.payload.open}}', '{{msg.payload.high}}', '{{msg.payload.low}}', '{{msg.payload.close}}', '{{msg.payload.adjusted_close}}', '{{msg.payload.volume}}', '{{msg.payload.dividend_amount}}','{{msg.payload.split_coefficient}}')\nON CONFLICT (company, datum) \nDO NOTHING;        ",
        "postgresDB": "de6b1325.f01d58",
        "output": true,
        "outputs": 1,
        "x": 610,
        "y": 360,
        "wires": [
            [
                "a9f69ad4.a8127"
            ]
        ]
    },
    {
        "id": "a9f69ad4.a8127",
        "type": "debug",
        "z": "48325126.46d01",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 360,
        "wires": []
    },
    {
        "id": "34a20d1.413c872",
        "type": "ui_iframe",
        "z": "48325126.46d01",
        "group": "f27d9792.709888",
        "name": "",
        "order": 3,
        "width": 0,
        "height": 0,
        "url": "http://localhost:3000/dashboard/snapshot/mHEioMvRpIq9YrRySil39Kc9umFxjtdmorgId=1&amp;refresh=5s&amp;theme=dark&amp;from=now-1m&amp;to=now&amp;viewPanel=2&amp;fullscreen&amp;kiosk",
        "origin": "*",
        "scale": 100,
        "x": 650,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "57265204.9af7f4",
        "type": "comment",
        "z": "3fb5a67.37c495a",
        "name": "Setup local Timescale database",
        "info": "",
        "x": 250,
        "y": 40,
        "wires": []
    },
    {
        "id": "9a2b632b.4225b8",
        "type": "inject",
        "z": "3fb5a67.37c495a",
        "name": "sensor_data::database",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "sensor_data",
        "payloadType": "str",
        "x": 220,
        "y": 80,
        "wires": [
            [
                "434ecf9c.3d5ec8",
                "8b9b31e.d7d285"
            ]
        ]
    },
    {
        "id": "434ecf9c.3d5ec8",
        "type": "debug",
        "z": "3fb5a67.37c495a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 450,
        "y": 40,
        "wires": []
    },
    {
        "id": "1d92c5c3.7e4a52",
        "type": "exec",
        "z": "3fb5a67.37c495a",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 610,
        "y": 60,
        "wires": [
            [
                "c1d32401.6dd9c"
            ],
            [],
            []
        ]
    },
    {
        "id": "8b9b31e.d7d285",
        "type": "template",
        "z": "3fb5a67.37c495a",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "echo '\\x \\\\ DROP DATABASE IF EXISTS {{payload}};' | psql -U postgres -h localhost\n\necho '\\x \\\\ CREATE DATABASE {{payload}};' | psql -U postgres -h localhost\necho '\\x \\\\ CREATE EXTENSION IF NOT EXISTS timescaledb CASCADE;' | psql -U postgres -h localhost -d sensor_data\n\n",
        "output": "str",
        "x": 460,
        "y": 80,
        "wires": [
            [
                "1d92c5c3.7e4a52"
            ]
        ]
    },
    {
        "id": "56f9106c.400288",
        "type": "postgrestor",
        "z": "3fb5a67.37c495a",
        "name": "sensor_data@localhost",
        "query": "DROP TABLE IF EXISTS \"{{ msg.topic }}\" CASCADE;\n\nCREATE TABLE \"{{ msg.topic }}\" (\n\t\"ts\" timestamptz NOT NULL,\n\t\"masterid\" varchar[50] NOT NULL,\n\t\"sensorid\" integer NOT NULL,\n\t\"description\" varchar[50],\n\t\"cap\" integer NOT NULL,\n\t\"accel\" integer NOT NULL,\n\t\"surftemp\" integer NOT NULL,\n\t\"inttemp\" integer NOT NULL,\n\t\"exttemp\" integer NOT NULL,\n\t\"mvbat\" integer NOT NULL,\n\t\"mvnoise\" integer,\n\t\"vhigh\" integer,\n    \"vlow\" integer,\n    \"rcharge\" integer,\n    \"mwindow\" integer,\n    \"mperiod\" integer,\n    \"sequence\" integer,\n    \"average\" integer,\n    \"stdev\" float,\n    \"z\" float,\n\tCONSTRAINT \"sensor_data_table_pk\" PRIMARY KEY (\"ts\")\n) WITH (\n  OIDS=FALSE\n)\nTABLESPACE pg_default;\n",
        "postgresDB": "de28406b.eebd5",
        "output": true,
        "outputs": 1,
        "x": 450,
        "y": 140,
        "wires": [
            [
                "ed31ace2.b85e3"
            ]
        ]
    },
    {
        "id": "c1d32401.6dd9c",
        "type": "debug",
        "z": "3fb5a67.37c495a",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 60,
        "wires": []
    },
    {
        "id": "b2ce536e.a48988",
        "type": "inject",
        "z": "3fb5a67.37c495a",
        "name": "sensor_data_table",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "sensor_data_table",
        "payloadType": "str",
        "x": 210,
        "y": 140,
        "wires": [
            [
                "56f9106c.400288"
            ]
        ]
    },
    {
        "id": "ed31ace2.b85e3",
        "type": "template",
        "z": "3fb5a67.37c495a",
        "name": "Create hypertable",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "echo '\\x \\\\ SELECT create_hypertable('sensorid', 'ts');' | psql -U postgres -h localhost -d sensor_data\n\n",
        "output": "str",
        "x": 670,
        "y": 140,
        "wires": [
            [
                "7402b7eb.026e48"
            ]
        ]
    },
    {
        "id": "7402b7eb.026e48",
        "type": "exec",
        "z": "3fb5a67.37c495a",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 830,
        "y": 140,
        "wires": [
            [
                "f8a7788d.471f9"
            ],
            [],
            []
        ]
    },
    {
        "id": "f8a7788d.471f9",
        "type": "debug",
        "z": "3fb5a67.37c495a",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 990,
        "y": 140,
        "wires": []
    },
    {
        "id": "576ebc93.eba20c",
        "type": "comment",
        "z": "3fb5a67.37c495a",
        "name": "Receive data from Masters & write to Timeseries database",
        "info": "",
        "x": 290,
        "y": 940,
        "wires": []
    },
    {
        "id": "c9c084a.aa364f8",
        "type": "postgrestor",
        "z": "3fb5a67.37c495a",
        "name": "sensor_data@localhost",
        "query": "INSERT INTO sensor_data_table \n(\n    ts, \n    masterid,\n    sensorid,\n    cap, \n    accel, \n    surftemp,\n    inttemp, \n    exttemp, \n    mvbat, \n    mvnoise,\n    vhigh,\n    vlow,\n    rcharge,\n    mwindow,\n    mperiod,\n    sequence,\n    average,\n    stdev,\n    z,\n    description\n) VALUES\n(\n    '{{msg.timestamp}}', \n    '{{{msg.masterid}}}',\n    '{{msg.sensorid}}', \n    '{{msg.cap}}', \n    '{{msg.accel}}', \n    '{{msg.surftemp}}', \n    '{{msg.inttemp}}', \n    '{{msg.exttemp}}', \n    '{{msg.mvbat}}',\n    '{{msg.mvnoise}}',\n    '{{msg.vhigh}}',\n    '{{msg.vlow}}',\n    '{{msg.rcharge}}',\n    '{{msg.mwindow}}',\n    '{{msg.mperiod}}',\n    '{{msg.sequence}}',\n    '{{msg.avg}}',\n    '{{msg.stdev}}',\n    '{{msg.z}}',\n    '{{msg.description}}'\n);\n\n--SELECT \n--    pg_terminate_backend(pid) \n--FROM \n--    pg_stat_activity \n--WHERE \n    -- don't kill my own connection!\n--    pid <> pg_backend_pid();",
        "postgresDB": "de6b1325.f01d58",
        "output": true,
        "outputs": 1,
        "x": 2090,
        "y": 1040,
        "wires": [
            [
                "c947be6e.4de1d8"
            ]
        ]
    },
    {
        "id": "ae7a571e.9e7ff8",
        "type": "inject",
        "z": "a66ad1ae.ff0e18",
        "name": "weather_data::database",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "weather_data",
        "payloadType": "str",
        "x": 140,
        "y": 360,
        "wires": [
            [
                "63ff4a8.5d69c34"
            ]
        ]
    },
    {
        "id": "260914de.66df74",
        "type": "exec",
        "z": "a66ad1ae.ff0e18",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 530,
        "y": 360,
        "wires": [
            [],
            [],
            [
                "822e99d9.dfae48"
            ]
        ]
    },
    {
        "id": "63ff4a8.5d69c34",
        "type": "template",
        "z": "a66ad1ae.ff0e18",
        "name": "extensions",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "echo '\\x \\\\ DROP DATABASE IF EXISTS {{msg.topic}};' | psql -U postgres -h localhost\n\necho '\\x \\\\ CREATE DATABASE {{msg.topic}};' | psql -U postgres -h localhost\necho '\\x \\\\ CREATE EXTENSION IF NOT EXISTS timescaledb CASCADE;' | psql -U postgres -h localhost -d weather_data\necho '\\x \\\\ CREATE EXTENSION IF NOT EXISTS postgis CASCADE;' | psql -U postgres -h localhost -d weather_data\n",
        "output": "str",
        "x": 350,
        "y": 360,
        "wires": [
            [
                "260914de.66df74"
            ]
        ]
    },
    {
        "id": "822e99d9.dfae48",
        "type": "debug",
        "z": "a66ad1ae.ff0e18",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 360,
        "wires": []
    },
    {
        "id": "f88e2fa5.5aa88",
        "type": "postgrestor",
        "z": "a66ad1ae.ff0e18",
        "name": "weather_data@localhost",
        "query": "DROP TABLE IF EXISTS \"{{ msg.topic }}\" CASCADE;\n\n-- lon/lat for geography (better than geometry for worldwide \n-- ST_Distance(geometry, geometry)\n-- ST_GeographyFromText(text)\n-- ST_Transform(geometry, srid)\n-- ST_X(point)\n-- POINT(lon lat)\nCREATE TABLE \"{{ msg.topic }}\"  (\n\t\"weatherts\" TIMESTAMPTZ DEFAULT Now(),\n--\t\"geom\" geography(POINT),\n--\t\"geom\" geography (LINESTRING),\n\t\"geom\" geography (POLYGON),\n\t\"latitude\" numeric,\n\t\"longitude\" numeric,\n\t\"local_time\" varchar(50),\n\t\"day_night\" char,\n\t\"timezone\" varchar(50),\n\t\"timezone_offset\" integer,\n\t\"customer\" integer,\n\t\"weather_id\" integer,\n\t\"weather_main\" varchar(50),\n\t\"weather_description\" varchar(50),\n\t\"weather_icon\" varchar(5),\n\t-- sunrise and sunset in EPOCH/1000\n\t\"dt\" bigint,\n\t\"sunrise\" bigint,\n\t\"sunset\" bigint,\n\t\"temp\" numeric,\n\t\"feelslike\" numeric,\n\t\"pressure\" numeric,\n\t\"humidity\" numeric,\n\t\"dewpoint\" numeric,\n\t\"uvindex\" numeric,\n\t\"clouds\" numeric,\n\t\"visibility\" numeric,\n\t\"windspeed\" numeric,\n\t\"winddirection\" numeric,\n\t\"windgust\" numeric,\n\t\"rain_1h\" numeric,\n\t\"snow_1h\" numeric,\n\t\"hourly_1_rain\" numeric,\n\t\"hourly_1_snow\" numeric,\n\t\"basestation\" varchar(50),\n\tCONSTRAINT \"weather_data_table_pk\" PRIMARY KEY (\"weatherts\")\n) WITH (\n  OIDS=FALSE\n)\nTABLESPACE pg_default;\n\n-- SELECT create_hypertable (\"geom\", \"weatherts\"); Does not work !!",
        "postgresDB": "a775e4e2.db3998",
        "output": true,
        "outputs": 1,
        "x": 410,
        "y": 740,
        "wires": [
            [
                "91cb06b1.da4c7"
            ]
        ]
    },
    {
        "id": "ee252ed7.42b03",
        "type": "inject",
        "z": "a66ad1ae.ff0e18",
        "name": "weather_data_table",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "weather_data_table",
        "payloadType": "str",
        "x": 130,
        "y": 740,
        "wires": [
            [
                "f88e2fa5.5aa88"
            ]
        ]
    },
    {
        "id": "e484be48.3c0d6",
        "type": "exec",
        "z": "a66ad1ae.ff0e18",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 810,
        "y": 740,
        "wires": [
            [],
            [],
            [
                "c92e62cd.c15498"
            ]
        ]
    },
    {
        "id": "91cb06b1.da4c7",
        "type": "template",
        "z": "a66ad1ae.ff0e18",
        "name": "Create hypertable",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "// \necho '\\x \\\\ SELECT create_hypertable('geom', 'weatherts');' | psql -U postgres -h localhost -d weather_data\n",
        "output": "str",
        "x": 650,
        "y": 740,
        "wires": [
            [
                "e484be48.3c0d6"
            ]
        ]
    },
    {
        "id": "c92e62cd.c15498",
        "type": "debug",
        "z": "a66ad1ae.ff0e18",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 740,
        "wires": []
    },
    {
        "id": "30176e0c.9e4f0a",
        "type": "comment",
        "z": "3fb5a67.37c495a",
        "name": "Setup replication Timescale database",
        "info": "",
        "x": 1010,
        "y": 220,
        "wires": []
    },
    {
        "id": "cbfa55f1.677c9",
        "type": "timestamp",
        "z": "3fb5a67.37c495a",
        "name": "",
        "x": 1410,
        "y": 1060,
        "wires": [
            [
                "ecc6b67e.c04d68",
                "28333259.b35406",
                "45f25d96.e90d74",
                "59d483cd.bf81ac"
            ]
        ]
    },
    {
        "id": "c947be6e.4de1d8",
        "type": "debug",
        "z": "3fb5a67.37c495a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2270,
        "y": 1040,
        "wires": []
    },
    {
        "id": "54ee6897.88fbc",
        "type": "http request",
        "z": "a66ad1ae.ff0e18",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://api.openweathermap.org/data/2.5/onecall?lat=50.94271&lon=4.33911&units=metric&appid=c4d81741b111ddde13ca658974bb0a71",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 350,
        "y": 900,
        "wires": [
            [
                "d96994bd.cfb878"
            ]
        ]
    },
    {
        "id": "d866e5c4.eb6048",
        "type": "comment",
        "z": "a66ad1ae.ff0e18",
        "name": "Get weather data",
        "info": "",
        "x": 100,
        "y": 860,
        "wires": []
    },
    {
        "id": "f71dcb10.5eba08",
        "type": "postgrestor",
        "z": "a66ad1ae.ff0e18",
        "name": "weather_data@localhost",
        "query": "-- timestamp inserted automatically with default value now()\n\n\nINSERT INTO weather_data_table \n(\n geom\n, latitude, longitude \n--,local_time\n, day_night\n, timezone, timezone_offset, customer \n, weather_id, weather_main, weather_description, weather_icon \n, dt, sunrise, sunset\n, temp, feelslike \n, pressure, humidity, dewpoint, uvindex \n, clouds, visibility, windspeed\n, winddirection, windgust, rain_1h, snow_1h \n, hourly_1_rain, hourly_1_snow, basestation\n) \n    VALUES\n(\nST_GeomFromText('POLYGON((4.29463 50.79058, 4.29928 50.79637, 4.30460 50.79602, 4.30422 50.78985, 4.29334 50.78454, 4.29463 50.79058))',4326)\n-- ST_GeomFromText('LINESTRING(4.29463 50.79058, 4.29928 50.79637, 4.30460 50.79602, 4.30422 50.78985, 4.29463 50.79058)',4326)\n-- ST_GeomFromText('POINT(4.3391 50.9427)',4326)\n,'{{msg.payload.lat}}','{{msg.payload.lon}}'\n--,'{{msg.local_time}}'\n, '{{msg.day_night}}'\n,'{{msg.payload.timezone}}','{{msg.payload.timezone_offset}}', '{{msg.topic}}' \n,'{{msg.payload.current.weather.0.id}}','{{msg.payload.current.weather.0.main}}', '{{msg.payload.current.weather.0.description}}', '{{msg.payload.current.weather.0.icon}}'\n,'{{msg.dt}}', '{{msg.sunrise}}', '{{msg.sunset}}'\n,'{{msg.payload.current.temp}}', '{{msg.payload.current.feels_like}}'\n,'{{msg.payload.current.pressure}}', '{{msg.payload.current.humidity}}', '{{msg.payload.current.dew_point}}', '{{msg.payload.current.uvi}}'\n,'{{msg.payload.current.clouds}}', '{{msg.payload.current.visibility}}', '{{msg.payload.current.wind_speed}}' \n,'{{msg.payload.current.wind_deg}}', '{{msg.payload.current.wind_speed}}', '{{msg.payload.current.rain}}', '{{msg.payload.current.snow}}'\n,'{{msg.payload.hourly_rain}}', '{{msg.payload.hourly_snow}}','testbase'\n);\n--ON CONFLICT (customer, weatherts) \n--DO NOTHING;        \n\n-- close other idle connections\n--SELECT \n--    pg_terminate_backend(pid) \n--FROM \n--    pg_stat_activity \n--WHERE \n    -- don't kill my own connection!\n--    pid <> pg_backend_pid();",
        "postgresDB": "a775e4e2.db3998",
        "output": true,
        "outputs": 1,
        "x": 830,
        "y": 900,
        "wires": [
            [
                "d6dcbc51.214258"
            ]
        ]
    },
    {
        "id": "d6dcbc51.214258",
        "type": "debug",
        "z": "a66ad1ae.ff0e18",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 990,
        "y": 840,
        "wires": []
    },
    {
        "id": "a27fd755.4a702",
        "type": "comment",
        "z": "a66ad1ae.ff0e18",
        "name": "Create tables",
        "info": "",
        "x": 90,
        "y": 400,
        "wires": []
    },
    {
        "id": "d96994bd.cfb878",
        "type": "function",
        "z": "a66ad1ae.ff0e18",
        "name": "",
        "func": "msg.sunrise = msg.payload.current.sunrise;  ///1000;\nmsg.sunset = msg.payload.current.sunset; ///1000;\nmsg.dt = msg.payload.current.dt;\nmsg.topic = 0;\n\n// calculate day or night\nif (msg.dt >= msg.sunrise) \n{\n    if (msg.dt < msg.sunset) \n    {\n        msg.day_night = \"D\";\n    }\n    else \n    {\n        msg.day_night = \"N\";\n    }\n}\nelse \n{\n       msg.day_night = \"N\";\n}    \n\n// read and fill-in rain\n// current\nif (msg.payload.current.hasOwnProperty(\"rain\")){\n  msg.payload.current.rain = msg.payload.current.rain[\"1h\"];\n}\nelse\n{\n    msg.payload.current.rain = 0;\n}\n\n// forecasted 1h\nif (msg.payload.hourly[\"1\"].hasOwnProperty(\"rain\")){\n  msg.payload.hourly_rain = msg.payload.hourly[\"1\"].rain[\"1h\"];\n}\nelse\n{\n    msg.payload.hourly_rain = 0;\n}\n\n\n\n// read and fill-in snow\n// current\nif (msg.payload.current.hasOwnProperty(\"snow\")){\n    msg.payload.current.snow = msg.payload.current.snow[\"1h\"];\n}\nelse\n{\n    msg.payload.current.snow = 0;\n}\n\n\n// forecasted 1h\nif (msg.payload.hourly[\"1\"].hasOwnProperty(\"snow\")){\n    msg.payload.hourly_snow = msg.payload.hourly[\"1\"].snow[\"1h\"];\n}\nelse\n{\n    msg.payload.hourly_snow = 0;\n}\n\n\n\n\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 900,
        "wires": [
            [
                "306423a.532e3dc",
                "f71dcb10.5eba08"
            ]
        ]
    },
    {
        "id": "306423a.532e3dc",
        "type": "debug",
        "z": "a66ad1ae.ff0e18",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 860,
        "wires": []
    },
    {
        "id": "b4342bff.5c00c8",
        "type": "inject",
        "z": "a66ad1ae.ff0e18",
        "name": "gateway_config::database",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "gateway_config",
        "payloadType": "str",
        "x": 150,
        "y": 180,
        "wires": [
            [
                "6a70ddfc.21da7c"
            ]
        ]
    },
    {
        "id": "2184cf0d.e2ada",
        "type": "exec",
        "z": "a66ad1ae.ff0e18",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 530,
        "y": 180,
        "wires": [
            [],
            [],
            [
                "d3f46dbe.5175d8"
            ]
        ]
    },
    {
        "id": "6a70ddfc.21da7c",
        "type": "template",
        "z": "a66ad1ae.ff0e18",
        "name": "extensions",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "echo '\\x \\\\ DROP DATABASE IF EXISTS {{msg.topic}};' | psql -U postgres -h localhost\n\necho '\\x \\\\ CREATE DATABASE {{msg.topic}};' | psql -U postgres -h localhost\necho '\\x \\\\ CREATE EXTENSION IF NOT EXISTS timescaledb CASCADE;' | psql -U postgres -h localhost -d gateway_config\necho '\\x \\\\ CREATE EXTENSION IF NOT EXISTS postgis CASCADE;' | psql -U postgres -h localhost -d gateway_config\n",
        "output": "str",
        "x": 350,
        "y": 180,
        "wires": [
            [
                "2184cf0d.e2ada"
            ]
        ]
    },
    {
        "id": "d3f46dbe.5175d8",
        "type": "debug",
        "z": "a66ad1ae.ff0e18",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 180,
        "wires": []
    },
    {
        "id": "e8c2a04.c425b6",
        "type": "inject",
        "z": "a66ad1ae.ff0e18",
        "name": "customer_config::database",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "customer_config",
        "payloadType": "str",
        "x": 150,
        "y": 60,
        "wires": [
            [
                "e1bddb09.edc748"
            ]
        ]
    },
    {
        "id": "f6f2c731.679b",
        "type": "exec",
        "z": "a66ad1ae.ff0e18",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 530,
        "y": 60,
        "wires": [
            [],
            [],
            [
                "455330ec.fd289"
            ]
        ]
    },
    {
        "id": "e1bddb09.edc748",
        "type": "template",
        "z": "a66ad1ae.ff0e18",
        "name": "extensions",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "echo '\\x \\\\ DROP DATABASE IF EXISTS {{msg.topic}};' | psql -U postgres -h localhost\n\necho '\\x \\\\ CREATE DATABASE {{msg.topic}};' | psql -U postgres -h localhost\necho '\\x \\\\ CREATE EXTENSION IF NOT EXISTS timescaledb CASCADE;' | psql -U postgres -h localhost -d customer_config\necho '\\x \\\\ CREATE EXTENSION IF NOT EXISTS postgis CASCADE;' | psql -U postgres -h localhost -d customer_config\n",
        "output": "str",
        "x": 350,
        "y": 60,
        "wires": [
            [
                "f6f2c731.679b"
            ]
        ]
    },
    {
        "id": "455330ec.fd289",
        "type": "debug",
        "z": "a66ad1ae.ff0e18",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 60,
        "wires": []
    },
    {
        "id": "e96ca841.f473c",
        "type": "inject",
        "z": "a66ad1ae.ff0e18",
        "name": "bridge_config::database",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "bridge_config",
        "payloadType": "str",
        "x": 140,
        "y": 300,
        "wires": [
            [
                "7c201fc7.27a038"
            ]
        ]
    },
    {
        "id": "8409d6b7.e064d",
        "type": "exec",
        "z": "a66ad1ae.ff0e18",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 530,
        "y": 300,
        "wires": [
            [],
            [],
            [
                "b4cf83ee.9592d"
            ]
        ]
    },
    {
        "id": "7c201fc7.27a038",
        "type": "template",
        "z": "a66ad1ae.ff0e18",
        "name": "extensions",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "echo '\\x \\\\ DROP DATABASE IF EXISTS {{msg.topic}};' | psql -U postgres -h localhost\n\necho '\\x \\\\ CREATE DATABASE {{msg.topic}};' | psql -U postgres -h localhost\necho '\\x \\\\ CREATE EXTENSION IF NOT EXISTS timescaledb CASCADE;' | psql -U postgres -h localhost -d bridge_config\necho '\\x \\\\ CREATE EXTENSION IF NOT EXISTS postgis CASCADE;' | psql -U postgres -h localhost -d bridge_config\n",
        "output": "str",
        "x": 350,
        "y": 300,
        "wires": [
            [
                "8409d6b7.e064d"
            ]
        ]
    },
    {
        "id": "b4cf83ee.9592d",
        "type": "debug",
        "z": "a66ad1ae.ff0e18",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 300,
        "wires": []
    },
    {
        "id": "f8aa44fb.6a79d",
        "type": "comment",
        "z": "a66ad1ae.ff0e18",
        "name": "Create databases",
        "info": "",
        "x": 100,
        "y": 20,
        "wires": []
    },
    {
        "id": "486677b2.5b8648",
        "type": "postgrestor",
        "z": "a66ad1ae.ff0e18",
        "name": "customer_config@localhost",
        "query": "DROP TABLE IF EXISTS \"{{ msg.topic }}\" CASCADE;\n\nCREATE TABLE \"{{ msg.topic }}\" (\n\t\"customerID\" serial NOT NULL,\n\t\"cust_geom\" geography (POLYGON),\n\t\"timezone\" varchar(50),\n\t\"description\" varchar(50),\n\t\"custom_byte\" character,\n\t\"webpage\" varchar(50),\n\t\"name\" varchar(50),\n\t\"street\" varchar(50),\n\t\"number\" varchar(50),\n\t\"zip\" varchar(50),\n\t\"town\" varchar(50),\n\t\"country\" varchar(50),\n\t\"active\" boolean DEFAULT false,\n\t\"new_date\" timestamptz DEFAULT NOW(),\n\t\"active_date\" timestamptz DEFAULT '-infinity',\n\t\"deactive_date\" timestamptz DEFAULT '-infinity',\n\t\"logo\" bytea,\n\t\"latitude\" numeric,\n\t\"longitude\" numeric,\n\t\n\tCONSTRAINT \"customer_config_table_pk\" PRIMARY KEY (\"customerID\")\n) WITH (\n  OIDS=FALSE\n)\nTABLESPACE pg_default;\n",
        "postgresDB": "47fd9ead.7e0dd8",
        "output": true,
        "outputs": 1,
        "x": 420,
        "y": 440,
        "wires": [
            [
                "1376fa41.ca6006"
            ]
        ]
    },
    {
        "id": "cdafa7df.b3249",
        "type": "inject",
        "z": "a66ad1ae.ff0e18",
        "name": "customer_config_table",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "customer_config_table",
        "payloadType": "str",
        "x": 140,
        "y": 440,
        "wires": [
            [
                "486677b2.5b8648"
            ]
        ]
    },
    {
        "id": "f0422cf3.7fddc",
        "type": "exec",
        "z": "a66ad1ae.ff0e18",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 810,
        "y": 440,
        "wires": [
            [],
            [],
            [
                "e2a5b929.58276"
            ]
        ]
    },
    {
        "id": "1376fa41.ca6006",
        "type": "template",
        "z": "a66ad1ae.ff0e18",
        "name": "Create hypertable",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "echo '\\x \\\\ SELECT create_hypertable('cust_geom');' | psql -U postgres -h localhost -d customer_config\n\n",
        "output": "str",
        "x": 650,
        "y": 440,
        "wires": [
            [
                "f0422cf3.7fddc"
            ]
        ]
    },
    {
        "id": "890b143e.3982",
        "type": "postgrestor",
        "z": "a66ad1ae.ff0e18",
        "name": "gateway_config@localhost",
        "query": "DROP TABLE IF EXISTS \"{{ msg.topic }}\" CASCADE;\n\n-- lon/lat for geography (better than geometry for worldwide \n\n-- POINT(lon lat)\nCREATE TABLE \"{{ msg.topic }}\" (\n\t\"gatewayID\" macaddr NOT NULL,\n\t\"gateway_geom\" geography (POINT) NOT NULL,\n\t\"IPaddress\" varchar(18) NOT NULL DEFAULT 'xxx.xxx.xxx.xxx',\n\t\"custombyte\" char NOT NULL,\n\t\"hwversion\" varchar(50) NOT NULL,\n\t\"swversion\" varchar(50) NOT NULL,\n\tCONSTRAINT \"gateway_config_table_pk\" PRIMARY KEY (\"gatewayID\",\"gateway_geom\")\n) WITH (\n  OIDS=FALSE\n)\nTABLESPACE pg_default;\n\n--SELECT create_hypertable ('localisation', 'weatherts');",
        "postgresDB": "53f3f43e.6ee9dc",
        "output": true,
        "outputs": 1,
        "x": 420,
        "y": 560,
        "wires": [
            [
                "7d93b8d2.9cea8"
            ]
        ]
    },
    {
        "id": "97bba3ef.731748",
        "type": "inject",
        "z": "a66ad1ae.ff0e18",
        "name": "gateway_config_table",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "gateway_config_table",
        "x": 140,
        "y": 560,
        "wires": [
            [
                "890b143e.3982"
            ]
        ]
    },
    {
        "id": "2ffd6ed7.3e7522",
        "type": "exec",
        "z": "a66ad1ae.ff0e18",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 810,
        "y": 560,
        "wires": [
            [],
            [],
            [
                "fc814dbe.d43378"
            ]
        ]
    },
    {
        "id": "7d93b8d2.9cea8",
        "type": "template",
        "z": "a66ad1ae.ff0e18",
        "name": "Create hypertable",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "// \necho '\\x \\\\ SELECT create_hypertable('gateway_geom');' | psql -U postgres -h localhost -d gateway_config\n",
        "output": "str",
        "x": 650,
        "y": 560,
        "wires": [
            [
                "2ffd6ed7.3e7522"
            ]
        ]
    },
    {
        "id": "e2a5b929.58276",
        "type": "debug",
        "z": "a66ad1ae.ff0e18",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 420,
        "wires": []
    },
    {
        "id": "fc814dbe.d43378",
        "type": "debug",
        "z": "a66ad1ae.ff0e18",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 560,
        "wires": []
    },
    {
        "id": "1098e905.2bb847",
        "type": "postgrestor",
        "z": "a66ad1ae.ff0e18",
        "name": "bridge_config@localhost",
        "query": "DROP TABLE IF EXISTS \"{{ msg.topic }}\" CASCADE;\n\nCREATE TABLE \"{{ msg.topic }}\" (\n\t\"bridgeID\" serial NOT NULL,\n\t\"bridge_geom\" geography (POINT) NOT NULL,\n\t\"hwversion\" varchar(50) NOT NULL,\n\t\"swversion\" varchar(50) NOT NULL,\n\t\"direction\" integer NOT NULL,\n\t\"distance\" integer NOT NULL,\n\tCONSTRAINT \"bridge_config_table_pk\" PRIMARY KEY (\"bridgeID\")\n) WITH (\n  OIDS=FALSE\n)\nTABLESPACE pg_default;\n\n",
        "postgresDB": "ab5ede70.ae4df8",
        "output": true,
        "outputs": 1,
        "x": 410,
        "y": 680,
        "wires": [
            [
                "1980d015.085aa"
            ]
        ]
    },
    {
        "id": "2c0f909c.5053a",
        "type": "inject",
        "z": "a66ad1ae.ff0e18",
        "name": "bridge_config_table",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "bridge_config_table",
        "payloadType": "str",
        "x": 130,
        "y": 680,
        "wires": [
            [
                "1098e905.2bb847"
            ]
        ]
    },
    {
        "id": "98f9071d.089cc8",
        "type": "exec",
        "z": "a66ad1ae.ff0e18",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 810,
        "y": 680,
        "wires": [
            [],
            [],
            [
                "2951b91a.a08ade"
            ]
        ]
    },
    {
        "id": "1980d015.085aa",
        "type": "template",
        "z": "a66ad1ae.ff0e18",
        "name": "Create hypertable",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "echo '\\x \\\\ SELECT create_hypertable('bridge_geom');' | psql -U postgres -h localhost -d bridge_config\n\n",
        "output": "str",
        "x": 650,
        "y": 680,
        "wires": [
            [
                "98f9071d.089cc8"
            ]
        ]
    },
    {
        "id": "2951b91a.a08ade",
        "type": "debug",
        "z": "a66ad1ae.ff0e18",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 680,
        "wires": []
    },
    {
        "id": "f797d720.4f38b",
        "type": "exec",
        "z": "23aae268.c697d6",
        "command": "curl https://get.geojs.io/v1/ip/geo.json",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 450,
        "y": 660,
        "wires": [
            [
                "b58bd5e1.c2992"
            ],
            [],
            []
        ]
    },
    {
        "id": "6dcebbc2.3a7374",
        "type": "debug",
        "z": "23aae268.c697d6",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 560,
        "wires": []
    },
    {
        "id": "594cebc.6aabf94",
        "type": "inject",
        "z": "23aae268.c697d6",
        "name": "This server info",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "600",
        "crontab": "",
        "once": true,
        "onceDelay": "0.1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 660,
        "wires": [
            [
                "f797d720.4f38b"
            ]
        ]
    },
    {
        "id": "b58bd5e1.c2992",
        "type": "json",
        "z": "23aae268.c697d6",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": true,
        "x": 710,
        "y": 600,
        "wires": [
            [
                "6dfa99c7.a2dec8",
                "92894c9.023df3",
                "cb44fac0.7d343",
                "fa89b9ef.9a64a8",
                "e210856e.bfb318",
                "e22342e6.51703",
                "13427106.54ddb7",
                "2a10b5a3.56fae2"
            ]
        ]
    },
    {
        "id": "6dfa99c7.a2dec8",
        "type": "ui_text",
        "z": "23aae268.c697d6",
        "group": "5e8771da.5e3118",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "longitude",
        "format": "{{msg.payload.longitude}}",
        "layout": "row-spread",
        "x": 880,
        "y": 600,
        "wires": []
    },
    {
        "id": "92894c9.023df3",
        "type": "ui_text",
        "z": "23aae268.c697d6",
        "group": "5e8771da.5e3118",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "latitude",
        "format": "{{msg.payload.latitude}}",
        "layout": "row-spread",
        "x": 1000,
        "y": 620,
        "wires": []
    },
    {
        "id": "cb44fac0.7d343",
        "type": "ui_text",
        "z": "23aae268.c697d6",
        "group": "ff3870f1.2378b",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Country",
        "format": "{{msg.payload.country}}",
        "layout": "row-spread",
        "x": 1120,
        "y": 640,
        "wires": []
    },
    {
        "id": "fa89b9ef.9a64a8",
        "type": "ui_text",
        "z": "23aae268.c697d6",
        "group": "ff3870f1.2378b",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "City",
        "format": "{{msg.payload.city}}",
        "layout": "row-spread",
        "x": 1250,
        "y": 660,
        "wires": []
    },
    {
        "id": "e210856e.bfb318",
        "type": "ui_text",
        "z": "23aae268.c697d6",
        "group": "ce8b884.b3726f8",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Timezone",
        "format": "{{msg.payload.timezone}}",
        "layout": "row-spread",
        "x": 1340,
        "y": 700,
        "wires": []
    },
    {
        "id": "e22342e6.51703",
        "type": "ui_text",
        "z": "23aae268.c697d6",
        "group": "5e8771da.5e3118",
        "order": 4,
        "width": 5,
        "height": 1,
        "name": "",
        "label": "Accuracy",
        "format": "{{msg.payload.accuracy}}",
        "layout": "row-spread",
        "x": 1410,
        "y": 740,
        "wires": []
    },
    {
        "id": "13427106.54ddb7",
        "type": "http request",
        "z": "23aae268.c697d6",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://api.openweathermap.org/data/2.5/onecall?lat={{payload.latitude}}&lon={{payload.longitude}}&units=metric&appid=c4d81741b111ddde13ca658974bb0a71",
        "tls": "",
        "persist": true,
        "proxy": "",
        "authType": "",
        "x": 690,
        "y": 740,
        "wires": [
            [
                "47f867e5.af10c",
                "6ba50199.d94b78",
                "513054a.449112c",
                "6dcebbc2.3a7374",
                "f0a9d5cf.91a4c"
            ]
        ]
    },
    {
        "id": "80fe477d.6b3e1",
        "type": "comment",
        "z": "23aae268.c697d6",
        "name": "Get weather data",
        "info": "",
        "x": 720,
        "y": 700,
        "wires": []
    },
    {
        "id": "47f867e5.af10c",
        "type": "ui_text",
        "z": "23aae268.c697d6",
        "group": "ff3870f1.2378b",
        "order": 4,
        "width": 3,
        "height": 1,
        "name": "Description",
        "label": "",
        "format": "{{msg.payload.current.weather[\"0\"].description}}",
        "layout": "col-center",
        "x": 890,
        "y": 660,
        "wires": []
    },
    {
        "id": "421fdef3.6dd1a",
        "type": "ui_button",
        "z": "23aae268.c697d6",
        "name": "icon",
        "group": "ff3870f1.2378b",
        "order": 3,
        "width": 2,
        "height": 1,
        "passthru": true,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "{{icon}}",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 1050,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "6ba50199.d94b78",
        "type": "function",
        "z": "23aae268.c697d6",
        "name": "",
        "func": "// actual weather icon\nmsg.icon =\"wi-owm-\" + msg.payload.current.weather[\"0\"].icon;\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 700,
        "wires": [
            [
                "421fdef3.6dd1a"
            ]
        ]
    },
    {
        "id": "1abf2446.978abc",
        "type": "comment",
        "z": "23aae268.c697d6",
        "name": "Get coordinates",
        "info": "",
        "x": 440,
        "y": 600,
        "wires": []
    },
    {
        "id": "2a10b5a3.56fae2",
        "type": "function",
        "z": "23aae268.c697d6",
        "name": "",
        "func": "// location on worldmap\nmsg.payload.icon = 'male';\nmsg.payload.name = \"HERE\";\nmsg.payload.lon = msg.payload.longitude;\nmsg.payload.lat = msg.payload.latitude;\ndelete msg.payload.latitude;\ndelete msg.payload.longitude;\t\nmsg.payload.circle = msg.payload.accuracy * 1000;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 800,
        "wires": [
            [
                "990ab01b.b9a2e"
            ]
        ]
    },
    {
        "id": "a3a42a97.cdd638",
        "type": "ui_worldmap",
        "z": "23aae268.c697d6",
        "group": "b9a86460.45fb5",
        "order": 1,
        "width": 13,
        "height": "8",
        "name": "",
        "lat": "",
        "lon": "",
        "zoom": "14",
        "layer": "OSM",
        "cluster": "",
        "maxage": "",
        "usermenu": "show",
        "layers": "show",
        "panit": "true",
        "panlock": "false",
        "zoomlock": "false",
        "hiderightclick": "false",
        "coords": "deg",
        "showgrid": "false",
        "allowFileDrop": "false",
        "path": "/worldmap2",
        "x": 1050,
        "y": 800,
        "wires": []
    },
    {
        "id": "990ab01b.b9a2e",
        "type": "delay",
        "z": "23aae268.c697d6",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 860,
        "y": 800,
        "wires": [
            [
                "a3a42a97.cdd638"
            ]
        ]
    },
    {
        "id": "27d7a3.bff6685e",
        "type": "function",
        "z": "548d67a6.28d68",
        "name": "create an array of objects",
        "func": "\nmsg.payload = \n[ \n    {\"channel\":\"1A6\"},\n    {\"channel\":\"1B6\"},\n    {\"channel\":\"1C6\"},\n    {\"channel\":\"1D6\"}\n];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 180,
        "wires": [
            [
                "c26ba790.1382a8"
            ]
        ]
    },
    {
        "id": "a34cc810.384d28",
        "type": "debug",
        "z": "548d67a6.28d68",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1130,
        "y": 260,
        "wires": []
    },
    {
        "id": "c26ba790.1382a8",
        "type": "function",
        "z": "548d67a6.28d68",
        "name": "format array of objects for dropdown in dashboard",
        "func": "//Reformat array to work with dashboard\nvar reformattedArray = msg.payload.map(obj =>{\n    //declare the reformatted object\n    var rObj = {};\n    //format it for drop down\n    //\"label\":\"value\" is the format so lets move the value to the label and add some txt as well\n    //you can also replce the txt with a var if you want\n    rObj[obj.channel+\" text you want to add\"] = obj.channel;\n    return rObj;\n});\nmsg.payload =  reformattedArray;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1110,
        "y": 180,
        "wires": [
            [
                "92aa60c.a2ca3a"
            ]
        ]
    },
    {
        "id": "92aa60c.a2ca3a",
        "type": "change",
        "z": "548d67a6.28d68",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "options",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 260,
        "wires": [
            [
                "a240a9f9.81f17"
            ]
        ]
    },
    {
        "id": "a240a9f9.81f17",
        "type": "ui_dropdown",
        "z": "548d67a6.28d68",
        "name": "",
        "label": "",
        "tooltip": "",
        "place": "Select Value From Database",
        "group": "cec06512.a43738",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 980,
        "y": 260,
        "wires": [
            [
                "a34cc810.384d28"
            ]
        ]
    },
    {
        "id": "532aaeea.6c868",
        "type": "change",
        "z": "548d67a6.28d68",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 180,
        "wires": [
            [
                "27d7a3.bff6685e",
                "b6a44462.ff9ee"
            ]
        ]
    },
    {
        "id": "1ab11e52.667262",
        "type": "switch",
        "z": "548d67a6.28d68",
        "name": "",
        "property": "name",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Meeki Test",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 250,
        "y": 180,
        "wires": [
            [
                "532aaeea.6c868"
            ]
        ]
    },
    {
        "id": "6bf567b8.7c91",
        "type": "ui_ui_control",
        "z": "548d67a6.28d68",
        "name": "",
        "events": "change",
        "x": 120,
        "y": 180,
        "wires": [
            [
                "1ab11e52.667262"
            ]
        ]
    },
    {
        "id": "6badeb6e.36273c",
        "type": "comment",
        "z": "548d67a6.28d68",
        "name": "Trigger to populate list when user opens menu tab",
        "info": "",
        "x": 290,
        "y": 120,
        "wires": []
    },
    {
        "id": "b6a44462.ff9ee",
        "type": "function",
        "z": "548d67a6.28d68",
        "name": "create an array of objects",
        "func": "\nmsg.payload = \n[ \n    {\"channel\":\"1A6\"},\n    {\"channel\":\"1B6\"},\n    {\"channel\":\"1C6\"},\n    {\"channel\":\"1D6\"}\n];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 770,
        "y": 440,
        "wires": [
            [
                "e1bed24c.5255a8"
            ]
        ]
    },
    {
        "id": "bdd7eaec.933898",
        "type": "comment",
        "z": "548d67a6.28d68",
        "name": "Dropdown with formatting",
        "info": "",
        "x": 910,
        "y": 120,
        "wires": []
    },
    {
        "id": "358443d4.f8ee04",
        "type": "comment",
        "z": "548d67a6.28d68",
        "name": "Dropdown without formatting",
        "info": "",
        "x": 920,
        "y": 380,
        "wires": []
    },
    {
        "id": "e1bed24c.5255a8",
        "type": "change",
        "z": "548d67a6.28d68",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "options",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 500,
        "wires": [
            [
                "b425c21d.814518"
            ]
        ]
    },
    {
        "id": "b425c21d.814518",
        "type": "ui_dropdown",
        "z": "548d67a6.28d68",
        "name": "",
        "label": "",
        "tooltip": "",
        "place": "Select Value From Database",
        "group": "810d7da4.fff398",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 940,
        "y": 500,
        "wires": [
            [
                "59f0a5e5.aa864c"
            ]
        ]
    },
    {
        "id": "59f0a5e5.aa864c",
        "type": "debug",
        "z": "548d67a6.28d68",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1090,
        "y": 500,
        "wires": []
    },
    {
        "id": "1fe67a9c.e043c5",
        "type": "postgres",
        "z": "6f1be511.28231c",
        "postgresdb": "",
        "name": "",
        "output": true,
        "perrow": false,
        "outputs": 1,
        "x": 720,
        "y": 160,
        "wires": [
            [
                "d6b63850.c9b2a8",
                "5be04826.9706"
            ]
        ]
    },
    {
        "id": "d204284d.dd7ee8",
        "type": "template",
        "z": "6f1be511.28231c",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "INSERT INTO stocks.stock(company, date, open, high, low, close, adjclose, volume, dividend, split)\nVALUES ( '{{topic}}', '{{payload.col1}}', '{{payload.col2}}', '{{payload.col3}}', '{{payload.col4}}', '{{payload.col5}}', '{{payload.col6}}', '{{payload.col7}}', '{{payload.col8}}','{{payload.col9}}')\nON CONFLICT (company, date) \nDO NOTHING;        \n    ",
        "output": "str",
        "x": 560,
        "y": 80,
        "wires": [
            [
                "1fe67a9c.e043c5"
            ]
        ]
    },
    {
        "id": "45040f6a.4214e8",
        "type": "inject",
        "z": "6f1be511.28231c",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "msft",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 80,
        "wires": [
            [
                "baf03b8f.a88f98"
            ]
        ]
    },
    {
        "id": "baf03b8f.a88f98",
        "type": "http request",
        "z": "6f1be511.28231c",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "https://www.alphavantage.co/query?function=TIME_SERIES_DAILY_ADJUSTED&symbol=MSFT&apikey=demo&datatype=csv",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 290,
        "y": 80,
        "wires": [
            [
                "41362a3a.a547f4"
            ]
        ]
    },
    {
        "id": "41362a3a.a547f4",
        "type": "csv",
        "z": "6f1be511.28231c",
        "name": "",
        "sep": ",",
        "hdrin": false,
        "hdrout": "",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "1",
        "strings": true,
        "x": 430,
        "y": 80,
        "wires": [
            [
                "d204284d.dd7ee8"
            ]
        ]
    },
    {
        "id": "3e47e992.110a46",
        "type": "template",
        "z": "6f1be511.28231c",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "select * from STOCKS.STOCK",
        "output": "str",
        "x": 520,
        "y": 160,
        "wires": [
            [
                "1fe67a9c.e043c5"
            ]
        ]
    },
    {
        "id": "d6b63850.c9b2a8",
        "type": "debug",
        "z": "6f1be511.28231c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 910,
        "y": 160,
        "wires": []
    },
    {
        "id": "e34da835.94f06",
        "type": "inject",
        "z": "6f1be511.28231c",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 300,
        "y": 160,
        "wires": [
            [
                "3e47e992.110a46"
            ]
        ]
    },
    {
        "id": "b33c1b26.fec9d",
        "type": "comment",
        "z": "6f1be511.28231c",
        "name": "Write time serie to database",
        "info": "",
        "x": 140,
        "y": 40,
        "wires": []
    },
    {
        "id": "e9f1902c.eae6c8",
        "type": "comment",
        "z": "6f1be511.28231c",
        "name": "Query the database",
        "info": "",
        "x": 110,
        "y": 140,
        "wires": []
    },
    {
        "id": "5be04826.9706",
        "type": "template",
        "z": "6f1be511.28231c",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<iframe src=\"http://localhost:3000/dashboard/snapshot/\" width=1600 height=600px></iframe>",
        "x": 720,
        "y": 300,
        "wires": [
            [
                "19b5feb7.0f0581"
            ]
        ]
    },
    {
        "id": "19b5feb7.0f0581",
        "type": "ui_template",
        "z": "6f1be511.28231c",
        "group": "67b5d208.7be444",
        "name": "Grafana dashboard",
        "order": 0,
        "width": "0",
        "height": "0",
        "format": "<div ng-bind-html=\"msg.payload | trusted\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 930,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "c8e63022.6fef58",
        "type": "comment",
        "z": "6f1be511.28231c",
        "name": "Embed Grafana dashboard in Dashboard UI",
        "info": "",
        "x": 470,
        "y": 240,
        "wires": []
    },
    {
        "id": "463e6998.73d038",
        "type": "ui_etable",
        "z": "23aae268.c697d6",
        "payload": "[{\"title\":\"ID\",\"field\":\"customerID\",\"editor\":false,\"columnMinWidth\":\"10px\",\"headerFilter\":\"input\"},{\"title\":\"Name\",\"field\":\"name\",\"editor\":false,\"columnMinWidth\":\"1300px\",\"headerFilter\":\"input\"},{\"title\":\"Country\",\"field\":\"country\",\"editor\":false,\"columnMinWidth\":\"1300px\",\"headerFilter\":\"input\"}]",
        "payloadType": "json",
        "options": "{\"movableColumns\":false,\"layout\":\"fitColumns\",\"pagination\":\"local\",\"rowSelectedBackground\":\"#0000ff\",\"height\":\"365px\"}",
        "group": "35f430aa.219838",
        "name": "cust_select",
        "order": 2,
        "width": "20",
        "height": "4",
        "columns": [],
        "outputs": 1,
        "cts": false,
        "x": 810,
        "y": 1240,
        "wires": [
            [
                "bd6084a0.068838",
                "1afd08ed.183f5f"
            ]
        ]
    },
    {
        "id": "59fdb8a4.05c258",
        "type": "comment",
        "z": "23aae268.c697d6",
        "name": "Fill the database",
        "info": "",
        "x": 180,
        "y": 860,
        "wires": []
    },
    {
        "id": "55c23be.e041dc4",
        "type": "postgrestor",
        "z": "23aae268.c697d6",
        "name": "customer_config@localhost",
        "query": "\n--\t\"customerID\" serial NOT NULL,\n--\t\"cust_geom\" geography (POLYGON),\n--\t\"timezone\" varchar(50),\n--\t\"description\" varchar(50),\n--\t\"custom_byte\" character,\n--\t\"webpage\" varchar(50),\n--\t\"name\" varchar(50),\n--\t\"street\" varchar(50),\n--\t\"number\" varchar(50),\n--\t\"ZIP\" varchar(50),\n--\t\"town\" varchar(50),\n--\t\"country\" varchar(50),\n--\t\"active\" boolean,\n--\t\"new_date\" date,\n--\t\"active_date\" date,\n--\t\"deactive_date\" date,\n--\t\"logo\" bytea,\n--\t\"latitude\" numeric,\n--\t\"longitude\" numeric,\n-- msg.topic = table \n\nINSERT INTO \"{{ msg.topic }}\"\n(\n    timezone,\n    description, \n    custom_byte, \n    webpage,\n    name,\n    street,\n    number,\n    ZIP,\n    town,\n    country,\n    active,\n    latitude,\n    longitude\n)\nVALUES\n(\n    '{{ msg.payload.country}}',\n    '{{ msg.payload.description}}',\n    '{{ msg.payload.custom_byte}}',\n    '{{ msg.payload.webpage}}',\n    '{{ msg.payload.name}}',\n    '{{ msg.payload.street}}',\n    '{{ msg.payload.number}}', \n    '{{ msg.payload.zip}}',\n    '{{ msg.payload.town}}',\n    '{{ msg.payload.country}}',\n    {{ msg.payload.active }},\n    {{ msg.payload.latitude}},    \n    {{ msg.payload.longitude}}\n);\n\n-- SELECT \n--    pg_terminate_backend(pid) \n--FROM \n--    pg_stat_activity \n--WHERE \n    -- don't kill my own connection!\n--    pid <> pg_backend_pid();",
        "postgresDB": "47fd9ead.7e0dd8",
        "output": true,
        "outputs": 1,
        "x": 1060,
        "y": 980,
        "wires": [
            [
                "b76a5a2d.84f198"
            ]
        ]
    },
    {
        "id": "a990d8af.6c09f8",
        "type": "debug",
        "z": "23aae268.c697d6",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 940,
        "wires": []
    },
    {
        "id": "489aca9c.bd1464",
        "type": "inject",
        "z": "23aae268.c697d6",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "time",
                "v": "",
                "vt": "date"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "customer_config_table",
        "x": 160,
        "y": 980,
        "wires": [
            [
                "1a7c76a9.535239"
            ]
        ]
    },
    {
        "id": "b2924a1e.4f7bb",
        "type": "comment",
        "z": "23aae268.c697d6",
        "name": "Query the database",
        "info": "",
        "x": 130,
        "y": 1200,
        "wires": []
    },
    {
        "id": "6d05201c.cbac2",
        "type": "postgrestor",
        "z": "23aae268.c697d6",
        "name": "customer_config@localhost",
        "query": "--\t\"customerID\" serial NOT NULL,\n--\t\"cust_geom\" geography (POLYGON),\n--\t\"timezone\" varchar(50),\n--\t\"description\" varchar(50),\n--\t\"custom_byte\" character,\n--\t\"webpage\" varchar(50),\n--\t\"name\" varchar(50),\n--\t\"street\" varchar(50),\n--\t\"number\" varchar(50),\n--\t\"ZIP\" varchar(50),\n--\t\"town\" varchar(50),\n--\t\"country\" varchar(50),\n--\t\"active\" boolean,\n--\t\"new_date\" date,\n--\t\"active_date\" date,\n--\t\"deactive_date\" date,\n--\t\"logo\" bytea,\n--\t\"latitude\" numeric,\n--\t\"longitude\" numeric,\n-- msg.topic = table \n\nSELECT  * FROM  customer_config_table\nORDER BY \"customerID\" ASC ;\n",
        "postgresDB": "47fd9ead.7e0dd8",
        "output": true,
        "outputs": 1,
        "x": 420,
        "y": 1240,
        "wires": [
            [
                "ba92909f.01a8"
            ]
        ]
    },
    {
        "id": "7c641c1c.199574",
        "type": "inject",
        "z": "23aae268.c697d6",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 1240,
        "wires": [
            [
                "6d05201c.cbac2"
            ]
        ]
    },
    {
        "id": "ba92909f.01a8",
        "type": "function",
        "z": "23aae268.c697d6",
        "name": "db rows",
        "func": "msg.payload = msg.payload.rows;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 1240,
        "wires": [
            [
                "463e6998.73d038",
                "677afc2f.61fa3c"
            ]
        ]
    },
    {
        "id": "5eb0bd6b.74b794",
        "type": "function",
        "z": "2924702c.b33a7",
        "name": "handle tableData",
        "func": "var status = {fill:\"red\",shape:\"dot\",text: \"payload \"};\nvar tableIndex = env.get(\"tableIndex\") || \"$topic\";\nvar tableDataProp = env.get(\"tableDataProp\") || \"row\";\nvar tableContext = env.get(\"tableContext\");\nvar dashboard = env.get(\"dashboard\");\nvar maxRows = env.get(\"maxRows\") || 0;\nvar maxStore = env.get(\"maxStore\") || 0;\n\nif (!tableContext.hasOwnProperty(\"tableData\") || !tableContext.hasOwnProperty(\"tableConfig\")) {\n    status.text=\"tableContext not defined\";\n    node.error(status.text);\n    return [{payload:status},null];\n}\n\n// context store to cache table data (memoryOnly prefered)\nvar tableData = flow.get(\"$parent.\"+tableContext.tableData.name,tableContext.tableData.storage);\nif (tableData===undefined) {\n    node.warn(\"[ui-table handler] tableData initialized!\");\n    tableData={};\n    flow.set(\"$parent.\"+tableContext.tableData.name,tableData,tableContext.tableData.storage);\n}\n\n// context Store to save table configuration (file)\nvar tableConfig = flow.get(\"$parent.\"+tableContext.tableConfig.name,tableContext.tableConfig.storage);\nif (tableConfig===undefined) {\n    node.warn(\"[ui-table handler] tableConfig initialized!\");\n    tableConfig={ResponsiveLayout:true};\n    flow.set(\"$parent.\"+tableContext.tableConfig.name,tableConfig,tableContext.tableConfig.storage);\n}\n\nif (tableConfig.hasOwnProperty(\"maxStore\")) maxStore=tableConfig.maxStore;\nif (tableConfig.hasOwnProperty(\"maxRows\")) maxRows=tableConfig.maxRows;\n\n// context Store to save table configuration (file)\nvar tableEdit;\nif (tableContext.hasOwnProperty(\"tableEdit\")) {\n    tableEdit = flow.get(\"$parent.\"+tableContext.tableEdit.name,tableContext.tableEdit.storage);\n    if (tableEdit===undefined) {\n        node.warn(\"[ui-table handler] tableEdit initialized!\");\n        tableEdit={};\n        flow.set(\"$parent.\"+tableContext.tableEdit.name,tableEdit,tableContext.tableEdit.storage);\n    }\n}\n\n// function to merge partial data into existing table row\nvar mergeObject = function (destination, source, filter) {\n    for (let currentSource in source) {\n        if (source.hasOwnProperty(currentSource)) {\n            if (filter!==undefined && tableEdit && tableEdit.hasOwnProperty(filter) && tableEdit[filter].hasOwnProperty(currentSource)) {\n                destination[currentSource]= tableEdit[filter][currentSource];\n                source[currentSource]=tableEdit[filter][currentSource];\n            } else {\n                destination[currentSource]= source[currentSource];\n            }\n        }    \n    }\n    return source;\n};\n\n// merge edits into a destination object respecting _children\nvar mergeEdits = function(destination) {\n    \n    var mergeChildEdits = function(children) {\n        children.forEach(child => {\n            if (child.hasOwnProperty(tableIndex) && tableEdit.hasOwnProperty(child[tableIndex])) {\n//                node.warn([\"mergeChild\",child])\n                Object.keys(tableEdit[child[tableIndex]]).forEach(edit => {\n                    if (child.hasOwnProperty(edit)) {\n                        child[edit]=tableEdit[child[tableIndex]][edit];\n//                        node.warn([\"mergeChild edit \",edit,child[edit]])\n                    }\n                });\n            }\n            if (child.hasOwnProperty(\"_children\")) {\n                mergeChildEdits(child._children);\n            }\n        })\n    }\n    \n\n    Object.keys(destination).forEach(row => {\n        if (destination[row].hasOwnProperty(tableIndex)) {\n            if (tableEdit.hasOwnProperty(row)) {\n                Object.keys(tableEdit[row]).forEach(edit => {\n                    destination[row][edit]=tableEdit[row][edit];\n                });\n            }\n            if (destination[row].hasOwnProperty(\"_children\")) {\n                mergeChildEdits(destination[row]._children);\n            }\n       }\n    });\n}\n\n// deep search for a column including nested columns\nvar searchTabulatorColumn = function (columns,key,match) {\n    var result;\n    for (let column of columns) {\n        if (column.hasOwnProperty(\"columns\")) {\n            result = searchTabulatorColumn(column.columns,key,match);\n            if (result!==undefined) return result;\n        } else if (column.hasOwnProperty(key) && column[key]===match) {\n            return column;\n        }\n    }\n};\n\n// command message to update add or update data on ui-table\nvar msgToTable={};\nmsgToTable.payload={\n    \"command\":msg.tabulatorCommand || \"updateOrAddData\",\n    \"arguments\": [],\n    \"returnPromise\": false\n};\n\n// store data in tableData\nif (msg.hasOwnProperty(tableDataProp)) {\n    // store data for later recover\n    if (!msg.hasOwnProperty(\"topic\")) { // check if index existst\n        status.text=\"msg.topic not defined!\";\n        return [{payload:status},null];\n    }\n    if (!tableData.hasOwnProperty(msg.topic)){ // first seen\n        if (maxRows>0 && Object.keys(tableData).lenght===0) {\n            tableConfig.currentFirstRow=msg.topic;\n        }\n        tableData[msg.topic]={};\n        if (tableEdit && tableEdit.hasOwnProperty(msg.topic)) { // table edits available!\n            Object.keys(tableEdit[msg.topic]).forEach((key) => {\n                msg[tableDataProp][key]=tableEdit[msg.topic][key];\n                tableData[msg.topic][key]=tableEdit[msg.topic][key];\n            })\n        }\n        if (maxStore>0 && typeof msg.topic === \"number\") { // limit rows in tableData\n            let rowKeys = Object.keys(tableData);\n            if (rowKeys.length>maxStore) {\n                for (let i=0; i<(rowKeys.length-maxStore); i++) {\n                    delete tableData[rowKeys[i]];\n                }\n            }\n        }\n    }\n    if (!tableData[msg.topic].hasOwnProperty(tableIndex)) tableData[msg.topic][tableIndex]=msg.topic;\n    msg[tableDataProp]=mergeObject(tableData[msg.topic],msg[tableDataProp],msg.topic);\n    msg[tableDataProp][tableIndex]=msg.topic;\n    msgToTable.payload.arguments=[[msg[tableDataProp]]];\n    // add aditional parameters\n    if (msg.hasOwnProperty(\"tabulatorParameter\") && Array.isArray(msg.tabulatorParameter)) {\n        for (let arg in msg.tabulatorParameter) msgToTable.payload.arguments.push(arg);\n    }\n    // delete rows if rows exceed maxRows\n    /*\n    if (maxRows>0 && tableConfig.hasOwnProperty(\"currentFirstRow\") && typeof tableData[msg.topic][tableIndex]===\"number\") {\n        //node.warn([maxRows,tableConfig.hasOwnProperty(\"currentFirstRow\"),typeof tableData[msg.topic][tableIndex],tableConfig.currentFirstRow,tableData[msg.topic][tableIndex]-maxRows])\n        if (tableConfig.currentFirstRow<tableData[msg.topic][tableIndex]-maxRows) {\n            node.warn([\"maxRowExeeded\",tableConfig.currentFirstRow]);\n            node.send([null,{payload:{\"command\":\"deleteRow\",\"arguments\": [tableConfig.currentFirstRow],\"returnPromise\": false}},null]);\n            tableConfig.currentFirstRow++;\n        }\n    }*/\n    if (maxRows>0 && typeof tableData[msg.topic][tableIndex]===\"number\" && msg.topic-maxRows>0) {\n        node.send([null,{payload:{\"command\":\"deleteRow\",\"arguments\": [msg.topic-maxRows],\"returnPromise\": false}},null]);\n    }\n    status.fill=\"green\";\n    status.text=msg.topic+\" updated\";\n    return [{payload:status},msgToTable,null];\n} if (msg.payload===\"connect\" || (msg.payload===\"change\" && msg.name===dashboard) || (msg.hasOwnProperty(\"payload\") && msg.payload.hasOwnProperty(\"command\"))) { \n    if (!msg.hasOwnProperty(\"ui_control\")) {\n        msg.ui_control = env.get('tabulator');\n        status.text+=\" ui_control added\";\n    }\n    //process commands\n    //node.warn({\"command\":msg.payload.command,\"msg\":msg,\"object\":msg.payload.object})\n    if (msg.payload.hasOwnProperty(\"command\") && msg.payload.command!=='getTable') {\n        status.fill=\"blue\";\n        switch(msg.payload.command) {\n            case 'deleteTable':\n                flow.set(\"$parent.\"+tableContext.tableData.name,undefined,tableContext.tableData.storage);\n                tableData={};\n                status.text=\"tabledata deleted\";\n                node.warn(\"[ui-table handler] \"+\"tabledata deleted\");\n                break;\n            case 'deleteRow':\n            case 'deleteDevice':\n                var deleteRow = function(id) {\n                    // check if row is in root\n                    if (tableData.hasOwnProperty(id)) {\n                        delete tableData[id]\n                        return true;\n                    }\n                    // check if row is a child\n                    let deleteChildRow = function(children, id) {\n                        for(let i = 0; i < children.length; i++){\n                            if (children[i].hasOwnProperty(tableIndex) && children[i][tableIndex]===id) {\n                                children.splice(i, 1); \n                                return true; \n                            }\n                            if (children[i].hasOwnProperty(\"_children\")) {\n                                if (deleteChildRow(children[i]._children,id)) {\n                                    if (children[i]._children.length === 0) {\n                                        delete children[i]._children;\n                                    }\n                                    return true;\n                                }\n                            }\n                        }\n                        return false;\n                    };\n                    \n                    for (let row in tableData) {\n                        if (tableData[row].hasOwnProperty(\"_children\")) {\n                            if (deleteChildRow(tableData[row]._children,id)) return true;\n                        }\n                    }\n                    return false;\n                }\n                \n                if (deleteRow(msg.payload.object)) {\n                    status.text=msg.payload.object+\" deleted\";\n                } else {\n                    status.fill=\"yellow\";\n                    status.text=msg.payload.object+\" undefined\";\n                }\n                break;\n            case 'ignoreRow':\n            case 'ignoreDevice':\n                if (tableData.hasOwnProperty(msg.payload.object)) {\n                    delete tableData[msg.payload.object];\n                    status.text=msg.payload.object+\" will be ignored\";\n                    if (!tableConfig.hasOwnProperty('ignoreDevice')) tableConfig.ignoreDevice={};\n                    tableConfig.ignoreDevice[msg.payload.object]=true;\n                }\n                break;\n            case 'unIgnoreRow':\n            case 'unIgnoreDevice':\n                if (tableConfig.hasOwnProperty('ignoreDevice')) {\n                    delete tableConfig.ignoreDevice[msg.payload.object];\n                }\n                break;\n            case 'unIgnoreRows':\n            case 'unIgnoreDevices':\n                delete tableConfig.ignoreDevice;\n                break;\n            case 'updateData':\n                status.text=\"column \"+msg.payload.column+\" updated\";\n                delete msg.ui_control;\n                return [{payload:status},msg];\n            case 'updateTable':\n                status.text=msg.payload.command+\": \";\n                break;\n            case 'columnHide':\n                if (!tableConfig.hasOwnProperty('columnVisible')) tableConfig.columnVisible={};\n                tableConfig.columnVisible[msg.payload.object]=false;\n                break;\n            case 'columnUnHide':\n                if (!tableConfig.hasOwnProperty('columnVisible')) tableConfig.columnVisible={};\n                tableConfig.columnVisible[msg.payload.object]=true;\n                break;\n            case 'columnsUnHide':\n                for (let column in tableConfig.columnVisible) {\n                    if (tableConfig.columnVisible.hasOwnProperty(column)) tableConfig.columnVisible[column]=true;\n                }\n                break;\n            case 'refreshTable':\n                break;\n            case 'deleteColumnOrder':\n            case 'restoreColumnOrder':\n                delete tableConfig.columns;\n                break;\n            case 'deleteColumnWidth':\n            case 'resetColumnWidth':\n                delete tableConfig.columnWidths;\n                break;\n            case 'setResponsiveLayout':\n                tableConfig.ResponsiveLayout=!tableConfig.ResponsiveLayout;\n                break;\n            case 'deleteRowOrder':\n                delete tableConfig.rowOrder;\n                break;\n            case 'setMaxStore':\n                tableConfig.maxStore=msg.payload.object;\n                maxStore=msg.payload.object;\n                break;\n            case 'setMaxRows':\n                tableConfig.maxRows=msg.payload.object;\n                maxRows=msg.payload.object;\n                break;\n            default:\n                status.fill=\"red\";\n                status.text=\"unknown command \"+msg.payload.command;\n                node.warn(\"[ui-table handler] \"+status.text);\n                break;\n        }\n        flow.set(\"$parent.\"+tableContext.tableConfig.name,tableConfig,tableContext.tableConfig.storage);\n        node.send([{payload:status},null,null]);\n    }\n\n    // crawl through tabulator arrays and updated user defined values\n    var crawlTabulator = function (columns,match,config,property) {\n        for (let column of columns) {\n            if (column.hasOwnProperty(\"columns\")) {\n                crawlTabulator(column.columns,match,config,property);\n            } else if (config.hasOwnProperty(column[match])) column[property]=config[column.field];\n        }\n    };\n    \n    // restore custom column width\n    if (tableConfig.hasOwnProperty(\"columnWidths\") && msg.hasOwnProperty(\"ui_control\")) {\n        crawlTabulator(msg.ui_control.tabulator.columns,\"field\",tableConfig.columnWidths,\"width\");\n    }\n    \n    // restore custom column hide/show\n    if (tableConfig.hasOwnProperty(\"columnVisible\") && msg.hasOwnProperty(\"ui_control\")) {\n        crawlTabulator(msg.ui_control.tabulator.columns,\"field\",tableConfig.columnVisible,\"visible\");\n    }\n    \n    // restore custom responsive / standard view\n    if (tableConfig.hasOwnProperty(\"ResponsiveLayout\")) {\n        if (!tableConfig.ResponsiveLayout) {\n            msg.ui_control.tabulator.responsiveLayout=false;\n        }\n        msg.ui_control.tabulator.columns.forEach((column,index) => {\n            if (column.formatter===\"responsiveCollapse\") { // hide expand column on any position\n                column.visible=tableConfig.ResponsiveLayout;\n                return;\n            }\n        });\n    }\n\n    // sort columns\n    if (tableConfig.hasOwnProperty(\"columns\") && msg.hasOwnProperty(\"ui_control\") && msg.ui_control.hasOwnProperty(\"tabulator\")) {\n        var addedColumns = 0;\n        var sortColumnsByLayout = function (sortColumns, columnsLayout, targetColumns) {\n            for (var layoutColumn=0;  layoutColumn<columnsLayout.length; layoutColumn++) {\n                for (var sortColumn in sortColumns) {\n                    if (sortColumns[sortColumn].hasOwnProperty(\"columns\")) {\n                        targetColumns.push({\"title\":sortColumns[sortColumn].title, \"columns\":[]});\n                        sortColumnsByLayout(sortColumns[sortColumn].columns,columnsLayout,targetColumns[targetColumns.length-1].columns);\n                        layoutColumn=addedColumns; // jump forward after childes added\n                    } else {\n                        if (columnsLayout[layoutColumn].field===sortColumns[sortColumn].field){\n                            targetColumns.push(sortColumns[sortColumn]);\n                            addedColumns++;\n                            break;\n                        }\n                    }\n                }\n            }\n        };                 \n        var newColumns=[];\n        sortColumnsByLayout(msg.ui_control.tabulator.columns,tableConfig.columns,newColumns);\n        msg.ui_control.tabulator.columns=newColumns;\n    }\n\n    // restore stored lines after connect\n\n    let command = msg.payload.command;\n    var tableArray;\n    if (command===\"getTable\") {\n        msg.payload.tableArray=[];\n        tableArray=msg.payload.tableArray\n    } else {\n        msg.payload=[];\n        tableArray=msg.payload;\n    }\n    \n    var pushRowData = function(rowData) {\n        // ignore rows in ignoreRows array\n        if (tableConfig && tableConfig.hasOwnProperty(\"ignoreDevice\") && tableConfig.ignoreDevice[rowData]) {\n            // do nothing\n        } else {\n            // merge edits into table\n            if (tableEdit && tableEdit.hasOwnProperty(rowData)) {\n                let tableRow = RED.util.cloneMessage(tableData[rowData]);\n                Object.keys(tableEdit[rowData]).forEach((field) => {\n                    tableRow[field]=tableEdit[rowData][field];\n                });\n                tableArray.push(tableRow);\n            } else {\n                tableArray.push(tableData[rowData]);\n            }\n        }\n    }\n    \n    if (tableConfig.hasOwnProperty(\"rowOrder\")) {\n        // first check if new rows exits which are not in rowOrder\n        Object.keys(tableData).forEach((key) => {\n            if (tableConfig.rowOrder.indexOf(tableData[key][tableIndex])<0) {\n                tableConfig.rowOrder.push(tableData[key][tableIndex]); // add row to the end of rowOrder\n            }\n        });\n        tableConfig.rowOrder.forEach((value,index) => {\n            node.warn([\"pushRowOrder\",value,tableData.hasOwnProperty(value),tableData[value]]);\n            if (tableData.hasOwnProperty(value)) { // push rows in rowOrder sequence\n                pushRowData(value);\n            } else { // delete not existing rows from rowOrder\n                tableConfig.rowOrder.splice(index,1)\n            }\n       });\n    } else {\n        for (let rowData in tableData) {\n            pushRowData(rowData);\n        }\n    }\n    // store the first index if maxRows limits amount of displayed lines\n    if (maxRows>0 && tableData) {\n        let tableKeys=Object.keys(tableData);\n        if (tableKeys.length>0 && typeof tableData[tableKeys[0]][tableIndex] === \"number\") {\n            tableConfig.currentFirstRow=tableData[tableKeys[0]][tableIndex];\n        }\n    }\n    \n    if (command=='getTable'){\n        status.fill=\"blue\";\n        status.text+=\" \"+tableArray.length+\" rows emitted\";\n        return [{payload:status},null,msg];\n    } else {\n        status.fill=\"blue\";\n        status.text+=\" \"+tableArray.length+\" rows restored\";\n        return [{payload:status},msg,[{topic:\"maxRows\",payload:maxRows},{topic:\"maxStore\",payload:maxStore}]];\n    }\n} if (msg.hasOwnProperty(\"ui_control\")) {\n    // callback from tabulator\n    status.fill=\"blue\";\n    status.text=\"callback \"+msg.ui_control.callback;\n    switch(msg.ui_control.callback) {\n        case \"columnResized\": // save new column width\n            if (tableConfig.columnWidths===undefined) tableConfig.columnWidths={};\n            tableConfig.columnWidths[msg.ui_control.columnWidths.field]=msg.ui_control.columnWidths.width;\n            flow.set(\"$parent.\"+tableContext.tableConfig.name,tableConfig,tableContext.tableConfig.storage);\n            status.text=msg.ui_control.columnWidths.field+\"=\"+msg.ui_control.columnWidths.width+\"px\";\n            break;\n        case \"columnMoved\": // save new column order\n            if (tableConfig.columns===undefined) tableConfig.columns=[];\n            tableConfig.columns=msg.ui_control.columns;\n            flow.set(\"$parent.\"+tableContext.tableConfig.name,tableConfig,tableContext.tableConfig.storage);\n            status.text=\"new column order\";\n            break;\n        case \"cellEdited\":\n            if (tableEdit) {\n                if (!tableEdit.hasOwnProperty(msg[tableIndex])) tableEdit[msg[tableIndex]]={};\n                tableEdit[msg[tableIndex]][msg.field] = msg.payload; // save data and mark as edited field\n                flow.set(\"$parent.\"+tableContext.tableEdit.name,tableEdit,tableContext.tableEdit.storage);\n                mergeEdits(tableData);\n                flow.set(\"$parent.\"+tableContext.tableData.name,tableData,tableContext.tableData.storage);\n                status.text=msg[tableIndex]+\" \"+msg.field+\" edited to \"+msg.payload;\n                msg[tableDataProp]={};\n                msg[tableDataProp][tableIndex]=msg[tableIndex];\n                msg[tableDataProp][msg.field]=msg.payload;\n                msgToTable.payload.arguments=[[msg[tableDataProp]]];\n                node.send([{payload:status},null,msg]); // was node.send([{payload:status},msgToTable,msg]);\n            } else {\n                node.error(\"[ui-table handler] no tableEdit store defined!\")\n            }\n            break;\n        case \"rowContext\":\n            msg.ignoredDevices=[];\n            for (let rowData in tableConfig.ignoreDevice) {\n                if (tableConfig.ignoreDevice.hasOwnProperty(rowData)) {\n                    msg.ignoredDevices.push({\"text\":rowData,\"icon\":\"fa fa-plug\",\"topic\":\"unIgnoreDevice\",\"payload\":rowData})  \n                }\n            }\n            break;\n        case \"headerContext\":\n            msg.hiddenColumns=[];\n            let tabulatorConfig = env.get('tabulator');\n            for (let column in tableConfig.columnVisible) {\n                if (tableConfig.columnVisible.hasOwnProperty(column) &&\n                    !tableConfig.columnVisible[column]) {\n                    let configColumn=searchTabulatorColumn(tabulatorConfig.tabulator.columns,\"field\",column);\n                    let icon;\n                    if (configColumn.hasOwnProperty('title') && configColumn.title.toLowerCase().includes('</i>')) {\n                        // <i class='fa fa-star-half-o'></i> State\n                        let start=configColumn.title.indexOf(\"'fa \");\n                        let end=configColumn.title.indexOf(\"'\",start+1);\n                        icon=configColumn.title.substring(start+4,end);\n                    }\n                    msg.hiddenColumns.push({\"text\":column,\"icon\":icon,\"topic\":\"columnUnHide\",\"payload\":configColumn.field})  \n                }\n            }\n            break;\n        case \"rowMoved\":\n            if (tableConfig.rowOrder===undefined) tableConfig.rowOrder={};\n            tableConfig.rowOrder=msg.ui_control.rowOrder;\n            flow.set(\"$parent.\"+tableContext.tableConfig.name,tableConfig,tableContext.tableConfig.storage);\n            status.text=\"new row order\";\n            break;\n        default:\n            // if rowIndex exists pass complete object\n            if (msg.hasOwnProperty(tableIndex)) {\n                msg.rowData=tableData[msg[tableIndex]];\n            }\n            status.text=\"pass message\";\n    }\n    return [{payload:status},null,msg];\n} \nif (Array.isArray(msg.payload)) {\n    tableData={};\n    \n    msg.payload.forEach((row) => {\n        if (row.hasOwnProperty(tableIndex)) {\n            tableData[row[tableIndex]]=row;\n        }\n    });\n    if (msg.keepEdits) {\n        mergeEdits(tableData);\n    }\n\n    \n    flow.set(\"$parent.\"+tableContext.tableData.name,tableData,tableContext.tableData.storage);\n    if (tableContext.hasOwnProperty(\"tableEdit\") && !msg.keepEdits) {\n        tableEdit={};\n        flow.set(\"$parent.\"+tableContext.tableEdit.name,tableEdit,tableContext.tableEdit.storage);\n    }\n    status.fill=\"blue\"\n    status.text=\"table replaced \"+msg.payload.length+\" rows\";\n    return [{payload:status},msg,null];\n}    \n    \n// nothing to do bejond this point\nstatus.text+=\" [\"+msg.payload+\"]\";\nreturn [{payload:status},null];\n",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 192,
        "y": 85,
        "wires": [
            [],
            [],
            []
        ],
        "icon": "font-awesome/fa-table"
    },
    {
        "id": "1a7c76a9.535239",
        "type": "data-generator",
        "z": "23aae268.c697d6",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "syntax": "text",
        "template": "{\n    \"description\": \"{{company}}\",\n    \"custom_byte\": \"a\",\n    \"webpage\": \"www.{{domain}}\",\n    \"timezone\": \"{{country}}\",\n    \"name\" :\"{{company}}\",\n    \"street\": \"{{street}}\",\n    \"number\": \"{{postcode}}\",\n    \"zip\": \"{{zipcode}}\",\n    \"town\": \"{{city}}\",\n    \"country\": \"{{country}}\",\n    \"active\": {{boolean}},\n    \"latitude\": {{lat}},\n    \"longitude\" : {{long}}\n}",
        "x": 420,
        "y": 980,
        "wires": [
            [
                "c7b597b7.c26b5",
                "62d2bcfd.8f8ac4"
            ]
        ]
    },
    {
        "id": "c7b597b7.c26b5",
        "type": "json",
        "z": "23aae268.c697d6",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 750,
        "y": 980,
        "wires": [
            [
                "55c23be.e041dc4",
                "a990d8af.6c09f8"
            ]
        ]
    },
    {
        "id": "62d2bcfd.8f8ac4",
        "type": "debug",
        "z": "23aae268.c697d6",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 940,
        "wires": []
    },
    {
        "id": "b76a5a2d.84f198",
        "type": "debug",
        "z": "23aae268.c697d6",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1250,
        "y": 940,
        "wires": []
    },
    {
        "id": "513054a.449112c",
        "type": "ui_text",
        "z": "23aae268.c697d6",
        "group": "ce8b884.b3726f8",
        "order": 4,
        "width": 3,
        "height": 1,
        "name": "Temp",
        "label": "Temp",
        "format": "{{msg.payload.current.temp}}",
        "layout": "col-center",
        "x": 870,
        "y": 740,
        "wires": []
    },
    {
        "id": "f0a9d5cf.91a4c",
        "type": "ui_text",
        "z": "23aae268.c697d6",
        "group": "ce8b884.b3726f8",
        "order": 3,
        "width": 3,
        "height": 1,
        "name": "Humidity",
        "label": "Hum",
        "format": "{{msg.payload.current.humidity}}",
        "layout": "col-center",
        "x": 1020,
        "y": 740,
        "wires": []
    },
    {
        "id": "8473f00.8ecd91",
        "type": "postgrestor",
        "z": "23aae268.c697d6",
        "name": "customer_config@localhost",
        "query": "--\t\"customerID\" serial NOT NULL,\n--\t\"cust_geom\" geography (POLYGON),\n--\t\"timezone\" varchar(50),\n--\t\"description\" varchar(50),\n--\t\"custom_byte\" character,\n--\t\"webpage\" varchar(50),\n--\t\"name\" varchar(50),\n--\t\"street\" varchar(50),\n--\t\"number\" varchar(50),\n--\t\"ZIP\" varchar(50),\n--\t\"town\" varchar(50),\n--\t\"country\" varchar(50),\n--\t\"active\" boolean,\n--\t\"new_date\" date,\n--\t\"active_date\" date,\n--\t\"deactive_date\" date,\n--\t\"logo\" bytea,\n--\t\"latitude\" numeric,\n--\t\"longitude\" numeric,\n-- msg.topic = table \n\nSELECT * \nFROM customer_config_table \nWHERE \n    (\n    \"customerID\" = {{msg.customerID}}\n    );\n--ORDER BY \"customerID\" ASC ;\n\n",
        "postgresDB": "47fd9ead.7e0dd8",
        "output": true,
        "outputs": 1,
        "x": 1600,
        "y": 1240,
        "wires": [
            [
                "2abb28bc.38953",
                "b29684f8.08f308",
                "52516e0b.cc519"
            ]
        ]
    },
    {
        "id": "7b72ec42.7c8294",
        "type": "ui_etable",
        "z": "23aae268.c697d6",
        "payload": "[{\"title\":\"ID\",\"field\":\"customerID\",\"editor\":false},{\"title\":\"Name\",\"field\":\"name\",\"editor\":true},{\"title\":\"Webpage\",\"field\":\"webpage\",\"editor\":true},{\"title\":\"Description\",\"field\":\"description\",\"editor\":true},{\"title\":\"Area\",\"field\":\"cust_geom\",\"editor\":false},{\"title\":\"Latitude\",\"field\":\"latitude\",\"editor\":true},{\"title\":\"Longitude\",\"field\":\"longitude\",\"editor\":true},{\"title\":\"Timezone\",\"field\":\"timezone\",\"editor\":true}]",
        "payloadType": "json",
        "options": "{\"movableColumns\":true,\"layout\":\"fitData\",\"responsiveLayout\":\"hide\",\"selectable\":true,\"headerSort\":false,\"height\":\"70px\"}",
        "group": "f50f05a6.b79b88",
        "name": "cust_data1",
        "order": 1,
        "width": "20",
        "height": "1",
        "columns": [],
        "outputs": 1,
        "cts": false,
        "x": 430,
        "y": 1460,
        "wires": [
            [
                "f71b3e30.4a0ed8",
                "d0f0deba.b7e0b"
            ]
        ]
    },
    {
        "id": "b29684f8.08f308",
        "type": "function",
        "z": "23aae268.c697d6",
        "name": "read data",
        "func": "msg.payload = msg.payload.rows;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 140,
        "y": 1460,
        "wires": [
            [
                "7b72ec42.7c8294",
                "7de3c3f3.44b68c",
                "38e8c1f7.dac99e",
                "d2786a8e.2e642"
            ]
        ]
    },
    {
        "id": "2b35c26.13458be",
        "type": "comment",
        "z": "23aae268.c697d6",
        "name": "show customer table",
        "info": "",
        "x": 410,
        "y": 1200,
        "wires": []
    },
    {
        "id": "30f9e0a2.57479",
        "type": "comment",
        "z": "23aae268.c697d6",
        "name": "Show data for editing",
        "info": "",
        "x": 440,
        "y": 1420,
        "wires": []
    },
    {
        "id": "c072c50.4fbde38",
        "type": "postgrestor",
        "z": "23aae268.c697d6",
        "name": "customer_config@localhost",
        "query": "--\t\"customerID\" serial NOT NULL,\n--\t\"cust_geom\" geography (POLYGON),\n--\t\"timezone\" varchar(50),\n--\t\"description\" varchar(50),\n--\t\"custom_byte\" character,\n--\t\"webpage\" varchar(50),\n--\t\"name\" varchar(50),\n--\t\"street\" varchar(50),\n--\t\"number\" varchar(50),\n--\t\"ZIP\" varchar(50),\n--\t\"town\" varchar(50),\n--\t\"country\" varchar(50),\n--\t\"active\" boolean,\n--\t\"new_date\" timestamptz,\n--\t\"active_date\" timestamptz,\n--\t\"deactive_date\" timestamptz,\n--\t\"logo\" bytea,\n--\t\"latitude\" numeric,\n--\t\"longitude\" numeric,\n\n\nINSERT INTO customer_config_table\n(\n    timezone,\n    description, \n    custom_byte, \n    webpage,\n    name,\n    street,\n    number,\n    ZIP,\n    town,\n    country,\n    active,\n    new_date,\n--    active_date,\n--    deactive_date\n    latitude,\n    longitude\n)\nVALUES\n(\n    '{{ msg.payload.country}}',\n    '{{ msg.payload.description}}',\n    '{{ msg.payload.custom_byte}}',\n    '{{ msg.payload.webpage}}',\n    '{{ msg.payload.name}}',\n    '{{ msg.payload.street}}',\n    '{{ msg.payload.number}}', \n    '{{ msg.payload.zip}}',\n    '{{ msg.payload.town}}',\n    '{{ msg.payload.country}}',\n    'false',\n    Now(),\n--    '{{ msg.payload.active_date }}',\n--    '{{ msg.payload.deactive_date }}',\n    '{{ msg.payload.latitude}}',    \n    '{{ msg.payload.longitude}}'\n);\n\n-- dates are filled in when changed in the topic\n-- cust_geom is calculated from lats/lomgs of polygon\n\n",
        "postgresDB": "47fd9ead.7e0dd8",
        "output": true,
        "outputs": 1,
        "x": 1180,
        "y": 1460,
        "wires": [
            [
                "3c5368c.e6d2098"
            ]
        ]
    },
    {
        "id": "9597d2cd.de51f",
        "type": "comment",
        "z": "23aae268.c697d6",
        "name": "Reload cust selection table",
        "info": "",
        "x": 810,
        "y": 1140,
        "wires": []
    },
    {
        "id": "f4ef909.70b2c7",
        "type": "link in",
        "z": "23aae268.c697d6",
        "name": "",
        "links": [
            "52516e0b.cc519"
        ],
        "x": 275,
        "y": 1320,
        "wires": [
            [
                "6d05201c.cbac2"
            ]
        ]
    },
    {
        "id": "52516e0b.cc519",
        "type": "link out",
        "z": "23aae268.c697d6",
        "name": "",
        "links": [
            "f4ef909.70b2c7"
        ],
        "x": 1895,
        "y": 1240,
        "wires": []
    },
    {
        "id": "7de3c3f3.44b68c",
        "type": "ui_etable",
        "z": "23aae268.c697d6",
        "payload": "[{\"title\":\"Country\",\"field\":\"country\",\"editor\":true},{\"title\":\"City\",\"field\":\"town\",\"editor\":true},{\"title\":\"ZIP\",\"field\":\"zip\",\"editor\":true},{\"title\":\"Address\",\"field\":\"street\",\"editor\":true},{\"title\":\"Number\",\"field\":\"number\",\"editor\":true}]",
        "payloadType": "json",
        "options": "{\"movableColumns\":true,\"layout\":\"fitColumns\",\"responsiveLayout\":\"hide\",\"selectable\":true,\"headerSort\":false,\"height\":\"70px\"}",
        "group": "f50f05a6.b79b88",
        "name": "cust_data2",
        "order": 1,
        "width": "20",
        "height": "1",
        "columns": [],
        "outputs": 1,
        "cts": false,
        "x": 430,
        "y": 1500,
        "wires": [
            [
                "f71b3e30.4a0ed8",
                "d0f0deba.b7e0b"
            ]
        ]
    },
    {
        "id": "38e8c1f7.dac99e",
        "type": "ui_etable",
        "z": "23aae268.c697d6",
        "payload": "[{\"title\":\"Date created\",\"field\":\"new_date\",\"editor\":true},{\"title\":\"Active ?\",\"field\":\"active\",\"editor\":\"select\",\"editorParams\":{\"values\":[\"true\",\"false\"]}},{\"title\":\"Date activated\",\"field\":\"active_date\",\"editor\":true},{\"title\":\"Date de-activated\",\"field\":\"deactive_date\",\"editor\":true},{\"title\":\"Custom Byte\",\"field\":\"custom_byte\",\"editor\":true}]",
        "payloadType": "json",
        "options": "{\"movableColumns\":true,\"layout\":\"fitColumns\",\"responsiveLayout\":\"hide\",\"selectable\":true,\"headerSort\":false,\"height\":\"125px\"}",
        "group": "f50f05a6.b79b88",
        "name": "cust_data3",
        "order": 1,
        "width": "20",
        "height": "2",
        "columns": [],
        "outputs": 1,
        "cts": false,
        "x": 430,
        "y": 1540,
        "wires": [
            [
                "f71b3e30.4a0ed8",
                "d0f0deba.b7e0b"
            ]
        ]
    },
    {
        "id": "d758684a.db12b8",
        "type": "comment",
        "z": "23aae268.c697d6",
        "name": "Add new customer",
        "info": "",
        "x": 1170,
        "y": 1420,
        "wires": []
    },
    {
        "id": "46c9df0b.fef24",
        "type": "postgrestor",
        "z": "a66ad1ae.ff0e18",
        "name": "customer_geom@localhost",
        "query": "DROP TABLE IF EXISTS \"{{ msg.topic }}\" CASCADE;\n\nCREATE TABLE \"customer_geom_table\" (\n\t\"customerID\" serial8 NOT NULL,\n\t\"latitude\" numeric NOT NULL,\n\t\"longitude\" numeric NOT NULL,\n\t\"point_geom\" geography (POINT),\n\tCONSTRAINT \"customer_geom_table_pk\" PRIMARY KEY (\"customerID\",\"latitude\",\"longitude\")\n) WITH (\n  OIDS=FALSE\n)\nTABLESPACE pg_default;\n\nALTER TABLE \"customer_geom_table\" ADD CONSTRAINT \"customer_geom_table_fk0\" FOREIGN KEY (\"customerID\") REFERENCES \"customer_config_table\"(\"customerID\");\n",
        "postgresDB": "59f11dff.1c54d4",
        "output": true,
        "outputs": 1,
        "x": 420,
        "y": 500,
        "wires": [
            [
                "faab0efc.db86a"
            ]
        ]
    },
    {
        "id": "eb77dedd.30b6b8",
        "type": "inject",
        "z": "a66ad1ae.ff0e18",
        "name": "customer_geom_table",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "customer_geom_table",
        "payloadType": "str",
        "x": 140,
        "y": 500,
        "wires": [
            [
                "46c9df0b.fef24"
            ]
        ]
    },
    {
        "id": "faab0efc.db86a",
        "type": "debug",
        "z": "a66ad1ae.ff0e18",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 500,
        "wires": []
    },
    {
        "id": "e5adbf58.a31f4",
        "type": "e-mail in",
        "z": "23aae268.c697d6",
        "name": "email in",
        "protocol": "IMAP",
        "server": "mail.isenspro.com",
        "useSSL": true,
        "autotls": "required",
        "port": "993",
        "box": "",
        "disposition": "Read",
        "criteria": "UNSEEN",
        "repeat": "300",
        "fetch": "auto",
        "inputs": 0,
        "x": 70,
        "y": 200,
        "wires": [
            [
                "fd3e1605.06a6c8",
                "85c5b32e.0cb0d",
                "f0c5ccd4.c96c98"
            ]
        ]
    },
    {
        "id": "15d323c0.05b9a4",
        "type": "aedes broker",
        "z": "d6ad709e.7c639",
        "name": "",
        "mqtt_port": "1885",
        "mqtt_ws_bind": "port",
        "mqtt_ws_port": "8080",
        "mqtt_ws_path": "/ws/mqtt",
        "cert": "",
        "key": "",
        "certname": "",
        "keyname": "",
        "dburl": "",
        "usetls": false,
        "x": 130,
        "y": 100,
        "wires": [
            [
                "fc5285e6.9378e8"
            ]
        ]
    },
    {
        "id": "158b465a.de622a",
        "type": "mqtt out",
        "z": "d6ad709e.7c639",
        "name": "mqtt publish",
        "topic": "",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e21e4642.c12f6",
        "x": 310,
        "y": 160,
        "wires": []
    },
    {
        "id": "6087fda0.fffb74",
        "type": "mqtt in",
        "z": "d6ad709e.7c639",
        "name": "mqtt subscribe",
        "topic": "test",
        "qos": "0",
        "datatype": "auto",
        "broker": "e21e4642.c12f6",
        "nl": false,
        "rap": false,
        "x": 540,
        "y": 100,
        "wires": [
            [
                "ae4fb6b3.3e9708"
            ]
        ]
    },
    {
        "id": "5e0a8cd8.1e149c",
        "type": "inject",
        "z": "d6ad709e.7c639",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "test",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 160,
        "wires": [
            [
                "158b465a.de622a"
            ]
        ]
    },
    {
        "id": "ae4fb6b3.3e9708",
        "type": "debug",
        "z": "d6ad709e.7c639",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 100,
        "wires": []
    },
    {
        "id": "fc5285e6.9378e8",
        "type": "debug",
        "z": "d6ad709e.7c639",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 310,
        "y": 100,
        "wires": []
    },
    {
        "id": "f59929f4.da0f8",
        "type": "comment",
        "z": "d6ad709e.7c639",
        "name": "MQTT AEDES locally, VernMQ externally",
        "info": "",
        "x": 180,
        "y": 40,
        "wires": []
    },
    {
        "id": "e3f18703.83c428",
        "type": "comment",
        "z": "d6ad709e.7c639",
        "name": "Telegram bot fot setup & maintenance",
        "info": "",
        "x": 170,
        "y": 240,
        "wires": []
    },
    {
        "id": "590e4b67.434b04",
        "type": "telegram sender",
        "z": "d6ad709e.7c639",
        "name": "",
        "bot": "9b2b343e.8ba328",
        "haserroroutput": true,
        "outputs": 2,
        "x": 710,
        "y": 900,
        "wires": [
            [
                "e855a145.968418"
            ],
            [
                "da13734f.eec7c8"
            ]
        ]
    },
    {
        "id": "7d588981.48759",
        "type": "telegram receiver",
        "z": "d6ad709e.7c639",
        "name": "",
        "bot": "9b2b343e.8ba328",
        "saveDataDir": "",
        "filterCommands": false,
        "x": 290,
        "y": 900,
        "wires": [
            [],
            [
                "4d08b7f4.97b85"
            ]
        ]
    },
    {
        "id": "e855a145.968418",
        "type": "debug",
        "z": "d6ad709e.7c639",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 960,
        "y": 900,
        "wires": []
    },
    {
        "id": "da13734f.eec7c8",
        "type": "debug",
        "z": "d6ad709e.7c639",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 980,
        "wires": []
    },
    {
        "id": "4d08b7f4.97b85",
        "type": "debug",
        "z": "d6ad709e.7c639",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 490,
        "y": 900,
        "wires": []
    },
    {
        "id": "17e34f7f.902a19",
        "type": "inject",
        "z": "d6ad709e.7c639",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 1080,
        "wires": [
            [
                "3d932293.85171e"
            ]
        ]
    },
    {
        "id": "3d932293.85171e",
        "type": "change",
        "z": "d6ad709e.7c639",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Received command",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 1100,
        "wires": [
            [
                "ca18cd0.66c36b"
            ]
        ]
    },
    {
        "id": "ca18cd0.66c36b",
        "type": "function",
        "z": "d6ad709e.7c639",
        "name": "",
        "func": "msg.payload = {\n    chatId: '1866897836',\n    type:'message',\n    content: msg.payload\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 1120,
        "wires": [
            [
                "bcea6916.73c16",
                "118ae906.9c5ec7"
            ]
        ]
    },
    {
        "id": "bcea6916.73c16",
        "type": "telegram sender",
        "z": "d6ad709e.7c639",
        "name": "",
        "bot": "9b2b343e.8ba328",
        "haserroroutput": true,
        "outputs": 2,
        "x": 770,
        "y": 1120,
        "wires": [
            [
                "999f31c.27e16d"
            ],
            [
                "e85c0a9e.d6b49"
            ]
        ]
    },
    {
        "id": "999f31c.27e16d",
        "type": "debug",
        "z": "d6ad709e.7c639",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1000,
        "y": 1120,
        "wires": []
    },
    {
        "id": "1a78e217.035a76",
        "type": "debug",
        "z": "d6ad709e.7c639",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 490,
        "y": 1280,
        "wires": []
    },
    {
        "id": "e85c0a9e.d6b49",
        "type": "telegram sender",
        "z": "d6ad709e.7c639",
        "name": "error",
        "bot": "9b2b343e.8ba328",
        "haserroroutput": false,
        "outputs": 1,
        "x": 980,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "9666af3d.3da7e",
        "type": "telegram event",
        "z": "d6ad709e.7c639",
        "name": "",
        "bot": "9b2b343e.8ba328",
        "event": "callback_query",
        "autoanswer": true,
        "x": 160,
        "y": 1240,
        "wires": [
            [
                "92ee3303.4cd04"
            ]
        ]
    },
    {
        "id": "78034690.513038",
        "type": "telegram sender",
        "z": "d6ad709e.7c639",
        "name": "show inline keyboard",
        "bot": "9b2b343e.8ba328",
        "haserroroutput": false,
        "outputs": 1,
        "x": 700,
        "y": 1320,
        "wires": [
            []
        ]
    },
    {
        "id": "74e8cf35.a5ba8",
        "type": "function",
        "z": "d6ad709e.7c639",
        "name": "inline keyboard message",
        "func": "var opts = {\n  reply_to_message_id: msg.payload.messageId,\n  reply_markup: JSON.stringify({\n    \"inline_keyboard\": [[\n                {\n                    \"text\": \"Yes\",\n                    \"callback_data\": \"FOO YES\"            \n                }, \n                {\n                    \"text\": \"No\",\n                    \"callback_data\": \"FOO NO\"            \n                }]\n            ]\n  })\n};\n\nmsg.payload.content = 'Are you sure?';\nmsg.payload.options = opts;\n\nreturn [ msg ];\n",
        "outputs": "1",
        "noerr": 0,
        "x": 430,
        "y": 1320,
        "wires": [
            [
                "78034690.513038"
            ]
        ]
    },
    {
        "id": "67692ad7.9de0d4",
        "type": "telegram command",
        "z": "d6ad709e.7c639",
        "name": "/foo",
        "command": "/foo",
        "bot": "9b2b343e.8ba328",
        "strict": false,
        "hasresponse": false,
        "useregex": false,
        "removeregexcommand": false,
        "outputs": 1,
        "x": 150,
        "y": 1320,
        "wires": [
            [
                "74e8cf35.a5ba8"
            ]
        ]
    },
    {
        "id": "92ee3303.4cd04",
        "type": "function",
        "z": "d6ad709e.7c639",
        "name": "set  answer options",
        "func": "var show_alert = false; // you can set this to true to open a dialog with the answer in the client.\n\n// msg.payload.content contains the callback data from the keyboard.\n// You may change this value here.\nmsg.payload.options = show_alert;\n\nreturn [ msg ];\n",
        "outputs": "1",
        "noerr": 0,
        "x": 410,
        "y": 1240,
        "wires": [
            [
                "18bd53db.5ba47c",
                "1a78e217.035a76"
            ]
        ]
    },
    {
        "id": "18bd53db.5ba47c",
        "type": "telegram sender",
        "z": "d6ad709e.7c639",
        "name": "answer callback query",
        "bot": "9b2b343e.8ba328",
        "haserroroutput": false,
        "outputs": 1,
        "x": 700,
        "y": 1240,
        "wires": [
            []
        ]
    },
    {
        "id": "80211883.fcf5f",
        "type": "telegram receiver",
        "z": "d6ad709e.7c639",
        "name": "",
        "bot": "9b2b343e.8ba328",
        "saveDataDir": "",
        "filterCommands": false,
        "x": 150,
        "y": 1560,
        "wires": [
            [
                "d719b18b.da75f8"
            ],
            []
        ]
    },
    {
        "id": "d719b18b.da75f8",
        "type": "debug",
        "z": "d6ad709e.7c639",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 330,
        "y": 1560,
        "wires": []
    },
    {
        "id": "cd98abdd.e338f",
        "type": "inject",
        "z": "d6ad709e.7c639",
        "name": "",
        "props": [
            {
                "p": "payload.content",
                "v": "",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "str",
        "x": 130,
        "y": 1458,
        "wires": [
            [
                "2c2e5956.54b846"
            ]
        ]
    },
    {
        "id": "c8a8015.60267",
        "type": "telegram sender",
        "z": "d6ad709e.7c639",
        "name": "",
        "bot": "9b2b343e.8ba328",
        "haserroroutput": false,
        "outputs": 1,
        "x": 630,
        "y": 1458,
        "wires": [
            []
        ]
    },
    {
        "id": "2c2e5956.54b846",
        "type": "function",
        "z": "d6ad709e.7c639",
        "name": "build keyboard",
        "func": "var opts = {\n  reply_markup: JSON.stringify({\n    keyboard: [\n      ['A1'],\n      ['A2']],\n      'resize_keyboard' : true, \n      'one_time_keyboard' : true\n  })\n};\n\n\nmsg.error = false;\n// Dialogaufbau\nmsg.payload.content = 'Selection?';\nmsg.payload.options = opts;\n\n\nmsg.payload.chatId = 1866897836;\nmsg.payload.messageId = 99;\nmsg.payload.sentMessageId = 99;\nmsg.payload.type = \"message\";\n\nreturn [ msg ];\n",
        "outputs": "1",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 1458,
        "wires": [
            [
                "c8a8015.60267",
                "17b67c4e.c4738c"
            ]
        ]
    },
    {
        "id": "17b67c4e.c4738c",
        "type": "debug",
        "z": "d6ad709e.7c639",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 1518,
        "wires": []
    },
    {
        "id": "4f9f29f7.8abc78",
        "type": "comment",
        "z": "d6ad709e.7c639",
        "name": "Custom keyboard: Reply with \"Telegram receiver\"",
        "info": "",
        "x": 270,
        "y": 1400,
        "wires": []
    },
    {
        "id": "e8ce557a.c772a8",
        "type": "catch",
        "z": "d6ad709e.7c639",
        "d": true,
        "name": "",
        "scope": [],
        "uncaught": false,
        "x": 110,
        "y": 1820,
        "wires": [
            [
                "cd3e5352.717538"
            ]
        ]
    },
    {
        "id": "cd3e5352.717538",
        "type": "debug",
        "z": "d6ad709e.7c639",
        "name": "Debug",
        "active": false,
        "console": "false",
        "complete": "payload",
        "x": 580,
        "y": 1820,
        "wires": []
    },
    {
        "id": "cfe3317f.d2ce7",
        "type": "telegram sender",
        "z": "d6ad709e.7c639",
        "name": "show keyboard",
        "bot": "9b2b343e.8ba328",
        "haserroroutput": false,
        "outputs": 1,
        "x": 610,
        "y": 1660,
        "wires": [
            []
        ]
    },
    {
        "id": "db28aeae.a44ba8",
        "type": "function",
        "z": "d6ad709e.7c639",
        "name": "confirmation message",
        "func": "context.global.keyboard = { pending : true };\n\nvar opts = {\n  reply_to_message_id: msg.payload.messageId,\n  reply_markup: JSON.stringify({\n    keyboard: [\n      ['Yes'],\n      ['No']],\n      'resize_keyboard' : true, \n      'one_time_keyboard' : true\n  })\n};\n\nmsg.payload.content = 'Really?';\nmsg.payload.options = opts;\n\nreturn [ msg ];\n",
        "outputs": "1",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 1660,
        "wires": [
            [
                "cfe3317f.d2ce7"
            ]
        ]
    },
    {
        "id": "cc400aac.97c5f8",
        "type": "telegram command",
        "z": "d6ad709e.7c639",
        "name": "/foo2",
        "command": "/foo2",
        "bot": "9b2b343e.8ba328",
        "strict": false,
        "hasresponse": true,
        "useregex": false,
        "removeregexcommand": false,
        "outputs": 2,
        "x": 110,
        "y": 1700,
        "wires": [
            [
                "db28aeae.a44ba8"
            ],
            [
                "469a1a73.b143cc"
            ]
        ]
    },
    {
        "id": "469a1a73.b143cc",
        "type": "function",
        "z": "d6ad709e.7c639",
        "name": "create response",
        "func": "if (context.global.keyboard.pending) {\n    context.global.keyboard.pending = false;\n    \n    if(msg.payload.content === 'Yes') {\n        msg.payload.content = 'Yes';\n        return [msg, null];   \n    }\n    else     {\n        msg.payload.content = 'No';\n        return [null, msg];   \n    }\n}",
        "outputs": "2",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 1740,
        "wires": [
            [
                "d044e1c5.953458"
            ],
            [
                "cd3e5352.717538"
            ]
        ]
    },
    {
        "id": "d044e1c5.953458",
        "type": "telegram sender",
        "z": "d6ad709e.7c639",
        "name": "send response",
        "bot": "9b2b343e.8ba328",
        "haserroroutput": false,
        "outputs": 1,
        "x": 600,
        "y": 1720,
        "wires": [
            []
        ]
    },
    {
        "id": "8b073815.17d0e8",
        "type": "function",
        "z": "d6ad709e.7c639",
        "name": "create question",
        "func": "msg.payload.type = 'message';\nmsg.payload.content = 'Really?';\nmsg.payload.options = {reply_to_message_id : msg.payload.messageId}\n\nreturn [ msg ];\n",
        "outputs": "1",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 1920,
        "wires": [
            [
                "6e1b6d9c.489644"
            ]
        ]
    },
    {
        "id": "ff6a8284.6a6c8",
        "type": "telegram command",
        "z": "d6ad709e.7c639",
        "name": "/foo3",
        "command": "/foo3",
        "bot": "9b2b343e.8ba328",
        "strict": false,
        "hasresponse": false,
        "useregex": false,
        "removeregexcommand": false,
        "outputs": 1,
        "x": 120,
        "y": 1920,
        "wires": [
            [
                "8b073815.17d0e8"
            ]
        ]
    },
    {
        "id": "6e1b6d9c.489644",
        "type": "telegram sender",
        "z": "d6ad709e.7c639",
        "name": "send question",
        "bot": "9b2b343e.8ba328",
        "haserroroutput": false,
        "outputs": 1,
        "x": 510,
        "y": 1920,
        "wires": [
            [
                "ac53bc52.ded628"
            ]
        ]
    },
    {
        "id": "ac53bc52.ded628",
        "type": "telegram reply",
        "z": "d6ad709e.7c639",
        "name": "get reply",
        "bot": "9b2b343e.8ba328",
        "x": 685,
        "y": 1920,
        "wires": [
            [
                "8cb611c8.56aef8"
            ]
        ]
    },
    {
        "id": "8cb611c8.56aef8",
        "type": "function",
        "z": "d6ad709e.7c639",
        "name": "switch answer",
        "func": "if(msg.payload.content === 'Yes')\n{\n    return [msg, null];   \n}\nelse\n{\n    return [null, msg];   \n}\n",
        "outputs": "2",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 857,
        "y": 1920,
        "wires": [
            [
                "c9421c25.44e36"
            ],
            [
                "67963c15.d20bb4"
            ]
        ]
    },
    {
        "id": "c9421c25.44e36",
        "type": "debug",
        "z": "d6ad709e.7c639",
        "name": "Yes",
        "active": true,
        "tosidebar": true,
        "console": false,
        "complete": "payload",
        "statusVal": "",
        "statusType": "auto",
        "x": 1060,
        "y": 1900,
        "wires": []
    },
    {
        "id": "67963c15.d20bb4",
        "type": "debug",
        "z": "d6ad709e.7c639",
        "name": "No",
        "active": true,
        "console": "false",
        "complete": "payload",
        "x": 1060,
        "y": 1940,
        "wires": []
    },
    {
        "id": "65b3afb9.8d92",
        "type": "telegram event",
        "z": "d6ad709e.7c639",
        "name": "",
        "bot": "9b2b343e.8ba328",
        "event": "inline_query",
        "autoanswer": true,
        "x": 150,
        "y": 2080,
        "wires": [
            [
                "c7f9eaaa.0207c8"
            ]
        ]
    },
    {
        "id": "c7f9eaaa.0207c8",
        "type": "function",
        "z": "d6ad709e.7c639",
        "name": "create results",
        "func": "// we have to set the results propery with the answer(s)\n// see https://core.telegram.org/bots/api#inlinequeryresult\nvar results = [\n    // result 1 is InlineQueryResultArticle\n    {\n        type : \"article\",\n        id : \"1\",\n        title : \"Result 1\",\n        \n        // InputTextMessageContent see https://core.telegram.org/bots/api#inputmessagecontent\n        input_message_content : {\n            message_text : \"The message 1\",\n            parse_mode : \"Markdown\",\n            disable_web_page_preview : true\n        }\n    },\n    \n    // result 2 is InlineQueryResultArticle\n    {\n        type : \"article\",\n        id : \"2\",\n        title : \"Result 2\",\n        \n        // InputTextMessageContent see https://core.telegram.org/bots/api#inputmessagecontent\n        input_message_content : {\n            message_text : \"The message 2\",\n            parse_mode : \"Markdown\",\n            disable_web_page_preview : false\n        }\n    }\n    ];\n\n\nmsg.payload.results = results;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 2080,
        "wires": [
            [
                "2c870509.1e08ca"
            ]
        ]
    },
    {
        "id": "2c870509.1e08ca",
        "type": "telegram sender",
        "z": "d6ad709e.7c639",
        "name": "",
        "bot": "9b2b343e.8ba328",
        "haserroroutput": false,
        "outputs": 1,
        "x": 630,
        "y": 2080,
        "wires": [
            []
        ]
    },
    {
        "id": "da4cf949.cb9118",
        "type": "telegram sender",
        "z": "d6ad709e.7c639",
        "name": "send location",
        "bot": "9b2b343e.8ba328",
        "haserroroutput": false,
        "outputs": 1,
        "x": 750,
        "y": 2220,
        "wires": [
            [
                "c95ae907.49e268"
            ]
        ]
    },
    {
        "id": "449dc685.098248",
        "type": "telegram command",
        "z": "d6ad709e.7c639",
        "name": "/send to send location",
        "command": "/send",
        "bot": "9b2b343e.8ba328",
        "strict": true,
        "hasresponse": false,
        "useregex": false,
        "removeregexcommand": false,
        "outputs": 1,
        "x": 220,
        "y": 2220,
        "wires": [
            [
                "9d2ef78b.a10f28"
            ]
        ]
    },
    {
        "id": "9d2ef78b.a10f28",
        "type": "function",
        "z": "d6ad709e.7c639",
        "name": "send initial location",
        "func": "// see https://core.telegram.org/bots/api#sendlocation\n\nvar lat = flow.get(\"lat\");\nvar lng = flow.get(\"lng\");\nvar time = flow.get(\"time\");\n\n\nmsg.payload.type = 'location';\nmsg.payload.content = {\n    latitude : lat,\n    longitude : lng\n};\n  \nmsg.payload.options = {\n    live_period : time\n};  \n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 470,
        "y": 2220,
        "wires": [
            [
                "da4cf949.cb9118"
            ]
        ]
    },
    {
        "id": "74bc17cd.97b958",
        "type": "telegram receiver",
        "z": "d6ad709e.7c639",
        "name": "message receiver",
        "bot": "9b2b343e.8ba328",
        "saveDataDir": "",
        "filterCommands": false,
        "x": 230,
        "y": 2480,
        "wires": [
            [
                "b8b7f3c0.f220a"
            ],
            []
        ]
    },
    {
        "id": "b8b7f3c0.f220a",
        "type": "function",
        "z": "d6ad709e.7c639",
        "name": "reply location message",
        "func": "if(msg.payload.type == 'location')\n{\n    var lat = msg.payload.content.latitude;\n    var lng = msg.payload.content.longitude;\n    \n    msg.payload.type = 'message';\n    msg.payload.content = 'lat=' + lat + ' lon=' + lng;\n    \n    return msg;\n}\nelse\n{\n    return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 480,
        "y": 2480,
        "wires": [
            [
                "dc174ebf.53e2c"
            ]
        ]
    },
    {
        "id": "cab3ca7f.6f2778",
        "type": "telegram command",
        "z": "d6ad709e.7c639",
        "name": "/update to update live location",
        "command": "/update",
        "bot": "9b2b343e.8ba328",
        "strict": true,
        "hasresponse": false,
        "useregex": false,
        "removeregexcommand": false,
        "outputs": 1,
        "x": 200,
        "y": 2300,
        "wires": [
            [
                "796bfd7b.89ef04"
            ]
        ]
    },
    {
        "id": "796bfd7b.89ef04",
        "type": "function",
        "z": "d6ad709e.7c639",
        "name": "edit initial location",
        "func": "// see https://core.telegram.org/bots/api#editMessageLiveLocation\n\nvar messageId = flow.get(\"messageId\");\n\nvar lat = flow.get(\"lat\");\nvar lng = flow.get(\"lng\");\nlat += 0.1;\nlng += 0.1;\nflow.set(\"lat\", lat);\nflow.set(\"lng\", lng);\n\n\nvar chatId = msg.payload.chatId;\nmsg.payload.type = 'editMessageLiveLocation';\nmsg.payload.content = {\n    latitude : lat,\n    longitude : lng\n};\n  \nmsg.payload.options = {\n    chat_id : chatId,\n    message_id : messageId\n};  \n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 470,
        "y": 2300,
        "wires": [
            [
                "dc174ebf.53e2c"
            ]
        ]
    },
    {
        "id": "de720b3.43142f8",
        "type": "telegram command",
        "z": "d6ad709e.7c639",
        "name": "/abort to stop live location",
        "command": "/abort",
        "bot": "9b2b343e.8ba328",
        "strict": true,
        "hasresponse": false,
        "useregex": false,
        "removeregexcommand": false,
        "outputs": 1,
        "x": 210,
        "y": 2380,
        "wires": [
            [
                "ef341f1c.6ab44"
            ]
        ]
    },
    {
        "id": "ef341f1c.6ab44",
        "type": "function",
        "z": "d6ad709e.7c639",
        "name": "stop live updating",
        "func": "// see https://core.telegram.org/bots/api#stopMessageLiveLocation\n\nvar messageId = flow.get(\"messageId\");\nvar chatId = msg.payload.chatId;\n\nmsg.payload.type = 'stopMessageLiveLocation';\nmsg.payload.options = {\n    chat_id : chatId,\n    message_id : messageId\n};  \n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 470,
        "y": 2380,
        "wires": [
            [
                "dc174ebf.53e2c"
            ]
        ]
    },
    {
        "id": "36afbf82.a7e8a",
        "type": "inject",
        "z": "d6ad709e.7c639",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 2160,
        "wires": [
            [
                "4cd6fcae.338154"
            ]
        ]
    },
    {
        "id": "4cd6fcae.338154",
        "type": "function",
        "z": "d6ad709e.7c639",
        "name": "intialize location",
        "func": "// Here we initialize some sample data \n// for later usage\n\nflow.set(\"lat\", 47);\nflow.set(\"lng\", 10);\n\n// the live_period in seconds\nflow.set(\"time\", 600);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 460,
        "y": 2160,
        "wires": [
            [
                "f622f3df.e33968"
            ]
        ]
    },
    {
        "id": "dc174ebf.53e2c",
        "type": "telegram sender",
        "z": "d6ad709e.7c639",
        "name": "send response",
        "bot": "9b2b343e.8ba328",
        "haserroroutput": false,
        "outputs": 1,
        "x": 760,
        "y": 2400,
        "wires": [
            []
        ]
    },
    {
        "id": "c95ae907.49e268",
        "type": "function",
        "z": "d6ad709e.7c639",
        "name": "store messageId",
        "func": "// Here we store the message id of the live location message, \n// as we need to update exactly this one later\n\nvar messageId = msg.payload.sentMessageId;\nflow.set(\"messageId\", messageId);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 960,
        "y": 2220,
        "wires": [
            [
                "f402c0e0.f7387"
            ]
        ]
    },
    {
        "id": "ecf89a6f.b65cf8",
        "type": "telegram event",
        "z": "d6ad709e.7c639",
        "name": "live location receiver",
        "bot": "9b2b343e.8ba328",
        "event": "edited_message",
        "autoanswer": "",
        "x": 230,
        "y": 2580,
        "wires": [
            [
                "7c39a13.7fa4c6"
            ]
        ]
    },
    {
        "id": "7c39a13.7fa4c6",
        "type": "function",
        "z": "d6ad709e.7c639",
        "name": "filter live location",
        "func": "if(msg.payload.location)\n{\n    var lat = msg.payload.location.latitude;\n    var lng = msg.payload.location.longitude;\n    var user = msg.payload.from.username;\n    \n    msg.payload.type = 'message';\n    msg.payload.content = user + ' moved to lat=' + lat + ' lon=' + lng;\n    \n    return msg;\n}\nelse\n{\n    return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 460,
        "y": 2580,
        "wires": [
            [
                "dc174ebf.53e2c"
            ]
        ]
    },
    {
        "id": "f622f3df.e33968",
        "type": "debug",
        "z": "d6ad709e.7c639",
        "name": "",
        "active": true,
        "tosidebar": false,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 2180,
        "wires": []
    },
    {
        "id": "f402c0e0.f7387",
        "type": "debug",
        "z": "d6ad709e.7c639",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1160,
        "y": 2220,
        "wires": []
    },
    {
        "id": "11e798f8.9df047",
        "type": "telegram command",
        "z": "d6ad709e.7c639",
        "name": "/help",
        "command": "/help",
        "bot": "9b2b343e.8ba328",
        "strict": false,
        "hasresponse": false,
        "useregex": false,
        "removeregexcommand": false,
        "outputs": 1,
        "x": 70,
        "y": 460,
        "wires": [
            [
                "3f57a55e.737d22"
            ]
        ]
    },
    {
        "id": "3f57a55e.737d22",
        "type": "function",
        "z": "d6ad709e.7c639",
        "name": "create help text",
        "func": "var helpMessage = \"I am here to help you manage <b>iSensPro</b> gateways\";\n\nhelpMessage += '\\r\\n';\nhelpMessage += ' /help - shows help';\nhelpMessage += '\\r\\n';\nhelpMessage += '\\r\\n /start  - opens a dialog';\nhelpMessage += '\\r\\n /stop  - stops the dialog';\nhelpMessage += '\\r\\n';\n//helpMessage += '\\r\\n You are welcome: '+ msg.originalMessage.from.username;\n//helpMessage += '\\r\\n Your chat id is ' + msg.payload.chatId;\n//helpMessage += '\\r\\n';\nhelpMessage += '\\r\\n /receive - starts or stops reception of data from gateway';\nhelpMessage += '\\r\\n /read     - reads configuration data of customer or sensor';\nhelpMessage += '\\r\\n /write    - writes configuration data of customer or sensor';\n\n\nmsg.payload = {\nchatId:'1866897836',\ntype:'message',\ncontent: helpMessage\n}\nmsg.payload.options = {parse_mode : \"HTML\"};\n\n\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 460,
        "wires": [
            [
                "b3df8a16.5a99e8"
            ]
        ]
    },
    {
        "id": "b3df8a16.5a99e8",
        "type": "telegram sender",
        "z": "d6ad709e.7c639",
        "name": "send response",
        "bot": "9b2b343e.8ba328",
        "haserroroutput": true,
        "outputs": 2,
        "x": 500,
        "y": 460,
        "wires": [
            [],
            [
                "70896a0d.8b2784"
            ]
        ]
    },
    {
        "id": "d5c7de2f.f85358",
        "type": "debug",
        "z": "d6ad709e.7c639",
        "name": "Debug",
        "active": false,
        "console": "false",
        "complete": "payload",
        "x": 250,
        "y": 300,
        "wires": []
    },
    {
        "id": "32e0e6a8.c64aa2",
        "type": "catch",
        "z": "d6ad709e.7c639",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 70,
        "y": 300,
        "wires": [
            [
                "d5c7de2f.f85358"
            ]
        ]
    },
    {
        "id": "7bb8377d.c50088",
        "type": "telegram command",
        "z": "d6ad709e.7c639",
        "name": "/start",
        "command": "/start",
        "bot": "9b2b343e.8ba328",
        "strict": false,
        "hasresponse": false,
        "useregex": false,
        "removeregexcommand": false,
        "outputs": 1,
        "x": 70,
        "y": 360,
        "wires": [
            [
                "4ca588e3.ce60e"
            ]
        ]
    },
    {
        "id": "4ca588e3.ce60e",
        "type": "function",
        "z": "d6ad709e.7c639",
        "name": "create start text",
        "func": "var helpMessage = \"Hi there !\";\nhelpMessage += '\\r\\n I am <i><b>Customer1 Gateway1</b></i> bot';\n\n\n//var helpMessage = \"{{msg.originalMessage.from.username}}\";\n\n// helpMessage += \"\\r\\n/foo - opens a dialog\";\n// helpMessage += \"\\r\\n\";\nhelpMessage += '\\r\\nYou are welcome: ' ;\nhelpMessage += '<b>';\nhelpMessage +=  msg.originalMessage.from.username;\nhelpMessage += '</b>';\nhelpMessage += \"\\r\\nYour chat id is \" \nhelpMessage += msg.payload.chatId;\nhelpMessage += \"\\r\\n\";\n\nmsg.payload = {\nchatId:'1866897836',\ntype:'message',\ncontent: helpMessage\n}\n\nmsg.payload.options = {parse_mode : \"HTML\"}; \n\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 360,
        "wires": [
            [
                "90cc7c20.e79e5"
            ]
        ]
    },
    {
        "id": "90cc7c20.e79e5",
        "type": "telegram sender",
        "z": "d6ad709e.7c639",
        "name": "send response",
        "bot": "9b2b343e.8ba328",
        "haserroroutput": true,
        "outputs": 2,
        "x": 500,
        "y": 360,
        "wires": [
            [],
            [
                "c4ab5706.34f388"
            ]
        ]
    },
    {
        "id": "118ae906.9c5ec7",
        "type": "debug",
        "z": "d6ad709e.7c639",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 1060,
        "wires": []
    },
    {
        "id": "c4ab5706.34f388",
        "type": "debug",
        "z": "d6ad709e.7c639",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 380,
        "wires": []
    },
    {
        "id": "70896a0d.8b2784",
        "type": "debug",
        "z": "d6ad709e.7c639",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 480,
        "wires": []
    },
    {
        "id": "edc428b6.18f8f8",
        "type": "file in",
        "z": "de4ffc77.a55ab8",
        "name": "",
        "filename": "/sys/class/thermal/thermal_zone1/temp",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 350,
        "y": 200,
        "wires": [
            [
                "182da18d.620896"
            ]
        ]
    },
    {
        "id": "de464696.34d",
        "type": "inject",
        "z": "de4ffc77.a55ab8",
        "name": "Bluetooth IN",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "[\"Master1\", \"Master2\", \"Master3\"]",
        "payloadType": "json",
        "x": 160,
        "y": 80,
        "wires": [
            [
                "f24a4b6f.c90b78"
            ]
        ]
    },
    {
        "id": "182da18d.620896",
        "type": "function",
        "z": "de4ffc77.a55ab8",
        "name": "Surftemp",
        "func": "msg.payload = msg.payload.replace(/\\n/g,\"\");\n\nmsg.surftemp = Number(msg.payload);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 200,
        "wires": [
            [
                "44c55730.dcc33"
            ]
        ]
    },
    {
        "id": "fd992dda.7c9ef8",
        "type": "comment",
        "z": "de4ffc77.a55ab8",
        "name": "Receive Masters & write to Timesieries database",
        "info": "",
        "x": 240,
        "y": 40,
        "wires": []
    },
    {
        "id": "1cc8cd4b.efbd1b",
        "type": "Number",
        "z": "de4ffc77.a55ab8",
        "name": "Cap Measurement",
        "minimum": "0",
        "maximum": "800000",
        "roundTo": "0",
        "Floor": true,
        "x": 590,
        "y": 140,
        "wires": [
            [
                "e429b4f3.c9245"
            ]
        ]
    },
    {
        "id": "ed7ea7e9.53adb",
        "type": "Number",
        "z": "de4ffc77.a55ab8",
        "name": "Accel",
        "minimum": "0",
        "maximum": "100",
        "roundTo": "0",
        "Floor": true,
        "x": 890,
        "y": 140,
        "wires": [
            [
                "faa26eda.948a7"
            ]
        ]
    },
    {
        "id": "44c55730.dcc33",
        "type": "function",
        "z": "de4ffc77.a55ab8",
        "name": "Inttemp",
        "func": "msg.inttemp = Number(msg.surftemp) + 1000;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 200,
        "wires": [
            [
                "4c48139d.b3657c"
            ]
        ]
    },
    {
        "id": "4c48139d.b3657c",
        "type": "function",
        "z": "de4ffc77.a55ab8",
        "name": "Exttemp",
        "func": "msg.exttemp = Number(msg.surftemp) + 2000;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 200,
        "wires": [
            [
                "cc5d91bb.6ed5c8"
            ]
        ]
    },
    {
        "id": "f18fffc8.eca5e",
        "type": "postgrestor",
        "z": "de4ffc77.a55ab8",
        "name": "sensor_data@localhost",
        "query": "INSERT INTO sensor_data_table \n(\n    ts, \n    sensorid, \n    cap, \n    accel, \n    surftemp,\n    inttemp, \n    exttemp, \n    mvbat, \n    mvnoise\n) VALUES\n(\n    '{{msg.timestamp}}', \n    '{{msg.id}}', \n    '{{msg.cap}}', \n    '{{msg.accel}}', \n    '{{msg.surftemp}}', \n    '{{msg.inttemp}}', \n    '{{msg.exttemp}}', \n    '{{msg.mvbat}}',\n    '{{msg.mvnoise}}'\n);\n",
        "postgresDB": "de6b1325.f01d58",
        "output": true,
        "outputs": 1,
        "x": 450,
        "y": 420,
        "wires": [
            [
                "427076c8.d5dcf8"
            ]
        ]
    },
    {
        "id": "749ae403.e8c9ac",
        "type": "csv",
        "z": "de4ffc77.a55ab8",
        "name": "",
        "sep": ",",
        "hdrin": false,
        "hdrout": "",
        "multi": "one",
        "ret": "\\n",
        "temp": "ts, sensorid, cap, accel, surftemp, inttemp, exttemp, mvbat, mvnoise",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 250,
        "y": 420,
        "wires": [
            [
                "55b50156.f5193",
                "f18fffc8.eca5e"
            ]
        ]
    },
    {
        "id": "55b50156.f5193",
        "type": "debug",
        "z": "de4ffc77.a55ab8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 410,
        "y": 480,
        "wires": []
    },
    {
        "id": "e429b4f3.c9245",
        "type": "function",
        "z": "de4ffc77.a55ab8",
        "name": "",
        "func": "msg.cap = msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 140,
        "wires": [
            [
                "ed7ea7e9.53adb"
            ]
        ]
    },
    {
        "id": "faa26eda.948a7",
        "type": "function",
        "z": "de4ffc77.a55ab8",
        "name": "",
        "func": "msg.accel = msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 140,
        "wires": [
            [
                "edc428b6.18f8f8"
            ]
        ]
    },
    {
        "id": "87c2f099.ee92a8",
        "type": "debug",
        "z": "de4ffc77.a55ab8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 320,
        "wires": []
    },
    {
        "id": "f2d63211.ab2d98",
        "type": "function",
        "z": "de4ffc77.a55ab8",
        "name": "Serial String",
        "func": "\nmsg.payload = String(msg.timestamp)+','+ String(msg.id)+','+String(msg.cap)+','+String(msg.accel)+','+String(msg.surftemp)+','+String(msg.inttemp)+','+String(msg.exttemp)+','+String(msg.mvbat)+','+ String(msg.mvnoise)+'\\n';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 320,
        "wires": [
            [
                "749ae403.e8c9ac",
                "87c2f099.ee92a8"
            ]
        ]
    },
    {
        "id": "192c21c6.8ddbc6",
        "type": "debug",
        "z": "de4ffc77.a55ab8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 260,
        "wires": []
    },
    {
        "id": "cea68988.6a7b08",
        "type": "Number",
        "z": "de4ffc77.a55ab8",
        "name": "Sensor ID",
        "minimum": "1",
        "maximum": "244",
        "roundTo": "0",
        "Floor": true,
        "x": 280,
        "y": 140,
        "wires": [
            [
                "d72523e8.f36b98"
            ]
        ]
    },
    {
        "id": "d72523e8.f36b98",
        "type": "function",
        "z": "de4ffc77.a55ab8",
        "name": "",
        "func": "msg.id = msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 140,
        "wires": [
            [
                "1cc8cd4b.efbd1b"
            ]
        ]
    },
    {
        "id": "cc5d91bb.6ed5c8",
        "type": "Number",
        "z": "de4ffc77.a55ab8",
        "name": "mvbat",
        "minimum": "2100",
        "maximum": "3300",
        "roundTo": "0",
        "Floor": true,
        "x": 250,
        "y": 260,
        "wires": [
            [
                "78c10c95.b01e5c"
            ]
        ]
    },
    {
        "id": "95d1a52.8d9dfd8",
        "type": "Number",
        "z": "de4ffc77.a55ab8",
        "name": "mvnoise",
        "minimum": "0",
        "maximum": "100",
        "roundTo": "0",
        "Floor": true,
        "x": 540,
        "y": 260,
        "wires": [
            [
                "97aa2128.c4cb2"
            ]
        ]
    },
    {
        "id": "78c10c95.b01e5c",
        "type": "function",
        "z": "de4ffc77.a55ab8",
        "name": "",
        "func": "msg.mvbat = msg.payload;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 260,
        "wires": [
            [
                "95d1a52.8d9dfd8"
            ]
        ]
    },
    {
        "id": "97aa2128.c4cb2",
        "type": "function",
        "z": "de4ffc77.a55ab8",
        "name": "",
        "func": "msg.mvnoise = msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 260,
        "wires": [
            [
                "192c21c6.8ddbc6",
                "594159d5.f9ae08"
            ]
        ]
    },
    {
        "id": "f24a4b6f.c90b78",
        "type": "random-item",
        "z": "de4ffc77.a55ab8",
        "name": "Master ID",
        "input": "payload",
        "inputType": "msg",
        "output": "payload",
        "outputType": "msg",
        "number": "1",
        "x": 320,
        "y": 80,
        "wires": [
            [
                "5aa6fcc.d7b2b04"
            ]
        ]
    },
    {
        "id": "5aa6fcc.d7b2b04",
        "type": "function",
        "z": "de4ffc77.a55ab8",
        "name": "",
        "func": "msg.topic = msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 80,
        "wires": [
            [
                "cea68988.6a7b08"
            ]
        ]
    },
    {
        "id": "594159d5.f9ae08",
        "type": "timestamp",
        "z": "de4ffc77.a55ab8",
        "name": "",
        "x": 430,
        "y": 320,
        "wires": [
            [
                "f2d63211.ab2d98"
            ]
        ]
    },
    {
        "id": "427076c8.d5dcf8",
        "type": "debug",
        "z": "de4ffc77.a55ab8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 480,
        "wires": []
    },
    {
        "id": "b9758b69.0dc918",
        "type": "csv",
        "z": "3fb5a67.37c495a",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "col1,date, time, col2, nodeid, col3, battery, col4, temp1, col5, temp2, col6, accel, col7, vhigh, col8, vlow, col9, rcharge, col10, mwindow, col11, noise,col12,no,col13,value, col14,avg,col15,stdv,col16,z",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 1090,
        "y": 1060,
        "wires": [
            [
                "145efc8d.715e83"
            ]
        ]
    },
    {
        "id": "145efc8d.715e83",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "",
        "func": "//msg.topic = msg.port.slice(-1);\nmsg.masterid = msg.topic;\nmsg.sensorid = msg.payload.nodeid;\nmsg.date = msg.payload.date;\nmsg.time = msg.payload.time;\nmsg.surftemp = parseInt(msg.payload.temp1 *100);\nmsg.exttemp = parseInt(msg.payload.temp2*100);\nmsg.inttemp = parseInt(msg.payload.temp2*100);\nmsg.accel = msg.payload.accel;\nmsg.mvnoise = msg.payload.noise;\nmsg.mvbat = msg.payload.battery;\nmsg.cap = msg.payload.value;\nmsg.vhigh = msg.payload.vhigh;\nmsg.vlow = msg.payload.vlow;\nmsg.rcharge = msg.payload.rcharge;\nmsg.mwindow = msg.payload.mwindow;\nmsg.sequence = msg.payload.no;\nmsg.noise = msg.payload.noise;\nmsg.avg = msg.payload.avg;\nmsg.stdev = msg.payload.stdv;\nmsg.z = msg.payload.z;\nmsg.batterymv = msg.payload.battery;\n//msg.description = msg.payload.description;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 1060,
        "wires": [
            [
                "cbfa55f1.677c9",
                "cbab7f70.4545f"
            ]
        ]
    },
    {
        "id": "f0c5ccd4.c96c98",
        "type": "switch",
        "z": "23aae268.c697d6",
        "name": "analyze subject email",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "access request",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "isenspro access request",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": true,
        "outputs": 3,
        "x": 300,
        "y": 200,
        "wires": [
            [
                "26c4339.5d6b6cc"
            ],
            [
                "c14f01d3.7ae2f"
            ],
            []
        ]
    },
    {
        "id": "26c4339.5d6b6cc",
        "type": "function",
        "z": "23aae268.c697d6",
        "name": "set adressees",
        "func": "\nmsg.payload =   'Dear,\\n\\r' + \n                ' an iSensPro gateway access link has been created for you :\\n' + \n                '    for configuration  : https://nrcust1gw1.eu.ngrok.io/ui \\n' +\n                '    for graphs         : https://grcust1gw1.eu.ngrok.io/d/X6NRqJznk/isenspro?orgId=1&refresh=5m \\n'+\n                ' for a duration of 1 hour';\n\nmsg.originator = msg.from;\nmsg.to = msg.from + ',' + msg.cc;\nmsg.cc = 'log@isenspro.com';\n// msg.from = gateway address; subsequent request to this gateway will be bo-locked, but customers can use the existing tunnel for the remaining time\nmsg.from = msg.header.to.value[0].address;\nmsg.topic = 'iSensPro access request granted';\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 180,
        "wires": [
            [
                "fa83f601.a9576",
                "98b51c0f.fa4d1",
                "ee9d704b.337628"
            ]
        ]
    },
    {
        "id": "fa83f601.a9576",
        "type": "e-mail",
        "z": "23aae268.c697d6",
        "server": "mail.isenspro.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "",
        "dname": "reply email",
        "x": 990,
        "y": 260,
        "wires": []
    },
    {
        "id": "694ff596.7d1114",
        "type": "serial in",
        "z": "3fb5a67.37c495a",
        "name": "",
        "serial": "dc726705.a597c8",
        "x": 130,
        "y": 1060,
        "wires": [
            [
                "be96bd9d.aac458"
            ]
        ]
    },
    {
        "id": "d6d9ecd0.af98",
        "type": "inject",
        "z": "a66ad1ae.ff0e18",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 820,
        "wires": [
            [
                "a9059aa8.595208",
                "3952e473.c6b40c"
            ]
        ]
    },
    {
        "id": "a55f077f.f65ca",
        "type": "ui_text",
        "z": "a66ad1ae.ff0e18",
        "group": "ce8b884.b3726f8",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "UTC",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 550,
        "y": 820,
        "wires": []
    },
    {
        "id": "3952e473.c6b40c",
        "type": "moment",
        "z": "a66ad1ae.ff0e18",
        "name": "",
        "topic": "",
        "input": "payload",
        "inputType": "msg",
        "inTz": "ETC/UTC",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "",
        "locale": "en-US",
        "output": "payload",
        "outputType": "msg",
        "outTz": "ETC/UTC",
        "x": 340,
        "y": 820,
        "wires": [
            [
                "a55f077f.f65ca"
            ]
        ]
    },
    {
        "id": "5427d773.ee47f",
        "type": "comment",
        "z": "a66ad1ae.ff0e18",
        "name": "This computer",
        "info": "",
        "x": 100,
        "y": 780,
        "wires": []
    },
    {
        "id": "a9059aa8.595208",
        "type": "debug",
        "z": "a66ad1ae.ff0e18",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 330,
        "y": 860,
        "wires": []
    },
    {
        "id": "c465ded.84b522",
        "type": "inject",
        "z": "a66ad1ae.ff0e18",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "900",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 900,
        "wires": [
            [
                "54ee6897.88fbc"
            ]
        ]
    },
    {
        "id": "db364123.c495c8",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "Change sensor ID (1)",
        "func": "msg.return_start = 1;\nmsg.return_end = 13;\nmsg.backspaces = 3;\n\n// reset max noise level\nflow.set('maxnoiseM1',0);\n\nmsg.newvalue = '';\n\nvar sensorid = String(flow.get('sensorIDM1'));\n\n//padding before number\nfor(var j = 0; j < (msg.backspaces-sensorid.length); j++)\n{ \n    msg.newvalue += '0';\n}\n\n\nfor(var i = 0; i < sensorid.length; i++)\n{ \n    msg.newvalue += sensorid[i];\n}\n\nmsg.newvalue = msg.newvalue.toString();\nmsg.topic = 1;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1480,
        "y": 1880,
        "wires": [
            [
                "9ceb2bbb.7655c8"
            ]
        ]
    },
    {
        "id": "da398ace.674508",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "Change measurement period (2)",
        "func": "msg.return_start = 2;\nmsg.return_end = 12;\nmsg.backspaces = 5;\nmsg.newvalue = msg.payload;\n\n// reset max noise level\nflow.set('maxnoiseM1',0);\n\nmsg.newvalue = '';\n\nvar mperiod = String(flow.get('mperiodM1'));\n\n//padding before number\nfor(var j = 0; j < (msg.backspaces-mperiod.length); j++)\n{ \n    msg.newvalue += '0';\n}\n\n\nfor(var i = 0; i < mperiod.length; i++)\n{ \n    msg.newvalue += mperiod[i];\n}\n\nmsg.newvalue = msg.newvalue.toString();\nmsg.topic = 2;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1450,
        "y": 1960,
        "wires": [
            [
                "9ceb2bbb.7655c8"
            ]
        ]
    },
    {
        "id": "177c08e2.41e08f",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "Change measurement window (3)",
        "func": "msg.return_start = 3;\nmsg.return_end = 11;\nmsg.backspaces = 5;\nmsg.newvalue = msg.payload;\n\n// reset max noise level\nflow.set('maxnoiseM1',0);\n\nmsg.newvalue = '';\n\nvar mwindow = String(flow.get('mwindowM1'));\n\n//padding before number\nfor(var j = 0; j < (msg.backspaces-mwindow.length); j++)\n{ \n    msg.newvalue += '0';\n}\n\n\nfor(var i = 0; i < mwindow.length; i++)\n{ \n    msg.newvalue += mwindow[i];\n}\n\nmsg.newvalue = msg.newvalue.toString();\nmsg.topic = 3;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1460,
        "y": 2040,
        "wires": [
            [
                "9ceb2bbb.7655c8"
            ]
        ]
    },
    {
        "id": "3c8baa35.b20efe",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "Change VHigh (4)",
        "func": "msg.return_start = 4;\nmsg.return_end = 10;\nmsg.backspaces = 4;\n\n// reset max noise level\nflow.set('maxnoiseM1',0);\n\nmsg.newvalue = '';\n\nvar vhigh = String(flow.get('vhighM1'));\n\n//padding before number\nfor(var j = 0; j < (msg.backspaces-vhigh.length); j++)\n{ \n    msg.newvalue += '0';\n}\n\n\nfor(var i = 0; i < vhigh.length; i++)\n{ \n    msg.newvalue += vhigh[i];\n}\n\nmsg.newvalue = msg.newvalue.toString();\nmsg.topic = 4;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1490,
        "y": 2120,
        "wires": [
            [
                "9ceb2bbb.7655c8"
            ]
        ]
    },
    {
        "id": "85ab3fc9.1e558",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "Change VLow (5)",
        "func": "msg.return_start = 5;\nmsg.return_end = 9;\nmsg.backspaces = 4;\nmsg.newvalue = msg.payload;\n\n// reset max noise level\nflow.set('maxnoiseM1',0);\n\nmsg.newvalue = '';\n\nvar vlow = String(flow.get('vlowM1'));\n\n//padding before number\nfor(var j = 0; j < (msg.backspaces-vlow.length); j++)\n{ \n    msg.newvalue += '0';\n}\n\n\nfor(var i = 0; i < vlow.length; i++)\n{ \n    msg.newvalue += vlow[i];\n}\n\nmsg.newvalue = msg.newvalue.toString();\nmsg.topic = 5;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1490,
        "y": 2200,
        "wires": [
            [
                "9ceb2bbb.7655c8"
            ]
        ]
    },
    {
        "id": "9cae45f4.4b08d8",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "Change RCharge (6)",
        "func": "msg.return_start = 6;\nmsg.return_end = 8;\nmsg.backspaces = 6;\nmsg.newvalue = msg.payload;\n\n// reset max noise level\nflow.set('maxnoiseM1',0);\n\nmsg.newvalue = '';\n\nvar rcharge = String(flow.get('rchargeM1'));\n\n//padding before number\nfor(var j = 0; j < (msg.backspaces-rcharge.length); j++)\n{ \n    msg.newvalue += '0';\n}\n\n\nfor(var i = 0; i < rcharge.length; i++)\n{ \n    msg.newvalue += rcharge[i];\n}\n\nmsg.newvalue = msg.newvalue.toString();\nmsg.topic = 6;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1480,
        "y": 2280,
        "wires": [
            [
                "9ceb2bbb.7655c8"
            ]
        ]
    },
    {
        "id": "9d3bae9c.9fcd48",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "Change ROut (7)",
        "func": "msg.return_start = 7;\nmsg.return_end = 7;\nmsg.backspaces = 6;\nmsg.newvalue = msg.payload;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1490,
        "y": 2500,
        "wires": [
            [
                "9ceb2bbb.7655c8"
            ]
        ]
    },
    {
        "id": "412938b9.a12418",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "Change Accel sensitivity (8)",
        "func": "msg.return_start = 8;\nmsg.return_end = 6;\nmsg.backspaces = 4;\nmsg.newvalue = msg.payload;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1460,
        "y": 2540,
        "wires": [
            [
                "9ceb2bbb.7655c8"
            ]
        ]
    },
    {
        "id": "7aa8a688.64681",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "Change Number of sensors (9)",
        "func": "msg.return_start = 9;\nmsg.return_end = 5;\nmsg.backspaces = 3;\nmsg.newvalue = msg.payload;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1450,
        "y": 2580,
        "wires": [
            [
                "9ceb2bbb.7655c8"
            ]
        ]
    },
    {
        "id": "1a642dd.5982d52",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "Change Custom byte (10)",
        "func": "msg.return_start = 4;\nmsg.return_end = 10;\nmsg.backspaces = 4;\nmsg.newvalue = msg.payload;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1470,
        "y": 2620,
        "wires": [
            [
                "9ceb2bbb.7655c8"
            ]
        ]
    },
    {
        "id": "21b73e5b.5d6cf2",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "Change Reserved (TXPower) (11)",
        "func": "msg.return_start = 11;\nmsg.return_end = 3;\nmsg.backspaces = 5;\nmsg.newvalue = msg.payload;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1440,
        "y": 2660,
        "wires": [
            [
                "9ceb2bbb.7655c8"
            ]
        ]
    },
    {
        "id": "3a72bf41.8f1b6",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "Change reserved (last) (13)",
        "func": "msg.return_start = 13;\nmsg.return_end = 11;\nmsg.backspaces = 5;\nmsg.newvalue = msg.payload;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1460,
        "y": 2740,
        "wires": [
            [
                "9ceb2bbb.7655c8"
            ]
        ]
    },
    {
        "id": "c203b492.952d9",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "Change reserved (frequency) (12)",
        "func": "msg.return_start = 12;\nmsg.return_end = 2;\nmsg.backspaces = 5;\nmsg.newvalue = msg.payload;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1440,
        "y": 2700,
        "wires": [
            [
                "9ceb2bbb.7655c8"
            ]
        ]
    },
    {
        "id": "2a86b487.02eb84",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "Change nothing (14)",
        "func": "// reset max noise level\nglobal.set('maxnoise',0);\n\nmsg.payload ='\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 2780,
        "wires": [
            [
                "e9d2472.d03f5b8"
            ]
        ]
    },
    {
        "id": "1e136941.9970a7",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "scroll till end",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1670,
        "y": 2780,
        "wires": [
            [
                "a8bb996d.ba216"
            ]
        ]
    },
    {
        "id": "10ceb888.3ae5df",
        "type": "serial out",
        "z": "3fb5a67.37c495a",
        "name": "",
        "serial": "dc726705.a597c8",
        "x": 2080,
        "y": 2200,
        "wires": []
    },
    {
        "id": "e9d2472.d03f5b8",
        "type": "delay",
        "z": "3fb5a67.37c495a",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 1520,
        "y": 2780,
        "wires": [
            [
                "1e136941.9970a7"
            ]
        ]
    },
    {
        "id": "fd3e1605.06a6c8",
        "type": "e-mail",
        "z": "23aae268.c697d6",
        "server": "mail.isenspro.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "log@isenspro.com",
        "dname": "log email",
        "x": 120,
        "y": 140,
        "wires": []
    },
    {
        "id": "539bf2d.dca938c",
        "type": "postgrestor",
        "z": "23aae268.c697d6",
        "name": "customer_config@localhost",
        "query": "\n--\t\"customerID\" serial NOT NULL,\n--\t\"cust_geom\" geography (POLYGON),\n--\t\"timezone\" varchar(50),\n--\t\"description\" varchar(50),\n--\t\"custom_byte\" character,\n--\t\"webpage\" varchar(50),\n--\t\"name\" varchar(50),\n--\t\"street\" varchar(50),\n--\t\"number\" varchar(50),\n--\t\"ZIP\" varchar(50),\n--\t\"town\" varchar(50),\n--\t\"country\" varchar(50),\n--\t\"active\" boolean,\n--\t\"new_date\" date,\n--\t\"active_date\" date,\n--\t\"deactive_date\" date,\n--\t\"logo\" bytea,\n--\t\"latitude\" numeric,\n--\t\"longitude\" numeric,\n-- msg.topic = table \n--DROP TABLE IF EXISTS \"{{ msg.topic }}\" CASCADE;\n\nINSERT INTO \"{{ msg.topic }}\"\n(\n    timezone,\n    description, \n    custom_byte, \n    webpage,\n    name,\n    street,\n    number,\n    ZIP,\n    town,\n    country,\n    active,\n    latitude,\n    longitude\n)\nVALUES\n(\n    '-NEW-',\n    '-NEW-',\n    'x',\n    '-NEW-',\n    '-NEW-',\n    '-NEW-',\n    '1234', \n    '-NEW-',\n    '-NEW-',\n    '-NEW-',\n    false,\n    00.00,    \n    00.00\n);\n\n-- SELECT \n--    pg_terminate_backend(pid) \n--FROM \n--    pg_stat_activity \n--WHERE \n    -- don't kill my own connection!\n--    pid <> pg_backend_pid();",
        "postgresDB": "47fd9ead.7e0dd8",
        "output": true,
        "outputs": 1,
        "x": 600,
        "y": 900,
        "wires": [
            [
                "4931948.b7b70ec"
            ]
        ]
    },
    {
        "id": "325033a0.4424c4",
        "type": "inject",
        "z": "23aae268.c697d6",
        "name": "",
        "props": [
            {
                "p": "time",
                "v": "",
                "vt": "date"
            },
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "customerID",
                "v": "1",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "customer_config_table",
        "payloadType": "str",
        "x": 160,
        "y": 900,
        "wires": [
            [
                "fbf02245.b904e"
            ]
        ]
    },
    {
        "id": "7990a53a.4cc2b4",
        "type": "inject",
        "z": "a66ad1ae.ff0e18",
        "name": "customer_geom::database",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "customer_geom",
        "payloadType": "str",
        "x": 150,
        "y": 120,
        "wires": [
            [
                "aab28f8d.eb06c8"
            ]
        ]
    },
    {
        "id": "3f30e332.594f3c",
        "type": "exec",
        "z": "a66ad1ae.ff0e18",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 530,
        "y": 120,
        "wires": [
            [],
            [],
            [
                "82786711.80be18"
            ]
        ]
    },
    {
        "id": "aab28f8d.eb06c8",
        "type": "template",
        "z": "a66ad1ae.ff0e18",
        "name": "extensions",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "echo '\\x \\\\ DROP DATABASE IF EXISTS {{msg.topic}};' | psql -U postgres -h localhost\n\necho '\\x \\\\ CREATE DATABASE {{msg.topic}};' | psql -U postgres -h localhost\necho '\\x \\\\ CREATE EXTENSION IF NOT EXISTS timescaledb CASCADE;' | psql -U postgres -h localhost -d customer_geom\necho '\\x \\\\ CREATE EXTENSION IF NOT EXISTS postgis CASCADE;' | psql -U postgres -h localhost -d customer_geom\n",
        "output": "str",
        "x": 350,
        "y": 120,
        "wires": [
            [
                "3f30e332.594f3c"
            ]
        ]
    },
    {
        "id": "82786711.80be18",
        "type": "debug",
        "z": "a66ad1ae.ff0e18",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 120,
        "wires": []
    },
    {
        "id": "85c5b32e.0cb0d",
        "type": "debug",
        "z": "23aae268.c697d6",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 290,
        "y": 140,
        "wires": []
    },
    {
        "id": "26317863.e57f6",
        "type": "exec",
        "z": "23aae268.c697d6",
        "command": "/home/nuci3/Downloads/ngrok start nodered2 grafana2 postgres2 remmina2",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "ngrok isenspro access",
        "x": 1140,
        "y": 340,
        "wires": [
            [
                "8b299034.b65ef"
            ],
            [
                "8b299034.b65ef"
            ],
            [
                "8b299034.b65ef"
            ]
        ]
    },
    {
        "id": "86b8cee1.18ef8",
        "type": "exec",
        "z": "23aae268.c697d6",
        "command": "/home/nuci3/Downloads/ngrok start nodered1 grafana1",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "ngrok access",
        "x": 1130,
        "y": 180,
        "wires": [
            [
                "71d571f5.8b6618"
            ],
            [
                "71d571f5.8b6618"
            ],
            [
                "71d571f5.8b6618"
            ]
        ]
    },
    {
        "id": "c14f01d3.7ae2f",
        "type": "function",
        "z": "23aae268.c697d6",
        "name": "set adressees",
        "func": "\nmsg.payload =   'Dear,\\n\\r' + \n                ' an iSensPro gateway access link has been created for you :\\n\\r' + \n                '    for configuration  : https://nrisensprocust1gw1.eu.ngrok.io \\n\\r' +\n                '    for graphs         : https://grisensprocust1gw1.eu.ngrok.io \\n\\r' +\n                '    for postgres       : https://pgisensprocust1gw1.eu.ngrok.io \\n\\r'+\n                '    for vnc            : https://vncisensprocust1gw1.eu.ngrok.io \\n\\r'+\n                ' for a duration of 4 hours';\n\nmsg.originator = msg.from;\nmsg.to = msg.from + ',' + msg.cc;\nmsg.cc = 'log@isenspro.com';\n// msg.from = gateway address; subsequent request to this gateway will be bo-locked, but customers can use the existing tunnel for the remaining time\nmsg.from = msg.header.to.value[0].address;\nmsg.topic = 'iSensPro access request granted';\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 360,
        "wires": [
            [
                "fa83f601.a9576",
                "556670db.2ce408"
            ]
        ]
    },
    {
        "id": "8b299034.b65ef",
        "type": "debug",
        "z": "23aae268.c697d6",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 340,
        "wires": []
    },
    {
        "id": "be04ab5a.f8e3a",
        "type": "function",
        "z": "23aae268.c697d6",
        "name": "set adressees",
        "func": "\nmsg.payload =   'Dear,\\n\\r' + \n                ' the iSensPro gateway access link has been stopped \\n';\n                \nmsg.to = msg.originator + ',' + msg.cc;\nmsg.cc = 'log@isenspro.com';\nmsg.from = msg.header.to.value[0].address;\nmsg.topic = 'iSensPro access request stopped';\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 260,
        "wires": [
            [
                "fa83f601.a9576",
                "cfc1f2c8.91513"
            ]
        ]
    },
    {
        "id": "71d571f5.8b6618",
        "type": "debug",
        "z": "23aae268.c697d6",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1290,
        "y": 180,
        "wires": []
    },
    {
        "id": "98b51c0f.fa4d1",
        "type": "rbe",
        "z": "23aae268.c697d6",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "from",
        "x": 790,
        "y": 180,
        "wires": [
            [
                "17d23a58.b24a46",
                "555a99fb.e05708"
            ]
        ]
    },
    {
        "id": "7f77b620.4bab28",
        "type": "function",
        "z": "23aae268.c697d6",
        "name": "reset block",
        "func": "msg.reset = true;\nmsg.topic = 'iSensPro access request granted';\nmsg.from = '';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 120,
        "wires": [
            [
                "98b51c0f.fa4d1",
                "b139562.32aafa8"
            ]
        ]
    },
    {
        "id": "556670db.2ce408",
        "type": "rbe",
        "z": "23aae268.c697d6",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "from",
        "x": 790,
        "y": 360,
        "wires": [
            [
                "11344d99.e89d92"
            ]
        ]
    },
    {
        "id": "9a3f267.6074058",
        "type": "comment",
        "z": "23aae268.c697d6",
        "name": "\"access request\" received ?",
        "info": "",
        "x": 160,
        "y": 100,
        "wires": []
    },
    {
        "id": "e7abff2e.4802b",
        "type": "delay",
        "z": "23aae268.c697d6",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "hours",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 600,
        "y": 240,
        "wires": [
            [
                "be04ab5a.f8e3a",
                "abad2f99.75e8f",
                "fa68a92.81a11d8"
            ]
        ]
    },
    {
        "id": "a1b4490f.0f5138",
        "type": "delay",
        "z": "23aae268.c697d6",
        "name": "",
        "pauseType": "delay",
        "timeout": "4",
        "timeoutUnits": "hours",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 600,
        "y": 300,
        "wires": [
            [
                "be04ab5a.f8e3a",
                "d7204e7e.924718"
            ]
        ]
    },
    {
        "id": "78b0f5ef.4aff4c",
        "type": "function",
        "z": "23aae268.c697d6",
        "name": "reset block",
        "func": "msg.reset = true;\nmsg.topic = 'iSensPro access request granted';\nmsg.from = '';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 420,
        "wires": [
            [
                "556670db.2ce408"
            ]
        ]
    },
    {
        "id": "d16fbc4.78a534",
        "type": "inject",
        "z": "23aae268.c697d6",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "access request",
        "payload": "",
        "payloadType": "date",
        "x": 1230,
        "y": 120,
        "wires": [
            [
                "86b8cee1.18ef8"
            ]
        ]
    },
    {
        "id": "bd6084a0.068838",
        "type": "debug",
        "z": "23aae268.c697d6",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 1300,
        "wires": []
    },
    {
        "id": "f71b3e30.4a0ed8",
        "type": "debug",
        "z": "23aae268.c697d6",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 1520,
        "wires": []
    },
    {
        "id": "4931948.b7b70ec",
        "type": "debug",
        "z": "23aae268.c697d6",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 900,
        "wires": []
    },
    {
        "id": "fbf02245.b904e",
        "type": "function",
        "z": "23aae268.c697d6",
        "name": "",
        "func": "msg.customerID = 1\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 900,
        "wires": [
            [
                "539bf2d.dca938c"
            ]
        ]
    },
    {
        "id": "d0f0deba.b7e0b",
        "type": "switch",
        "z": "23aae268.c697d6",
        "name": "Edited ?",
        "property": "callback",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "cellEdited",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "cellClick",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 660,
        "y": 1460,
        "wires": [
            [
                "d976571a.1e0458"
            ],
            []
        ]
    },
    {
        "id": "fdf9a103.1fef5",
        "type": "switch",
        "z": "23aae268.c697d6",
        "name": "NEW ?",
        "property": "payload.customerID",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "gt",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 920,
        "y": 1460,
        "wires": [
            [
                "c072c50.4fbde38",
                "85034d36.4cdf4"
            ],
            [
                "bb1dd84c.9a597",
                "85034d36.4cdf4"
            ]
        ]
    },
    {
        "id": "e59834ab.1041d",
        "type": "postgrestor",
        "z": "23aae268.c697d6",
        "name": "customer_config@localhost",
        "query": "--\t\"customerID\" serial NOT NULL,\n--\t\"cust_geom\" geography (POLYGON),\n--\t\"timezone\" varchar(50),\n--\t\"description\" varchar(50),\n--\t\"custom_byte\" character,\n--\t\"webpage\" varchar(50),\n--\t\"name\" varchar(50),\n--\t\"street\" varchar(50),\n--\t\"number\" varchar(50),\n--\t\"ZIP\" varchar(50),\n--\t\"town\" varchar(50),\n--\t\"country\" varchar(50),\n--\t\"active\" boolean,\n--\t\"new_date\" timestamptz,\n--\t\"active_date\" timestamptz,\n--\t\"deactive_date\" timestamptz,\n--\t\"logo\" bytea,\n--\t\"latitude\" numeric,\n--\t\"longitude\" numeric,\n\n--UPDATE customer_config_table\n--SET webpage = '{{msg.payload.webpage}}'\n--WHERE \n--    (\n--    \"customerID\" = {{msg.payload.customerID}}\n--    );\n\nUPDATE customer_config_table\nSET \n    \"timezone\" = '{{msg.timezone}}',\n    \"description\" = '{{msg.description}}',\n    \"custom_byte\" = '{{msg.custom_byte}}',\n    \"webpage\" = '{{msg.webpage}}',\n    \"name\" = '{{msg.name}}',\n    \"street\" = '{{msg.street}}',\n    \"number\" = '{{msg.number}}',\n    \"zip\" = '{{msg.zip}}',\n    \"town\" = '{{msg.town}}',\n    \"country\" = '{{msg.country}}',\n    \"active\" = '{{msg.payload.active}}',\n--    \"new_date\" = {{msg.new_date}},\n    \"active_date\" = NOW(),\n    \"deactive_date\" = NOW(),\n    \"latitude\" = {{msg.latitude}},\n    \"longitude\" = {{msg.longitude}}\nWHERE \n    (\n    \"customerID\" = {{msg.customerID}}\n    );\n\n-- dates are filled in when changed in the topic\n-- cust_geom is calculated from lats/lomgs of polygon\n\n--UPDATE mytable \n--SET field1 = '2015-12-31'::timestamp + \n--             EXTRACT(HOUR FROM field1) * INTERVAL '1 HOUR' +\n--             EXTRACT(MINUTE FROM field1) * INTERVAL '1 MINUTE' +\n--             EXTRACT(SECOND FROM field1) * INTERVAL '1 SECOND' \n--WHERE ...\n",
        "postgresDB": "47fd9ead.7e0dd8",
        "output": true,
        "outputs": 1,
        "x": 1340,
        "y": 1680,
        "wires": [
            [
                "aa4dbd84.1862c8",
                "8473f00.8ecd91"
            ]
        ]
    },
    {
        "id": "1afd08ed.183f5f",
        "type": "switch",
        "z": "23aae268.c697d6",
        "name": "Cellclick ?",
        "property": "callback",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "cellClick",
                "vt": "str"
            },
            {
                "t": "neq",
                "v": "cellClick",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 980,
        "y": 1240,
        "wires": [
            [
                "a6130b8b.ab8f3"
            ],
            []
        ]
    },
    {
        "id": "66b8dc4.123ba24",
        "type": "comment",
        "z": "23aae268.c697d6",
        "name": "Update fields in edit table",
        "info": "",
        "x": 1330,
        "y": 1640,
        "wires": []
    },
    {
        "id": "37e2911.80049ee",
        "type": "comment",
        "z": "23aae268.c697d6",
        "name": "load edit table when customer clicked",
        "info": "",
        "x": 1590,
        "y": 1200,
        "wires": []
    },
    {
        "id": "ed80feb.ed6d28",
        "type": "ui_etable",
        "z": "9ed7d418.301618",
        "payload": "[{\"title\":\"PushMe\",\"field\":\"PushMe\",\"width\":\"10%\",\"editor\":false},{\"title\":\"My Field A\",\"field\":\"a\",\"width\":\"80%\",\"editor\":true},{\"title\":\"My Field A - Type\",\"field\":\"b\",\"editor\":\"select\",\"editorParams\":{\"values\":[\"NEW\",\"UPDATED\",\"CANCELED\"]}}]",
        "payloadType": "json",
        "options": "{\"movableColumns\":true,\"layout\":\"fitColumns\",\"pagination\":\"local\",\"height\":\"700px\"}",
        "group": "9eb70b76.24bc",
        "name": "",
        "order": 2,
        "width": "20",
        "height": "7",
        "columns": [],
        "outputs": 1,
        "cts": false,
        "x": 690,
        "y": 180,
        "wires": [
            [
                "da048634.05da98",
                "3c4bc06.efd61c"
            ]
        ]
    },
    {
        "id": "cfc7bdf0.a5161",
        "type": "inject",
        "z": "9ed7d418.301618",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"a\":\"wombat\",\"b\":\"NEW\"}",
        "payloadType": "json",
        "x": 390,
        "y": 260,
        "wires": [
            [
                "4bd7dc7.5188624",
                "25d39d1b.6c5f62"
            ]
        ]
    },
    {
        "id": "da048634.05da98",
        "type": "debug",
        "z": "9ed7d418.301618",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 890,
        "y": 120,
        "wires": []
    },
    {
        "id": "4bd7dc7.5188624",
        "type": "debug",
        "z": "9ed7d418.301618",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 570,
        "y": 340,
        "wires": []
    },
    {
        "id": "25d39d1b.6c5f62",
        "type": "function",
        "z": "9ed7d418.301618",
        "name": "",
        "func": "var a1 = '12345';\nvar a2 = 'ABCDE';\n\nmsg.payload = [\n{ \"PushMe\":\"a1\",  \"a\" : a1,    \"b\" : 'NEW'    },\n{ \"PushMe\":\"a2\",  \"a\" : a2,    \"b\" : 'UPDATE'    }];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 530,
        "y": 200,
        "wires": [
            [
                "ed80feb.ed6d28"
            ]
        ]
    },
    {
        "id": "3c4bc06.efd61c",
        "type": "ui_text",
        "z": "9ed7d418.301618",
        "group": "9eb70b76.24bc",
        "order": 2,
        "width": "8",
        "height": "3",
        "name": "",
        "label": "text",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1020,
        "y": 220,
        "wires": []
    },
    {
        "id": "fa2b1d2d.ea7898",
        "type": "status",
        "z": "23aae268.c697d6",
        "name": "pid ngrok",
        "scope": [
            "86b8cee1.18ef8"
        ],
        "x": 1480,
        "y": 140,
        "wires": [
            [
                "e88d49d5.b44488"
            ]
        ]
    },
    {
        "id": "403462da.bcc484",
        "type": "debug",
        "z": "23aae268.c697d6",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1850,
        "y": 200,
        "wires": []
    },
    {
        "id": "bda82b52.2a2cc8",
        "type": "catch",
        "z": "23aae268.c697d6",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 80,
        "y": 40,
        "wires": [
            [
                "4dfb7e75.be88e8"
            ]
        ]
    },
    {
        "id": "4dfb7e75.be88e8",
        "type": "debug",
        "z": "23aae268.c697d6",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 230,
        "y": 40,
        "wires": []
    },
    {
        "id": "abad2f99.75e8f",
        "type": "change",
        "z": "23aae268.c697d6",
        "name": "kill pid",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "'kill -15 '&$flowContext('pid')",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1470,
        "y": 200,
        "wires": [
            [
                "6dc0bc71.708564",
                "7f77b620.4bab28"
            ]
        ]
    },
    {
        "id": "6dc0bc71.708564",
        "type": "exec",
        "z": "23aae268.c697d6",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 1610,
        "y": 200,
        "wires": [
            [
                "403462da.bcc484"
            ],
            [
                "403462da.bcc484"
            ],
            [
                "403462da.bcc484"
            ]
        ]
    },
    {
        "id": "e88d49d5.b44488",
        "type": "change",
        "z": "23aae268.c697d6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "pid",
                "pt": "flow",
                "to": "$number($split(status.text, ':')[1])",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1690,
        "y": 140,
        "wires": [
            [
                "cd6999ce.d0fa68"
            ]
        ]
    },
    {
        "id": "cd6999ce.d0fa68",
        "type": "debug",
        "z": "23aae268.c697d6",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1850,
        "y": 140,
        "wires": []
    },
    {
        "id": "2da9e467.e155c4",
        "type": "status",
        "z": "23aae268.c697d6",
        "name": "pid isenspro ngrok",
        "scope": [
            "26317863.e57f6"
        ],
        "x": 1510,
        "y": 300,
        "wires": [
            [
                "b896ffbd.572f68"
            ]
        ]
    },
    {
        "id": "c97aa082.06dc78",
        "type": "debug",
        "z": "23aae268.c697d6",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1850,
        "y": 380,
        "wires": []
    },
    {
        "id": "d7204e7e.924718",
        "type": "change",
        "z": "23aae268.c697d6",
        "name": "kill pid2",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "'kill -15 '&$flowContext('pid2')",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1480,
        "y": 380,
        "wires": [
            [
                "4e1b9e4d.3c9788",
                "78b0f5ef.4aff4c"
            ]
        ]
    },
    {
        "id": "4e1b9e4d.3c9788",
        "type": "exec",
        "z": "23aae268.c697d6",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 1630,
        "y": 380,
        "wires": [
            [
                "c97aa082.06dc78"
            ],
            [
                "c97aa082.06dc78"
            ],
            [
                "c97aa082.06dc78"
            ]
        ]
    },
    {
        "id": "b896ffbd.572f68",
        "type": "change",
        "z": "23aae268.c697d6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "pid2",
                "pt": "flow",
                "to": "$number($split(status.text, ':')[1])",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1690,
        "y": 300,
        "wires": [
            [
                "b41b704e.58dc28"
            ]
        ]
    },
    {
        "id": "b41b704e.58dc28",
        "type": "debug",
        "z": "23aae268.c697d6",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1850,
        "y": 300,
        "wires": []
    },
    {
        "id": "b08833a7.8918f",
        "type": "inject",
        "z": "23aae268.c697d6",
        "name": "kill",
        "props": [
            {
                "p": "payload",
                "v": "",
                "vt": "date"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "string"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1350,
        "y": 420,
        "wires": [
            [
                "d7204e7e.924718"
            ]
        ]
    },
    {
        "id": "104c42d2.b3768d",
        "type": "inject",
        "z": "23aae268.c697d6",
        "name": "kill",
        "props": [
            {
                "p": "payload",
                "v": "",
                "vt": "date"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "string"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1350,
        "y": 240,
        "wires": [
            [
                "abad2f99.75e8f"
            ]
        ]
    },
    {
        "id": "2abb28bc.38953",
        "type": "debug",
        "z": "23aae268.c697d6",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1810,
        "y": 1200,
        "wires": []
    },
    {
        "id": "68c0f4c7.5967b4",
        "type": "inject",
        "z": "23aae268.c697d6",
        "name": "isenspro access request",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "isenspro access request",
        "payload": "",
        "payloadType": "date",
        "x": 1090,
        "y": 420,
        "wires": [
            [
                "26317863.e57f6"
            ]
        ]
    },
    {
        "id": "85034d36.4cdf4",
        "type": "debug",
        "z": "23aae268.c697d6",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1130,
        "y": 1520,
        "wires": []
    },
    {
        "id": "bb1dd84c.9a597",
        "type": "switch",
        "z": "23aae268.c697d6",
        "name": "activated ?",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "active",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 850,
        "y": 1580,
        "wires": [
            [
                "fe91de6a.adf27"
            ],
            [
                "e59834ab.1041d"
            ]
        ]
    },
    {
        "id": "a5c17d69.cd8f9",
        "type": "postgrestor",
        "z": "23aae268.c697d6",
        "name": "customer_config@localhost",
        "query": "--\t\"customerID\" serial NOT NULL,\n--\t\"cust_geom\" geography (POLYGON),\n--\t\"timezone\" varchar(50),\n--\t\"description\" varchar(50),\n--\t\"custom_byte\" character,\n--\t\"webpage\" varchar(50),\n--\t\"name\" varchar(50),\n--\t\"street\" varchar(50),\n--\t\"number\" varchar(50),\n--\t\"ZIP\" varchar(50),\n--\t\"town\" varchar(50),\n--\t\"country\" varchar(50),\n--\t\"active\" boolean,\n--\t\"new_date\" timestamptz,\n--\t\"active_date\" timestamptz,\n--\t\"deactive_date\" timestamptz,\n--\t\"logo\" bytea,\n--\t\"latitude\" numeric,\n--\t\"longitude\" numeric,\n\nUPDATE customer_config_table\nSET \n    \"active\" = 'true',\n    \"active_date\" = Now(),\n    \"deactive_date\" = '-infinity'\nWHERE \n    (\n    \"customerID\" = {{msg.customerID}}\n    );\n",
        "postgresDB": "47fd9ead.7e0dd8",
        "output": true,
        "outputs": 1,
        "x": 1340,
        "y": 1560,
        "wires": [
            [
                "aa4dbd84.1862c8",
                "8473f00.8ecd91"
            ]
        ]
    },
    {
        "id": "bf4ef89.231bc88",
        "type": "postgrestor",
        "z": "23aae268.c697d6",
        "name": "customer_config@localhost",
        "query": "--\t\"customerID\" serial NOT NULL,\n--\t\"cust_geom\" geography (POLYGON),\n--\t\"timezone\" varchar(50),\n--\t\"description\" varchar(50),\n--\t\"custom_byte\" character,\n--\t\"webpage\" varchar(50),\n--\t\"name\" varchar(50),\n--\t\"street\" varchar(50),\n--\t\"number\" varchar(50),\n--\t\"ZIP\" varchar(50),\n--\t\"town\" varchar(50),\n--\t\"country\" varchar(50),\n--\t\"active\" boolean,\n--\t\"new_date\" timestamptz,\n--\t\"active_date\" timestamptz,\n--\t\"deactive_date\" timestamptz,\n--\t\"logo\" bytea,\n--\t\"latitude\" numeric,\n--\t\"longitude\" numeric,\n\n--UPDATE customer_config_table\n--SET webpage = '{{msg.payload.webpage}}'\n--WHERE \n--    (\n--    \"customerID\" = {{msg.payload.customerID}}\n--    );\n\nUPDATE customer_config_table\nSET \n    \"active\" = 'false',\n    \"deactive_date\" = Now(),\n    \"active_date\" = '-infinity'\nWHERE \n    (\n    \"customerID\" = {{msg.customerID}}\n    );\n",
        "postgresDB": "47fd9ead.7e0dd8",
        "output": true,
        "outputs": 1,
        "x": 1340,
        "y": 1600,
        "wires": [
            [
                "aa4dbd84.1862c8",
                "8473f00.8ecd91"
            ]
        ]
    },
    {
        "id": "aa4dbd84.1862c8",
        "type": "debug",
        "z": "23aae268.c697d6",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1630,
        "y": 1600,
        "wires": []
    },
    {
        "id": "a6130b8b.ab8f3",
        "type": "function",
        "z": "23aae268.c697d6",
        "name": "cust selection",
        "func": "msg.customerID = msg.payload.customerID;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 1240,
        "wires": [
            [
                "8473f00.8ecd91"
            ]
        ]
    },
    {
        "id": "d2786a8e.2e642",
        "type": "debug",
        "z": "23aae268.c697d6",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 230,
        "y": 1540,
        "wires": []
    },
    {
        "id": "95baceec.984aa8",
        "type": "comment",
        "z": "23aae268.c697d6",
        "name": "Reload cust selection table",
        "info": "",
        "x": 1450,
        "y": 1420,
        "wires": []
    },
    {
        "id": "907459cf.17786",
        "type": "comment",
        "z": "23aae268.c697d6",
        "name": "Update (de)activate dates",
        "info": "",
        "x": 1330,
        "y": 1520,
        "wires": []
    },
    {
        "id": "d976571a.1e0458",
        "type": "function",
        "z": "23aae268.c697d6",
        "name": "conv",
        "func": "//msg.active = (msg.payload.active === \"true\")  ?  true  :  false;\nmsg.customerID = msg.payload.customerID;\n\nmsg.active_date = new Date(); \n//    else \nmsg.deactive_date = new Date();\n\nmsg.timezone = msg.payload.timezone;\nmsg.description = msg.payload.description;\nmsg.custom_byte = msg.payload.custom_byte;\nmsg.webpage = msg.payload.webpage;\nmsg.name = msg.payload.name;\nmsg.street = msg.payload.street;\nmsg.number = msg.payload.number;\nmsg.zip = msg.payload.zip;\nmsg.town = msg.payload.town;\nmsg.country = msg.payload.country;\nmsg.active = msg.payload.active;\nmsg.latitude = parseFloat(msg.payload.latitude);\nmsg.longitude = parseFloat(msg.payload.longitude);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 1460,
        "wires": [
            [
                "fdf9a103.1fef5"
            ]
        ]
    },
    {
        "id": "fe91de6a.adf27",
        "type": "switch",
        "z": "23aae268.c697d6",
        "name": "new activation date ?",
        "property": "payload.active",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "true",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "false",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1080,
        "y": 1580,
        "wires": [
            [
                "a5c17d69.cd8f9"
            ],
            [
                "bf4ef89.231bc88"
            ]
        ]
    },
    {
        "id": "beb55639.76be",
        "type": "function",
        "z": "23aae268.c697d6",
        "name": "last row",
        "func": "msg.customerID = msg.payload.rowCount;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 1380,
        "wires": [
            [
                "8473f00.8ecd91"
            ]
        ]
    },
    {
        "id": "3c5368c.e6d2098",
        "type": "postgrestor",
        "z": "23aae268.c697d6",
        "name": "customer_config@localhost",
        "query": "--\t\"customerID\" serial NOT NULL,\n--\t\"cust_geom\" geography (POLYGON),\n--\t\"timezone\" varchar(50),\n--\t\"description\" varchar(50),\n--\t\"custom_byte\" character,\n--\t\"webpage\" varchar(50),\n--\t\"name\" varchar(50),\n--\t\"street\" varchar(50),\n--\t\"number\" varchar(50),\n--\t\"ZIP\" varchar(50),\n--\t\"town\" varchar(50),\n--\t\"country\" varchar(50),\n--\t\"active\" boolean,\n--\t\"new_date\" timestamptz,\n--\t\"active_date\" timestamptz,\n--\t\"deactive_date\" timestamptz,\n--\t\"logo\" bytea,\n--\t\"latitude\" numeric,\n--\t\"longitude\" numeric,\n\n-- to get last row inserted\nSELECT * \nFROM customer_config_table\nORDER BY \"customerID\" ASC ;\n\n-- dates are filled in when changed in the topic\n-- cust_geom is calculated from lats/lomgs of polygon\n\n",
        "postgresDB": "47fd9ead.7e0dd8",
        "output": true,
        "outputs": 1,
        "x": 1140,
        "y": 1380,
        "wires": [
            [
                "beb55639.76be"
            ]
        ]
    },
    {
        "id": "9ceb2bbb.7655c8",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "send new value",
        "func": "var outputMsgs = [];\nvar i = 0;\n\n//click till param to be changed\nfor(i = 0; i < msg.return_start; i++)\n{ \n   outputMsgs.push({payload:'\\r'});\n}\n\n// delete existing value\nfor(i = 0; i < msg.backspaces; i++)\n{ \n   outputMsgs.push({payload:'\\b'});\n}\n\n// insert new value\n\nvar newvalue = msg.newvalue;\n\n//padding before number\nfor(var j = 0; j < (msg.backspaces-newvalue.length); j++)\n{ \n    outputMsgs.push({payload:'0'});\n}\n\n// sending newvalue\nfor(i = 0; i < newvalue.length; i++)\n{ \n    outputMsgs.push({payload:newvalue[i]});\n}\n\n// click through\nfor(i = 0; i < msg.return_end; i++)\n{ \n   outputMsgs.push({payload:'\\r'});\n}\n\nreturn [ outputMsgs ];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1700,
        "y": 2280,
        "wires": [
            [
                "25475b09.d7d524",
                "a8bb996d.ba216"
            ]
        ]
    },
    {
        "id": "25475b09.d7d524",
        "type": "debug",
        "z": "3fb5a67.37c495a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1890,
        "y": 2200,
        "wires": []
    },
    {
        "id": "63f9d66e.7b49b",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "M Period",
        "func": "// set new flow variable\n//flow.set('mperiodM1',parseInt(msg.period));\n \nmsg.backspaces = 5;\nmsg.payload = '';\nmsg.enabled = true;\n// background is not a topic of this widget\n//msg.background = 'green';\n    \nvar tempstr = String(msg.mperiod);\n\n//padding\nfor(var j = 0; j < (msg.backspaces-tempstr.length); j++)\n{ \n    msg.payload += '0';\n}\n\n\nfor(var i = 0; i < tempstr.length; i++)\n{ \n    msg.payload += tempstr[i];\n}\n\nmsg.payload = msg.payload.toString();\nmsg.topic = 2;\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 1920,
        "wires": [
            [
                "8ed59f9c.f457e"
            ]
        ]
    },
    {
        "id": "e31e4144.4eb278",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "M Window",
        "func": "// set new flow variable\n//flow.set('mwindowM1',parseInt(msg.mwindow));\n\nmsg.backspaces = 5;\nmsg.payload = '';\nmsg.enabled = true;\n// background is not a topic of this widget\n//msg.background = 'green';\n\nvar mwindow = String(msg.mwindow);\n\n//padding before number\nfor(var j = 0; j < (msg.backspaces-mwindow.length); j++)\n{ \n    msg.payload += '0';\n}\n\n\nfor(var i = 0; i < mwindow.length; i++)\n{ \n    msg.payload += mwindow[i];\n}\n\nmsg.payload = msg.payload.toString();\nmsg.topic = 3;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 2000,
        "wires": [
            [
                "3fb89d1a.6592c2"
            ]
        ]
    },
    {
        "id": "d59e10ae.bcf648",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "VHigh",
        "func": "// set new flow variable\nflow.set('vhighM1',parseInt(msg.vhigh));\n\nmsg.backspaces = 4;\nmsg.payload = '';\nmsg.enabled = true;\n// background is not a topic of this widget\n//msg.background = 'green';\n\nvar vhigh = String(msg.vhigh);\n\n//padding before number\nfor(var j = 0; j < (msg.backspaces-vhigh.length); j++)\n{ \n    msg.payload += '0';\n}\n\n\nfor(var i = 0; i < vhigh.length; i++)\n{ \n    msg.payload += vhigh[i];\n}\n\nmsg.payload = msg.payload.toString();\nmsg.topic = 4;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 2080,
        "wires": [
            [
                "8f9645ae.4fb53"
            ]
        ]
    },
    {
        "id": "f4629d6f.602868",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "VLow",
        "func": "// set new flow variable\nflow.set('vlowM1',parseInt(msg.vlow));\n\nmsg.backspaces = 4;\nmsg.payload = '';\nmsg.enabled = true;\n// background is not a topic of this widget\n//msg.background = 'green';\n\nvar vlow = String(msg.vlow);\n\n//padding before number\nfor(var j = 0; j < (msg.backspaces-vlow.length); j++)\n{ \n    msg.payload += '0';\n}\n\n\nfor(var i = 0; i < vlow.length; i++)\n{ \n    msg.payload += vlow[i];\n}\n\nmsg.payload = msg.payload.toString();\nmsg.topic = 5;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 2160,
        "wires": [
            [
                "f0a9a1ec.1a7bb8"
            ]
        ]
    },
    {
        "id": "6be38186.0c759",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "RCharge",
        "func": "// set new flow variable\n//flow.set('rchargeM1',parseInt(msg.rcharge));\n\nmsg.backspaces = 6;\nmsg.payload = '';\nmsg.enabled = true;\n// background is not a topic of this widget\n//msg.background = 'green';\n\nvar rcharge = String(msg.rcharge);\n\n//padding before number\nfor(var j = 0; j < (msg.backspaces-rcharge.length); j++)\n{ \n    msg.payload += '0';\n}\n\nfor(var i = 0; i < rcharge.length; i++)\n{ \n    msg.payload += rcharge[i];\n}\n\nmsg.payload = msg.payload.toString();\nmsg.topic = 6;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 2240,
        "wires": [
            [
                "98090ac4.a88a18"
            ]
        ]
    },
    {
        "id": "d2feafb2.f66178",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "Sensor ID",
        "func": "// set new flow variable\nflow.set('sensorIDM1',parseInt(msg.sensorid));\n\nmsg.backspaces = 3;\nmsg.payload = '';\nmsg.enabled = true;\n// background is not a topic of this widget\n//msg.background = 'green';\n\nvar sensorid = String(msg.sensorid);\n\n//padding before number\nfor(var j = 0; j < (msg.backspaces-sensorid.length); j++)\n{ \n    msg.payload += '0';\n}\n\n\nfor(var i = 0; i < sensorid.length; i++)\n{ \n    msg.payload += sensorid[i];\n}\n\nmsg.payload = msg.payload.toString();\nmsg.payload.masterID = msg.payload;\nmsg.topic = 1;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 1840,
        "wires": [
            [
                "2bc94027.6a9238"
            ]
        ]
    },
    {
        "id": "677afc2f.61fa3c",
        "type": "debug",
        "z": "23aae268.c697d6",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 1320,
        "wires": []
    },
    {
        "id": "a8ba498b.33a468",
        "type": "ui_iframe",
        "z": "9ed7d418.301618",
        "group": "6467854a.60785c",
        "name": "",
        "order": 1,
        "width": "16",
        "height": "9",
        "url": "http://nodered.org",
        "origin": "*",
        "scale": "100",
        "x": 850,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "ade9c361.85d6c",
        "type": "ui_slider",
        "z": "9ed7d418.301618",
        "name": "",
        "label": "Scale",
        "tooltip": "",
        "group": "6467854a.60785c",
        "order": 2,
        "width": 6,
        "height": 1,
        "passthru": true,
        "outs": "all",
        "topic": "topic",
        "topicType": "msg",
        "min": "25",
        "max": "125",
        "step": 1,
        "x": 510,
        "y": 540,
        "wires": [
            [
                "e3756b0b.2153a8",
                "6197d43f.97de3c"
            ]
        ]
    },
    {
        "id": "6197d43f.97de3c",
        "type": "change",
        "z": "9ed7d418.301618",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "scale",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 500,
        "wires": [
            [
                "a8ba498b.33a468"
            ]
        ]
    },
    {
        "id": "3d635006.bd029",
        "type": "inject",
        "z": "9ed7d418.301618",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "56",
        "payloadType": "num",
        "x": 370,
        "y": 540,
        "wires": [
            [
                "ade9c361.85d6c"
            ]
        ]
    },
    {
        "id": "e3756b0b.2153a8",
        "type": "ui_text",
        "z": "9ed7d418.301618",
        "group": "6467854a.60785c",
        "order": 3,
        "width": "1",
        "height": 1,
        "name": "",
        "label": "",
        "format": "{{msg.payload}}%",
        "layout": "row-spread",
        "x": 650,
        "y": 540,
        "wires": []
    },
    {
        "id": "c20c12a5.5b655",
        "type": "comment",
        "z": "9ed7d418.301618",
        "name": "Scale embedded web page by slider value",
        "info": "",
        "x": 460,
        "y": 460,
        "wires": []
    },
    {
        "id": "f7212375.975f4",
        "type": "ui_text",
        "z": "9ed7d418.301618",
        "group": "ac145052.878c48",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "text",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 550,
        "y": 720,
        "wires": []
    },
    {
        "id": "ee794605.be752",
        "type": "inject",
        "z": "9ed7d418.301618",
        "name": "",
        "props": [
            {
                "p": "payload",
                "v": "dynamic text 1",
                "vt": "str"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "string"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "dynamic text 1",
        "payloadType": "str",
        "x": 330,
        "y": 720,
        "wires": [
            [
                "f7212375.975f4",
                "638d20a2.025ac"
            ]
        ]
    },
    {
        "id": "1417a8d3.25c157",
        "type": "inject",
        "z": "9ed7d418.301618",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "dynamic text 2",
        "payloadType": "str",
        "x": 330,
        "y": 770,
        "wires": [
            [
                "f7212375.975f4",
                "638d20a2.025ac"
            ]
        ]
    },
    {
        "id": "638d20a2.025ac",
        "type": "debug",
        "z": "9ed7d418.301618",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 570,
        "y": 770,
        "wires": []
    },
    {
        "id": "cc26e2d4.ffd35",
        "type": "function",
        "z": "9ed7d418.301618",
        "name": "my function that does stuff",
        "func": "msg.payload +=  \" - payload modified in my function\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 530,
        "y": 1020,
        "wires": [
            [
                "a0241251.a9cc4"
            ]
        ]
    },
    {
        "id": "2ffeee02.29d762",
        "type": "change",
        "z": "9ed7d418.301618",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "textInput",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 510,
        "y": 960,
        "wires": [
            [
                "fe2d6e02.ad949"
            ]
        ]
    },
    {
        "id": "7ba1f4df.b12a7c",
        "type": "debug",
        "z": "9ed7d418.301618",
        "name": "Text entry debug node",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 520,
        "y": 920,
        "wires": []
    },
    {
        "id": "b42b2908.665408",
        "type": "debug",
        "z": "9ed7d418.301618",
        "name": "Button click debug node",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 530,
        "y": 1080,
        "wires": []
    },
    {
        "id": "fe2d6e02.ad949",
        "type": "switch",
        "z": "9ed7d418.301618",
        "name": "is text empty?",
        "property": "textInput",
        "propertyType": "flow",
        "rules": [
            {
                "t": "empty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 700,
        "y": 960,
        "wires": [
            [
                "db2479e4.104468"
            ],
            [
                "fa23a260.4e161"
            ]
        ]
    },
    {
        "id": "db2479e4.104468",
        "type": "change",
        "z": "9ed7d418.301618",
        "name": "enabled false",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 940,
        "wires": [
            [
                "eb06ed9d.7f23f"
            ]
        ]
    },
    {
        "id": "fa23a260.4e161",
        "type": "change",
        "z": "9ed7d418.301618",
        "name": "enabled true",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 980,
        "wires": [
            [
                "eb06ed9d.7f23f"
            ]
        ]
    },
    {
        "id": "eb06ed9d.7f23f",
        "type": "link out",
        "z": "9ed7d418.301618",
        "name": "",
        "links": [
            "58d47e08.81ffc"
        ],
        "x": 995,
        "y": 960,
        "wires": []
    },
    {
        "id": "58d47e08.81ffc",
        "type": "link in",
        "z": "9ed7d418.301618",
        "name": "",
        "links": [
            "eb06ed9d.7f23f"
        ],
        "x": 255,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "93b54b1c.311778",
        "type": "inject",
        "z": "9ed7d418.301618",
        "name": "Init with empty string",
        "props": [
            {
                "p": "payload",
                "v": "",
                "vt": "str"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "string"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 200,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "a0241251.a9cc4",
        "type": "debug",
        "z": "9ed7d418.301618",
        "name": "After function debug node",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 830,
        "y": 1080,
        "wires": []
    },
    {
        "id": "2bc94027.6a9238",
        "type": "ui_text",
        "z": "3fb5a67.37c495a",
        "group": "f726791c.9d1d88",
        "order": 3,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "{{msg.label}}",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "x": 970,
        "y": 1820,
        "wires": []
    },
    {
        "id": "f0051fb7.595838",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "validate input",
        "func": "var ID = flow.get('master1ID');\n\nvar label = global.get('sensorid_label');\nvar change = global.get('sensorid_change');\nvar tooltip = global.get('sensorid_tooltip');\nvar set = global.get('sensorid_set');\n\nmsg.label = label;\n//msg.change = change;\nmsg.tooltip = tooltip;\n//msg.set = set;\nmsg.set = null;\n\nif (msg.payload == '')\n{\n    msg.enabled = true;\n    msg.background = 'grey';\n    msg.payload = '';\n    msg.change = null;\n}\nelse\n{\n    if ((parseInt(msg.payload) <= 240)  && (parseInt(msg.payload) >= 0) && (ID != '')) \n    {\n        msg.enabled = true;\n        msg.background = 'green';\n        msg.change = change;\n    }\n    else \n    {\n        msg.background = 'green'\n        msg.enabled = false;\n        msg.change = null;\n    }\n    //master has always sensorID = 0\n    msg.payload = 0;\n    msg.topic = msg.payload;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 1880,
        "wires": [
            [
                "d047bb1d.85a868",
                "bfc4456.37f28b8"
            ]
        ]
    },
    {
        "id": "bfc4456.37f28b8",
        "type": "ui_button",
        "z": "3fb5a67.37c495a",
        "name": "",
        "group": "f726791c.9d1d88",
        "order": 4,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "{{ msg.set }}",
        "tooltip": "{{ msg.tooltip }}",
        "color": "",
        "bgcolor": "{{background}}",
        "icon": "",
        "payload": "confirm",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 1170,
        "y": 1880,
        "wires": [
            [
                "db364123.c495c8",
                "2e15fdd1.3cad52",
                "c3469df9.a1254",
                "d99cfcd6.e86338"
            ]
        ]
    },
    {
        "id": "32b898b.df952e8",
        "type": "ui_text_input",
        "z": "3fb5a67.37c495a",
        "name": "sensorID",
        "label": "{{change}}",
        "tooltip": "{{tooltip}}",
        "group": "f726791c.9d1d88",
        "order": 2,
        "width": 6,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": "100",
        "topic": "",
        "topicType": "str",
        "x": 600,
        "y": 1880,
        "wires": [
            [
                "f0051fb7.595838"
            ]
        ]
    },
    {
        "id": "319cf0e6.f709a",
        "type": "delay",
        "z": "9ed7d418.301618",
        "name": "",
        "pauseType": "delay",
        "timeout": "0.5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 496,
        "y": 1259,
        "wires": [
            [
                "6176046c.1b3b6c",
                "2bd239b8.7085a6"
            ]
        ]
    },
    {
        "id": "6176046c.1b3b6c",
        "type": "change",
        "z": "9ed7d418.301618",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "background",
                "pt": "msg",
                "to": "RED",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 1420,
        "wires": [
            []
        ]
    },
    {
        "id": "f59c0526.513b98",
        "type": "change",
        "z": "9ed7d418.301618",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "background",
                "pt": "msg",
                "to": "green",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 1340,
        "wires": [
            []
        ]
    },
    {
        "id": "2bd239b8.7085a6",
        "type": "delay",
        "z": "9ed7d418.301618",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 720,
        "y": 1260,
        "wires": [
            [
                "f59c0526.513b98"
            ]
        ]
    },
    {
        "id": "8ed59f9c.f457e",
        "type": "ui_text",
        "z": "3fb5a67.37c495a",
        "group": "f12df54.fdd1f08",
        "order": 5,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "{{msg.label}}",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "x": 990,
        "y": 1900,
        "wires": []
    },
    {
        "id": "4b2737d8.912c5",
        "type": "ui_button",
        "z": "3fb5a67.37c495a",
        "name": "",
        "group": "f12df54.fdd1f08",
        "order": 7,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "{{ msg.set }}",
        "tooltip": "{{msg.tooltip}}",
        "color": "",
        "bgcolor": "{{background}}",
        "icon": "",
        "payload": "confirm",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 1170,
        "y": 1960,
        "wires": [
            [
                "da398ace.674508",
                "2e15fdd1.3cad52",
                "1572bf7b.cbc7a9",
                "d99cfcd6.e86338"
            ]
        ]
    },
    {
        "id": "b7041100.cb555",
        "type": "ui_text_input",
        "z": "3fb5a67.37c495a",
        "name": "mperiod",
        "label": "{{change}}",
        "tooltip": "{{tooltip}}",
        "group": "f12df54.fdd1f08",
        "order": 3,
        "width": 6,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": "100",
        "topic": "",
        "topicType": "str",
        "x": 600,
        "y": 1960,
        "wires": [
            [
                "82411dc1.d95d5"
            ]
        ]
    },
    {
        "id": "82411dc1.d95d5",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "validate input",
        "func": "var ID = flow.get('master1ID');\n\nvar label = global.get('mperiod_label');\nvar change = global.get('mperiod_change');\nvar tooltip = global.get('mperiod_tooltip');\nvar set = global.get('mperiod_set');\n\nmsg.label = label;\n//msg.change = change;\nmsg.tooltip = tooltip;\nmsg.set = set;\n\n// when disabled tooltip becomes visible when hoovered over\n// when entry, input UI generates message to validation\n//msg.background = 'green';\n\nif (msg.payload == '')\n{\n    msg.enabled = true;\n    msg.background = 'grey';\n    msg.payload = '';\n    msg.change = null;\n}\nelse\n{\n    if ((parseInt(msg.payload) <= 16666666) && (parseInt(msg.payload) >= 5) && (ID != ''))\n    {\n        msg.enabled = true;\n        msg.background = 'green';\n        msg.change = change;\n    }\n    else \n    {\n        msg.background = 'green'\n        msg.enabled = false;\n        msg.change = null;\n    }\n    msg.payload = parseInt(msg.payload);\n    msg.topic = msg.payload;\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 1960,
        "wires": [
            [
                "2d6ae297.4e909e",
                "4b2737d8.912c5"
            ]
        ]
    },
    {
        "id": "3fb89d1a.6592c2",
        "type": "ui_text",
        "z": "3fb5a67.37c495a",
        "group": "f12df54.fdd1f08",
        "order": 6,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "{{msg.label}}",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "x": 990,
        "y": 1980,
        "wires": []
    },
    {
        "id": "fe6856ba.b57f88",
        "type": "ui_text_input",
        "z": "3fb5a67.37c495a",
        "name": "mwindow",
        "label": "{{change}}",
        "tooltip": "{{tooltip}}",
        "group": "f12df54.fdd1f08",
        "order": 4,
        "width": 6,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": "100",
        "topic": "",
        "topicType": "str",
        "x": 600,
        "y": 2040,
        "wires": [
            [
                "b9dca9c8.1ae148"
            ]
        ]
    },
    {
        "id": "b9dca9c8.1ae148",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "validate input",
        "func": "var ID = flow.get('master1ID');\n\nvar label = global.get('mwindow_label');\nvar change = global.get('mwindow_change');\nvar tooltip = global.get('mwindow_tooltip');\nvar set = global.get('mwindow_set');\n\nmsg.label = label;\n//msg.change = change;\nmsg.tooltip = tooltip;\nmsg.set = set;\n\n// when disabled tooltip becomes visible when hoovered over\n// when entry, input UI generates message to validation\n// msg.background = 'grey';\nif (msg.payload == '')\n{\n    msg.enabled = true;\n    msg.background = 'grey';\n    msg.payload = '';\n    msg.change = null;\n}\nelse\n{\n    if ((parseInt(msg.payload) <= 4000) && (parseInt(msg.payload) >=1) && (ID != ''))\n    {\n        msg.enabled = true;\n        msg.background = 'green';\n        msg.change = change;\n    }\n    else \n    {\n        msg.background = 'green'\n        msg.enabled = false;\n        msg.change = null;\n    }\n    msg.payload = parseInt(msg.payload);\n    msg.topic = msg.payload;\n}\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 2040,
        "wires": [
            [
                "8a00ca96.758d4",
                "ec731d3f.a6bb58"
            ]
        ]
    },
    {
        "id": "ec731d3f.a6bb58",
        "type": "ui_button",
        "z": "3fb5a67.37c495a",
        "name": "",
        "group": "f12df54.fdd1f08",
        "order": 8,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "{{ msg.set }}",
        "tooltip": "{{msg.tooltip}}",
        "color": "",
        "bgcolor": "{{background}}",
        "icon": "",
        "payload": "confirm",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 1170,
        "y": 2040,
        "wires": [
            [
                "177c08e2.41e08f",
                "2e15fdd1.3cad52",
                "2f9f3aef.557a16",
                "d99cfcd6.e86338"
            ]
        ]
    },
    {
        "id": "8f9645ae.4fb53",
        "type": "ui_text",
        "z": "3fb5a67.37c495a",
        "group": "92957720.d414",
        "order": 5,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "{{msg.label}}",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "x": 990,
        "y": 2060,
        "wires": []
    },
    {
        "id": "4cb58678.ca535",
        "type": "ui_text_input",
        "z": "3fb5a67.37c495a",
        "name": "vhigh",
        "label": "{{change}}",
        "tooltip": "{{tooltip}}",
        "group": "92957720.d414",
        "order": 3,
        "width": 6,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": "100",
        "topic": "vhigh",
        "topicType": "str",
        "x": 590,
        "y": 2120,
        "wires": [
            [
                "d961a652.79784"
            ]
        ]
    },
    {
        "id": "d961a652.79784",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "validate input",
        "func": "// get last config value of vlow\nvar vlow = flow.get('vlowM1') || null;\nif (vlow == null) vlow = msg.vlow;\n\n// newly entered vhigh\nvar vhigh = parseInt(msg.payload);\n\nvar ID = flow.get('master1ID');\nvar label = global.get('vhigh_label');\nvar change = global.get('vhigh_change');\nvar tooltip = global.get('vhigh_tooltip');\nvar set = global.get('vhigh_set');\n\n// when disabled tooltip becomes visible when hoovered over\n// when entry, input UI generates message to validation\nmsg.label = label;\n//msg.change = change;\nmsg.tooltip = tooltip;\nmsg.set = set;\n\n//msg.background = 'grey';\n\nif (msg.payload == '')\n{\n    msg.enabled = true;\n    msg.background = 'grey';\n    msg.payload = '';\n    msg.change = null;\n}\nelse\n{\n    msg.vlowvalue = vlow;\n    msg.vhighvalue = vhigh;\n    if ((vhigh <= 3170) && (vhigh > vlow) && (ID != ''))\n    {\n        msg.enabled = true;\n        msg.background = 'green';\n        msg.change = change;\n    }\n    else \n    {\n        msg.background = 'green'\n        msg.enabled = false;\n        msg.change = null;\n    }\n    msg.payload = vhigh;\n    msg.topic = msg.payload;\n}\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 2120,
        "wires": [
            [
                "e9a3e5b.82fc318",
                "c0d33a43.5970d8"
            ]
        ]
    },
    {
        "id": "c0d33a43.5970d8",
        "type": "ui_button",
        "z": "3fb5a67.37c495a",
        "name": "",
        "group": "92957720.d414",
        "order": 7,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "{{ msg.set }}",
        "tooltip": "{{msg.tooltip}}",
        "color": "",
        "bgcolor": "{{background}}",
        "icon": "",
        "payload": "confirm",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 1170,
        "y": 2120,
        "wires": [
            [
                "3c8baa35.b20efe",
                "2e15fdd1.3cad52",
                "c73a5a4a.7a7408",
                "d99cfcd6.e86338"
            ]
        ]
    },
    {
        "id": "f0a9a1ec.1a7bb8",
        "type": "ui_text",
        "z": "3fb5a67.37c495a",
        "group": "92957720.d414",
        "order": 6,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "{{msg.label}}",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "x": 990,
        "y": 2140,
        "wires": []
    },
    {
        "id": "6457015c.1b7008",
        "type": "ui_button",
        "z": "3fb5a67.37c495a",
        "name": "",
        "group": "92957720.d414",
        "order": 8,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "{{ msg.set }}",
        "tooltip": "{{msg.tooltip}}",
        "color": "",
        "bgcolor": "{{background}}",
        "icon": "",
        "payload": "confirm",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 1170,
        "y": 2200,
        "wires": [
            [
                "85ab3fc9.1e558",
                "2e15fdd1.3cad52",
                "154ccc55.1edcfc",
                "d99cfcd6.e86338"
            ]
        ]
    },
    {
        "id": "eaa6923c.08ab4",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "validate input",
        "func": "// get last config value of vhigh\nvar vhigh = flow.get('vhighM1') || null;\nif (vhigh == null) vhigh = msg.vhigh;\n\n// newly entered vhigh\nvar vlow = parseInt(msg.payload);\n\n\nvar ID = flow.get('master1ID');\nvar label = global.get('vlow_label');\nvar change = global.get('vlow_change');\nvar tooltip = global.get('vlow_tooltip');\nvar set = global.get('vlow_set');\n\n// when disabled tooltip becomes visible when hoovered over\n// when entry, input UI generates message to validation\nmsg.label = label;\n//msg.change = change;\nmsg.tooltip = tooltip;\nmsg.set = set;\n\n//msg.background = 'grey';\n\nif (msg.payload == '')\n{\n    msg.enabled = true;\n    msg.background = 'grey';\n    msg.payload = '';\n    msg.change = null;\n}\nelse\n{\n    msg.vlowvalue = vlow;\n    msg.vhighvalue = vhigh;\n    \n    if ((vlow < vhigh) && (vlow >= 10) && (ID != ''))\n    {\n       msg.enabled = true;\n        msg.background = 'green';\n        msg.change = change;\n    }\n    else \n    {\n        msg.background = 'green'\n        msg.enabled = false;\n        msg.change = null;\n    }\n    msg.payload = vlow;\n    msg.topic = msg.payload;\n}\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 2200,
        "wires": [
            [
                "56226fa6.5d421",
                "6457015c.1b7008"
            ]
        ]
    },
    {
        "id": "d460703d.86ffe8",
        "type": "ui_text_input",
        "z": "3fb5a67.37c495a",
        "name": "vlow",
        "label": "{{change}}",
        "tooltip": "{{tooltip}}",
        "group": "92957720.d414",
        "order": 4,
        "width": 6,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": "100",
        "topic": "vlow",
        "topicType": "str",
        "x": 590,
        "y": 2200,
        "wires": [
            [
                "eaa6923c.08ab4"
            ]
        ]
    },
    {
        "id": "98090ac4.a88a18",
        "type": "ui_text",
        "z": "3fb5a67.37c495a",
        "group": "f12df54.fdd1f08",
        "order": 11,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "{{msg.label}}",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "x": 990,
        "y": 2220,
        "wires": []
    },
    {
        "id": "b7b26616.4b24a8",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "validate input",
        "func": "var ID = flow.get('master1ID');\n\nvar label = global.get('rcharge_label');\nvar change = global.get('rcharge_change');\nvar tooltip = global.get('rcharge_tooltip');\nvar set = global.get('rcharge_set');\n\nmsg.label = label;\n//msg.change = change;\nmsg.tooltip = tooltip;\nmsg.set = set;\n\n// when disabled tooltip becomes visible when hoovered over\n// when entry, input UI generates message to validation\n//msg.background = 'grey';\nif (msg.payload == '')\n{\n    msg.enabled = true;\n    msg.background = 'grey';\n    msg.payload = '';\n    msg.change = null;\n}\nelse\n{\n    if ((parseInt(msg.payload) <= 730000) && (parseInt(msg.payload) >=1) && (ID != ''))\n    {\n        msg.enabled = true;\n        msg.background = 'green';\n        msg.change = change;\n    }\n    else \n    {\n        msg.background = 'green'\n        msg.enabled = false;\n        msg.change = null;\n    }\n    msg.payload = parseInt(msg.payload);\n    msg.topic = msg.payload;\n}\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 2280,
        "wires": [
            [
                "c88a0846.a67048",
                "d48d82a4.bee28"
            ]
        ]
    },
    {
        "id": "d48d82a4.bee28",
        "type": "ui_button",
        "z": "3fb5a67.37c495a",
        "name": "",
        "group": "f12df54.fdd1f08",
        "order": 12,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "{{ msg.set }}",
        "tooltip": "{{msg.tooltip}}",
        "color": "",
        "bgcolor": "{{background}}",
        "icon": "",
        "payload": "confirm",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 1170,
        "y": 2280,
        "wires": [
            [
                "9cae45f4.4b08d8",
                "2e15fdd1.3cad52",
                "f30d108e.bf3ac8",
                "d99cfcd6.e86338"
            ]
        ]
    },
    {
        "id": "a7188d1d.89f8a8",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "Noise",
        "func": "// set new flow variable\n//flow.set('noiseM1',msg.noise);\nmsg.background = 'grey';\n\nif (msg.payload == '')\n{\n    msg.enabled = false;\n    msg.payload = 0;\n    msg.label = null;\n}\nelse\n{\n    msg.enabled = true;\n    msg.payload = msg.noise;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 2480,
        "wires": [
            [
                "7216aed1.1c3c9"
            ]
        ]
    },
    {
        "id": "4b6aa6bc.9fae38",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "Sequence",
        "func": "// set new flow variable\n//flow.set('sequenceM1',msg.sequence);\n\nmsg.background = 'grey';\n\nif (msg.payload == '')\n{\n    msg.enabled = false;\n    msg.payload = '';\n    msg.label = null;\n}\nelse\n{\n    msg.payload = msg.sequence;\n    msg.enabled = true;\n    \n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 2600,
        "wires": [
            [
                "2a7f6ad5.0a9456"
            ]
        ]
    },
    {
        "id": "7216aed1.1c3c9",
        "type": "ui_numeric",
        "z": "3fb5a67.37c495a",
        "name": "",
        "label": "{{msg.label}}",
        "tooltip": "",
        "group": "f12df54.fdd1f08",
        "order": 13,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": false,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "0",
        "step": "0",
        "x": 1000,
        "y": 2480,
        "wires": [
            []
        ]
    },
    {
        "id": "2a7f6ad5.0a9456",
        "type": "ui_numeric",
        "z": "3fb5a67.37c495a",
        "name": "",
        "label": "{{msg.label}}",
        "tooltip": "",
        "group": "92957720.d414",
        "order": 13,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": false,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "0",
        "step": "0",
        "x": 1000,
        "y": 2600,
        "wires": [
            []
        ]
    },
    {
        "id": "39f77f8a.4d56d8",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "Cap",
        "func": "// set new flow variable\n//flow.set('measurementM1',msg.cap);\n\nmsg.background = 'grey';\n    \nif (msg.payload == '')\n{\n    msg.enabled = false;\n    msg.payload = '';\n    msg.label = null;\n}\nelse\n{\n    msg.payload = msg.cap;\n    msg.enabled = true;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 2700,
        "wires": [
            [
                "3fd4d0ab.6b95b"
            ]
        ]
    },
    {
        "id": "3fd4d0ab.6b95b",
        "type": "ui_numeric",
        "z": "3fb5a67.37c495a",
        "name": "",
        "label": "{{msg.label}}",
        "tooltip": "",
        "group": "f726791c.9d1d88",
        "order": 8,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": false,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "0",
        "step": "0",
        "x": 1000,
        "y": 2700,
        "wires": [
            []
        ]
    },
    {
        "id": "8fa3a30b.7e3858",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "Average",
        "func": "// set new flow variable\n//flow.set('avg_measurementM1',msg.avg);\n\nmsg.background = 'grey';\n    \nif (msg.payload == '')\n{\n    msg.enabled = false;\n    msg.payload = '';\n    msg.label = null;\n}\nelse\n{\n    msg.payload = msg.avg;\n    msg.enabled = true;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 2760,
        "wires": [
            [
                "232c8272.12dcd6"
            ]
        ]
    },
    {
        "id": "232c8272.12dcd6",
        "type": "ui_numeric",
        "z": "3fb5a67.37c495a",
        "name": "",
        "label": "{{msg.label}}",
        "tooltip": "",
        "group": "f726791c.9d1d88",
        "order": 9,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": false,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "0",
        "step": "0",
        "x": 1000,
        "y": 2760,
        "wires": [
            []
        ]
    },
    {
        "id": "fe217ba8.cb07a",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "Max Noise",
        "func": "var maxnoise;\nvar noise;\n\nmsg.background = 'grey';\n\n\nif (msg.payload == '')\n{\n    msg.enabled = false;\n    msg.payload = '';\n    msg.label = null;\n}\nelse\n{\n    // get new flow variable\n    maxnoise = flow.get('maxnoiseM1') || 0;\n    noise = msg.noise;\n    msg.enabled = true;\n\n    if (noise > maxnoise) \n    {\n        flow.set('maxnoiseM1', noise);\n        msg.payload = noise;\n    }\n    else\n    {\n        msg.payload = maxnoise;\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 2540,
        "wires": [
            [
                "54ca8a7.7724274"
            ]
        ]
    },
    {
        "id": "54ca8a7.7724274",
        "type": "ui_numeric",
        "z": "3fb5a67.37c495a",
        "name": "",
        "label": "{{msg.label}}",
        "tooltip": "",
        "group": "f12df54.fdd1f08",
        "order": 14,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": false,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "0",
        "step": "0",
        "x": 1000,
        "y": 2540,
        "wires": [
            []
        ]
    },
    {
        "id": "d047bb1d.85a868",
        "type": "change",
        "z": "3fb5a67.37c495a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "sensorIDM1",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 960,
        "y": 1860,
        "wires": [
            []
        ]
    },
    {
        "id": "2d6ae297.4e909e",
        "type": "change",
        "z": "3fb5a67.37c495a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "mperiodM1",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 950,
        "y": 1940,
        "wires": [
            []
        ]
    },
    {
        "id": "8a00ca96.758d4",
        "type": "change",
        "z": "3fb5a67.37c495a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "mwindowM1",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 960,
        "y": 2020,
        "wires": [
            []
        ]
    },
    {
        "id": "e9a3e5b.82fc318",
        "type": "change",
        "z": "3fb5a67.37c495a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "vhighM1",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 940,
        "y": 2100,
        "wires": [
            []
        ]
    },
    {
        "id": "56226fa6.5d421",
        "type": "change",
        "z": "3fb5a67.37c495a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "vlowM1",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 940,
        "y": 2180,
        "wires": [
            []
        ]
    },
    {
        "id": "c88a0846.a67048",
        "type": "change",
        "z": "3fb5a67.37c495a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "rchargeM1",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 950,
        "y": 2260,
        "wires": [
            []
        ]
    },
    {
        "id": "6792f289.62d7d4",
        "type": "ui_text_input",
        "z": "3fb5a67.37c495a",
        "name": "rcharge",
        "label": "{{change}}",
        "tooltip": "{{tooltip}}",
        "group": "f12df54.fdd1f08",
        "order": 9,
        "width": 6,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": "100",
        "topic": "",
        "topicType": "str",
        "x": 600,
        "y": 2280,
        "wires": [
            [
                "b7b26616.4b24a8"
            ]
        ]
    },
    {
        "id": "d59a26f1.30f738",
        "type": "inject",
        "z": "9ed7d418.301618",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "default text",
        "payloadType": "str",
        "x": 310,
        "y": 1640,
        "wires": [
            []
        ]
    },
    {
        "id": "ecf16095.5a10b",
        "type": "debug",
        "z": "9ed7d418.301618",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 800,
        "y": 1640,
        "wires": []
    },
    {
        "id": "8760e8be.395cd",
        "type": "inject",
        "z": "9ed7d418.301618",
        "name": "",
        "props": [
            {
                "p": "payload",
                "v": "trigger",
                "vt": "str"
            },
            {
                "p": "topic",
                "v": "control",
                "vt": "string"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "control",
        "payload": "trigger",
        "payloadType": "str",
        "x": 320,
        "y": 1680,
        "wires": [
            []
        ]
    },
    {
        "id": "40b2d424.4b1ecc",
        "type": "inject",
        "z": "9ed7d418.301618",
        "name": "",
        "props": [
            {
                "p": "payload",
                "v": "hello world",
                "vt": "str"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "string"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "hello world",
        "payloadType": "str",
        "x": 310,
        "y": 1600,
        "wires": [
            []
        ]
    },
    {
        "id": "2e15fdd1.3cad52",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "disable",
        "func": "var period = global.get('period');\n\n\nmsg.enabled = true;\nmsg.background = 'grey';\nmsg.topic = 'Waiting for at least ' + 2*period + ' secs';\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 1820,
        "wires": [
            [
                "bfc4456.37f28b8",
                "ec731d3f.a6bb58",
                "c0d33a43.5970d8",
                "6457015c.1b7008",
                "d48d82a4.bee28",
                "4b2737d8.912c5",
                "c949d133.f96d6"
            ]
        ]
    },
    {
        "id": "9819ea83.866a38",
        "type": "ui_text",
        "z": "3fb5a67.37c495a",
        "group": "92957720.d414",
        "order": 14,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "{{topic}}",
        "format": "{{value | uppercase}}",
        "layout": "col-center",
        "x": 990,
        "y": 2660,
        "wires": []
    },
    {
        "id": "c380e12b.d7ed1",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "Status",
        "func": "// widget has no topic background\n//msg.background = 'grey';\n\nif (msg.payload == '')\n{\n    msg.enabled = false;\n    msg.payload = msg.status1;\n    msg.topic = msg.status0;\n}\nelse\n{\n    msg.enabled = true;\n    msg.payload = msg.status2 + ' : ' + msg.mperiod + ' ' + msg.status3;\n    msg.topic = msg.status0;\n    \n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 2660,
        "wires": [
            [
                "9819ea83.866a38"
            ]
        ]
    },
    {
        "id": "5c2b98c5.0b8918",
        "type": "ui_text_input",
        "z": "3fb5a67.37c495a",
        "name": "LogToEmailM1",
        "label": "{{log_label}}",
        "tooltip": "",
        "group": "92957720.d414",
        "order": 10,
        "width": 6,
        "height": 1,
        "passthru": false,
        "mode": "email",
        "delay": "0",
        "topic": "topic",
        "topicType": "msg",
        "x": 960,
        "y": 1400,
        "wires": [
            [
                "476a9d69.d7fe54",
                "549d79f5.8232f"
            ]
        ]
    },
    {
        "id": "d82ac10e.a4e71",
        "type": "ui_button",
        "z": "3fb5a67.37c495a",
        "name": "",
        "group": "92957720.d414",
        "order": 11,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "{{msg.label}}",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{background}}",
        "icon": "",
        "payload": "start",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 510,
        "y": 1460,
        "wires": [
            [
                "bea6531.085873",
                "3559e0a.8b4cfa",
                "1109aab1.d9fc3d"
            ]
        ]
    },
    {
        "id": "d2fff723.3803",
        "type": "postgrestor",
        "z": "3fb5a67.37c495a",
        "name": "sensor_config@localhost",
        "query": "DROP TABLE IF EXISTS \"{{ msg.topic }}\" CASCADE;\n\nCREATE TABLE \"{{ msg.topic }}\" (\n\t\"ts\" timestamptz DEFAULT NOW(),\n\t\"localisation\" point,\n\t\"description\" varchar(50),\n\t\"customerid\" integer,\n\t\"masterid\" varchar(50),\n\t\"sensorid\" integer,\n\t\"timeslot\" integer,\n\t\"vhigh\" integer,\n\t\"vlow\" integer,\n\t\"meastime\" integer,\n\t\"measperiod\" integer,\n\t\"rcharge\" integer,\n\t\"accel\" integer,\n\tCONSTRAINT \"sensor_config_table_pk\" PRIMARY KEY (\"ts\")\n) WITH (\n  OIDS=FALSE\n)\nTABLESPACE pg_default;\n",
        "postgresDB": "6733d493.9cca6c",
        "output": true,
        "outputs": 1,
        "x": 470,
        "y": 280,
        "wires": [
            [
                "645f40d7.696a7"
            ]
        ]
    },
    {
        "id": "8edee644.4cc55",
        "type": "inject",
        "z": "3fb5a67.37c495a",
        "name": "sensor_config_table",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "sensor_config_table",
        "payloadType": "str",
        "x": 210,
        "y": 280,
        "wires": [
            [
                "d2fff723.3803"
            ]
        ]
    },
    {
        "id": "66c7aed6.f4b8f",
        "type": "exec",
        "z": "3fb5a67.37c495a",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 870,
        "y": 280,
        "wires": [
            [],
            [],
            [
                "48c99677.da4fe"
            ]
        ]
    },
    {
        "id": "645f40d7.696a7",
        "type": "template",
        "z": "3fb5a67.37c495a",
        "name": "Create hypertable",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "echo '\\x \\\\ SELECT create_hypertable('sensor_geom');' | psql -U postgres -h localhost -d sensor_config\n\n",
        "output": "str",
        "x": 710,
        "y": 280,
        "wires": [
            [
                "66c7aed6.f4b8f"
            ]
        ]
    },
    {
        "id": "48c99677.da4fe",
        "type": "debug",
        "z": "3fb5a67.37c495a",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1030,
        "y": 280,
        "wires": []
    },
    {
        "id": "d44742f0.891cd",
        "type": "inject",
        "z": "3fb5a67.37c495a",
        "name": "sensor_config::database",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "sensor_config",
        "payloadType": "str",
        "x": 230,
        "y": 220,
        "wires": [
            [
                "72b07a5d.589b8c"
            ]
        ]
    },
    {
        "id": "c269d212.733ce8",
        "type": "exec",
        "z": "3fb5a67.37c495a",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 590,
        "y": 220,
        "wires": [
            [],
            [],
            [
                "bcd51da3.d05da8"
            ]
        ]
    },
    {
        "id": "72b07a5d.589b8c",
        "type": "template",
        "z": "3fb5a67.37c495a",
        "name": "extensions",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "echo '\\x \\\\ DROP DATABASE IF EXISTS {{msg.topic}};' | psql -U postgres -h localhost\n\necho '\\x \\\\ CREATE DATABASE {{msg.topic}};' | psql -U postgres -h localhost\necho '\\x \\\\ CREATE EXTENSION IF NOT EXISTS timescaledb CASCADE;' | psql -U postgres -h localhost -d sensor_config\necho '\\x \\\\ CREATE EXTENSION IF NOT EXISTS postgis CASCADE;' | psql -U postgres -h localhost -d sensor_config\n",
        "output": "str",
        "x": 450,
        "y": 220,
        "wires": [
            [
                "c269d212.733ce8"
            ]
        ]
    },
    {
        "id": "bcd51da3.d05da8",
        "type": "debug",
        "z": "3fb5a67.37c495a",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 220,
        "wires": []
    },
    {
        "id": "bc137f20.f932b",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "msg.filename",
        "func": "msg.filename = \"/home/nuci3/Desktop/Logo-iSensPro-MD.png\";\nreturn msg;\n    \n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 2800,
        "wires": [
            [
                "4757d887.183fc8"
            ]
        ]
    },
    {
        "id": "ee87f65b.9f4398",
        "type": "inject",
        "z": "3fb5a67.37c495a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 310,
        "y": 2800,
        "wires": [
            [
                "bc137f20.f932b"
            ]
        ]
    },
    {
        "id": "4757d887.183fc8",
        "type": "file in",
        "z": "3fb5a67.37c495a",
        "name": "",
        "filename": "",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 590,
        "y": 2800,
        "wires": [
            [
                "db2e5ea3.ed84"
            ]
        ]
    },
    {
        "id": "db2e5ea3.ed84",
        "type": "base64",
        "z": "3fb5a67.37c495a",
        "name": "",
        "action": "str",
        "property": "payload",
        "x": 740,
        "y": 2800,
        "wires": [
            [
                "1b1f0c4a.4e110c"
            ]
        ]
    },
    {
        "id": "6357e3bc.d7df74",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "START",
        "func": "var label = global.get('log_start');\n\n// set new flow variable\nflow.set('loggingM1',0);\n\nmsg.enabled = false;\nmsg.background = 'green';\n\nmsg.label = label;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 1460,
        "wires": [
            [
                "d82ac10e.a4e71"
            ]
        ]
    },
    {
        "id": "3559e0a.8b4cfa",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "LOGGING",
        "func": "var label = global.get('log_logging');\n// set new flow variable\nflow.set('loggingM1',1);\n\nmsg.background = 'grey';\nmsg.enabled = false;\nmsg.label = label;\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 1460,
        "wires": [
            [
                "d82ac10e.a4e71",
                "6dd513b9.cb5ca4"
            ]
        ]
    },
    {
        "id": "bea6531.085873",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "",
        "func": "msg.filename = '/home/nuci3/Desktop/logfileM1.csv';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 1400,
        "wires": [
            [
                "4ccf09bd.0ad968"
            ]
        ]
    },
    {
        "id": "4ccf09bd.0ad968",
        "type": "file",
        "z": "3fb5a67.37c495a",
        "name": "delete file",
        "filename": "",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "delete",
        "encoding": "none",
        "x": 520,
        "y": 1400,
        "wires": [
            []
        ]
    },
    {
        "id": "ceda8af0.3ed6e",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "",
        "func": "var label = global.get('log_file');\n\nvar email = flow.get('LogToEmailM1');\n\nmsg.to = email;\n\nmsg.topic = topic;\nmsg.filename = '/home/nuci3/Desktop/logfileM1.csv';\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 1600,
        "wires": [
            [
                "baf55505.67997"
            ]
        ]
    },
    {
        "id": "6dd513b9.cb5ca4",
        "type": "debug",
        "z": "3fb5a67.37c495a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 1460,
        "wires": []
    },
    {
        "id": "476a9d69.d7fe54",
        "type": "change",
        "z": "3fb5a67.37c495a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "LogToEmailM1",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1180,
        "y": 1360,
        "wires": [
            [
                "885cb1be.630328"
            ]
        ]
    },
    {
        "id": "4ccf4558.16df8c",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "disable STOP",
        "func": "var label = global.get('log_stop');\n// set new flow variable\n// flow.set('logging',0);\n\nmsg.background = 'grey';\nmsg.enabled = false;\nmsg.label = label;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 1540,
        "wires": [
            [
                "ed02be4d.0777a8"
            ]
        ]
    },
    {
        "id": "ed02be4d.0777a8",
        "type": "ui_button",
        "z": "3fb5a67.37c495a",
        "name": "",
        "group": "92957720.d414",
        "order": 12,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "{{msg.label}}",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{background}}",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 510,
        "y": 1540,
        "wires": [
            [
                "4ccf4558.16df8c",
                "6357e3bc.d7df74",
                "ceda8af0.3ed6e"
            ]
        ]
    },
    {
        "id": "1109aab1.d9fc3d",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "enable STOP",
        "func": "var label = global.get('log_stop');\n// set new flow variable\n//flow.set('logging',1);\n\nmsg.background = 'red';\nmsg.enabled = true;\nmsg.label = label;\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 1540,
        "wires": [
            [
                "ed02be4d.0777a8"
            ]
        ]
    },
    {
        "id": "bd33c582.99aae",
        "type": "comment",
        "z": "3fb5a67.37c495a",
        "name": "data logging ui (part 1)",
        "info": "",
        "x": 180,
        "y": 1400,
        "wires": []
    },
    {
        "id": "71cb0518.cbaef4",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "add topic",
        "func": "msg.topic = msg.port;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 1060,
        "wires": [
            [
                "77cf8a52.acbcec"
            ]
        ]
    },
    {
        "id": "baf55505.67997",
        "type": "file in",
        "z": "3fb5a67.37c495a",
        "name": "",
        "filename": "",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 950,
        "y": 1600,
        "wires": [
            [
                "44db0722.04334"
            ]
        ]
    },
    {
        "id": "44db0722.04334",
        "type": "change",
        "z": "3fb5a67.37c495a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "attachments",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1160,
        "y": 1600,
        "wires": [
            [
                "bb223f84.15df6",
                "c30ded45.66768"
            ]
        ]
    },
    {
        "id": "bb223f84.15df6",
        "type": "e-mail",
        "z": "3fb5a67.37c495a",
        "server": "mail.isenspro.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "",
        "dname": "",
        "x": 1370,
        "y": 1600,
        "wires": []
    },
    {
        "id": "885cb1be.630328",
        "type": "debug",
        "z": "3fb5a67.37c495a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1370,
        "y": 1360,
        "wires": []
    },
    {
        "id": "549d79f5.8232f",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "enable START",
        "func": "var label = global.get('log_start');\n// set new flow variable\nflow.set('loggingM1',0);\n\nmsg.background = 'green';\nmsg.label = label;\nmsg.payload != '' ? msg.enabled = true : msg.enabled = false;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 1400,
        "wires": [
            [
                "d82ac10e.a4e71",
                "9a8f0fe.fc81f7"
            ]
        ]
    },
    {
        "id": "ecc6b67e.c04d68",
        "type": "debug",
        "z": "3fb5a67.37c495a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1630,
        "y": 1100,
        "wires": []
    },
    {
        "id": "eb262a8f.019ba8",
        "type": "serial in",
        "z": "3fb5a67.37c495a",
        "name": "",
        "serial": "fd6c249c.71f2d8",
        "x": 130,
        "y": 1160,
        "wires": [
            [
                "15d44a5b.90cc56"
            ]
        ]
    },
    {
        "id": "1446fd08.2a02db",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "add topic",
        "func": "msg.topic = msg.port;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 1160,
        "wires": [
            [
                "28bcd772.79931"
            ]
        ]
    },
    {
        "id": "9120525e.fd0aa",
        "type": "serial in",
        "z": "3fb5a67.37c495a",
        "name": "",
        "serial": "50f22906.5ea4b",
        "x": 130,
        "y": 1260,
        "wires": [
            [
                "d02be727.9a2718"
            ]
        ]
    },
    {
        "id": "2ca89b40.76cb24",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "add topic",
        "func": "msg.topic = msg.port;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 1260,
        "wires": [
            [
                "595912c7.3a958c"
            ]
        ]
    },
    {
        "id": "cbab7f70.4545f",
        "type": "debug",
        "z": "3fb5a67.37c495a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 1020,
        "wires": []
    },
    {
        "id": "77cf8a52.acbcec",
        "type": "delay",
        "z": "3fb5a67.37c495a",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 930,
        "y": 1060,
        "wires": [
            [
                "b9758b69.0dc918",
                "10377342.5536dd"
            ]
        ]
    },
    {
        "id": "28bcd772.79931",
        "type": "delay",
        "z": "3fb5a67.37c495a",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 800,
        "y": 1160,
        "wires": [
            [
                "77cf8a52.acbcec"
            ]
        ]
    },
    {
        "id": "595912c7.3a958c",
        "type": "delay",
        "z": "3fb5a67.37c495a",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 780,
        "y": 1260,
        "wires": [
            [
                "77cf8a52.acbcec"
            ]
        ]
    },
    {
        "id": "10377342.5536dd",
        "type": "debug",
        "z": "3fb5a67.37c495a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1050,
        "y": 1020,
        "wires": []
    },
    {
        "id": "881accc2.12a77",
        "type": "ui_dropdown",
        "z": "3fb5a67.37c495a",
        "name": "",
        "label": "{{msg.master_label}}",
        "tooltip": "",
        "place": "",
        "group": "f726791c.9d1d88",
        "order": 1,
        "width": 6,
        "height": 2,
        "passthru": true,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "x": 740,
        "y": 680,
        "wires": [
            [
                "5a0746d6.c5b938",
                "804a3896.233a2"
            ]
        ]
    },
    {
        "id": "5a0746d6.c5b938",
        "type": "change",
        "z": "3fb5a67.37c495a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "master1ID",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 930,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "28333259.b35406",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "1STMASTER",
        "func": "var ID = flow.get(\"master1ID\");\n\nif ((msg.masterid == ID) && (ID =! ''))\n{\n   return [msg,null]; \n}\nelse\n{\n   return [null,msg]; \n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 180,
        "y": 1840,
        "wires": [
            [
                "eb6ce2e2.ec5f68",
                "e9b447bf.24ac58",
                "227659b0.ea0b0e",
                "70ed7170.d90e38",
                "f996ad86.32d81",
                "111ef4bb.33e273",
                "de2e59c0.e825e8",
                "fea77453.727b48",
                "36749289.c99cde",
                "8f69284d.59fe38",
                "dfbefc3.9ba7",
                "e38c221e.374eb",
                "91853a8c.c60ab",
                "1b73761c.98f072"
            ],
            []
        ]
    },
    {
        "id": "1b73761c.98f072",
        "type": "debug",
        "z": "3fb5a67.37c495a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 410,
        "y": 1780,
        "wires": []
    },
    {
        "id": "bea5926e.312c7",
        "type": "serial out",
        "z": "3fb5a67.37c495a",
        "name": "",
        "serial": "fd6c249c.71f2d8",
        "x": 2080,
        "y": 2280,
        "wires": []
    },
    {
        "id": "4ac407a.42f9d78",
        "type": "serial out",
        "z": "3fb5a67.37c495a",
        "name": "",
        "serial": "50f22906.5ea4b",
        "x": 2080,
        "y": 2360,
        "wires": []
    },
    {
        "id": "a8bb996d.ba216",
        "type": "switch",
        "z": "3fb5a67.37c495a",
        "name": "",
        "property": "master1ID",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "/dev/ttyACM0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "/dev/ttyACM1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "/dev/ttyACM2",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1890,
        "y": 2260,
        "wires": [
            [
                "10ceb888.3ae5df",
                "11fe015e.8b3d37"
            ],
            [
                "bea5926e.312c7"
            ],
            [
                "4ac407a.42f9d78"
            ]
        ]
    },
    {
        "id": "c3e4036d.f5db48",
        "type": "file",
        "z": "3fb5a67.37c495a",
        "name": "append file",
        "filename": "",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 870,
        "y": 1720,
        "wires": [
            []
        ]
    },
    {
        "id": "97637aa3.7e8ee8",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "trim",
        "func": "\nmsg.original = msg.payload.trim();\nmsg.payload = String(msg.timestamp) + ',' + String(msg.topic) + ',' + String(msg.original);\nmsg.filename = '/home/nuci3/Desktop/logfileM1.csv';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 1720,
        "wires": [
            [
                "c3e4036d.f5db48"
            ]
        ]
    },
    {
        "id": "eb6ce2e2.ec5f68",
        "type": "switch",
        "z": "3fb5a67.37c495a",
        "name": "logging ?",
        "property": "loggingM1",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 400,
        "y": 1720,
        "wires": [
            [],
            [
                "2388b177.5f7036"
            ]
        ]
    },
    {
        "id": "2388b177.5f7036",
        "type": "timestamp",
        "z": "3fb5a67.37c495a",
        "name": "",
        "x": 550,
        "y": 1720,
        "wires": [
            [
                "97637aa3.7e8ee8"
            ]
        ]
    },
    {
        "id": "8830cc23.a6a478",
        "type": "comment",
        "z": "3fb5a67.37c495a",
        "name": "data logging (part 1)",
        "info": "",
        "x": 410,
        "y": 1680,
        "wires": []
    },
    {
        "id": "11fe015e.8b3d37",
        "type": "debug",
        "z": "3fb5a67.37c495a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2010,
        "y": 2160,
        "wires": []
    },
    {
        "id": "311261ad.c6341e",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "delta time",
        "func": "\n\n// get flow variable last time\nvar OldSecs=global.get('LastSecsACM0') || 0;\n\n//calculate difference\nvar NewTime = new Date();\n// set new flow variable\nglobal.set('LastMsgTimeACM0',NewTime);\n\nvar timestr = msg.timestamp;\nvar parts = timestr.split(\":\");\nvar hrs = parseInt(parts[0]);\nvar mins = parseInt(parts[1]);\nvar secs = parseInt(parts[2]);\n\nvar NewSecs = hrs*3600+mins*60+secs;\nglobal.set('LastSecsACM0',NewSecs);\n\nif (NewSecs > OldSecs)\n{\n//var temp = parseFloat((NewTime - OldTime)/1000).toFixed(0);\n    msg.mperiod = NewSecs-OldSecs;\n}\nelse\n{\n    msg.mperiod = NewSecs + (24*3600 - OldSecs);\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1060,
        "wires": [
            [
                "71cb0518.cbaef4"
            ]
        ]
    },
    {
        "id": "591e77af.79ada8",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "delta time",
        "func": "\n\n// get flow variable last time\nvar OldSecs=global.get('LastSecsACM1') || 0;\n\n//calculate difference\nvar NewTime = new Date();\n// set new flow variable\nglobal.set('LastMsgTimeACM1',NewTime);\n\nvar timestr = msg.timestamp;\nvar parts = timestr.split(\":\");\nvar hrs = parseInt(parts[0]);\nvar mins = parseInt(parts[1]);\nvar secs = parseInt(parts[2]);\n\nvar NewSecs = hrs*3600+mins*60+secs;\nglobal.set('LastSecsACM1',NewSecs);\n\nif (NewSecs > OldSecs)\n{\n//var temp = parseFloat((NewTime - OldTime)/1000).toFixed(0);\n    msg.mperiod = NewSecs-OldSecs;\n}\nelse\n{\n    msg.mperiod = NewSecs + (24*3600 - OldSecs);\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1160,
        "wires": [
            [
                "1446fd08.2a02db"
            ]
        ]
    },
    {
        "id": "362f57a3.ea9ca",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "delta time",
        "func": "\n\n// get flow variable last time\nvar OldSecs=global.get('LastSecsACM2') || 0;\n\n//calculate difference\nvar NewTime = new Date();\n// set new flow variable\nglobal.set('LastMsgTimeACM2',NewTime);\n\nvar timestr = msg.timestamp;\nvar parts = timestr.split(\":\");\nvar hrs = parseInt(parts[0]);\nvar mins = parseInt(parts[1]);\nvar secs = parseInt(parts[2]);\n\nvar NewSecs = hrs*3600+mins*60+secs;\nglobal.set('LastSecsACM2',NewSecs);\n\nif (NewSecs > OldSecs)\n{\n//var temp = parseFloat((NewTime - OldTime)/1000).toFixed(0);\n    msg.mperiod = NewSecs-OldSecs;\n}\nelse\n{\n    msg.mperiod = NewSecs + (24*3600 - OldSecs);\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1260,
        "wires": [
            [
                "2ca89b40.76cb24"
            ]
        ]
    },
    {
        "id": "be96bd9d.aac458",
        "type": "timestamp",
        "z": "3fb5a67.37c495a",
        "name": "",
        "x": 290,
        "y": 1060,
        "wires": [
            [
                "311261ad.c6341e"
            ]
        ]
    },
    {
        "id": "15d44a5b.90cc56",
        "type": "timestamp",
        "z": "3fb5a67.37c495a",
        "name": "",
        "x": 290,
        "y": 1160,
        "wires": [
            [
                "591e77af.79ada8"
            ]
        ]
    },
    {
        "id": "d02be727.9a2718",
        "type": "timestamp",
        "z": "3fb5a67.37c495a",
        "name": "",
        "x": 290,
        "y": 1260,
        "wires": [
            [
                "362f57a3.ea9ca"
            ]
        ]
    },
    {
        "id": "f93d3e8f.3d8778",
        "type": "change",
        "z": "3fb5a67.37c495a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "master1ID",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 680,
        "wires": [
            [
                "881accc2.12a77"
            ]
        ]
    },
    {
        "id": "f4ed5738.45cc8",
        "type": "status",
        "z": "3fb5a67.37c495a",
        "name": "ttyACM0",
        "scope": [
            "694ff596.7d1114"
        ],
        "x": 120,
        "y": 1020,
        "wires": [
            [
                "abba1082.46158",
                "af3a836c.a6173"
            ]
        ]
    },
    {
        "id": "abba1082.46158",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "default config",
        "func": "// get status\n\nvar status = msg.status.text;\nvar parts = status.split(\".\");\nvar temp1 = parts[0];\nvar temp2 = parts[1];\nvar temp3 = parts[2];\n\nif (temp3 == 'connected')\n{\n    msg.sensorid = 0;\n    msg.masterid = '/dev/ttyACM0';\n    msg.mperiod = 5;\n    msg.rcharge = 300000;\n    msg.vhigh = 1034;\n    msg.vlow = 512;\n    msg.mwindow = 1;\n    msg.description = 'default config';\n    // for global variable setting\n    msg.payload = msg.masterid;\n}\nelse\n{\n     // for global variable setting\n    msg.payload = null;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 1020,
        "wires": [
            [
                "f4bf6a54.619718"
            ]
        ]
    },
    {
        "id": "20b1eee4.a2dd52",
        "type": "status",
        "z": "3fb5a67.37c495a",
        "name": "ttyACM1",
        "scope": [
            "eb262a8f.019ba8"
        ],
        "x": 120,
        "y": 1120,
        "wires": [
            [
                "7b1ad4f7.ec60a4",
                "af3a836c.a6173"
            ]
        ]
    },
    {
        "id": "800a58b4.fad348",
        "type": "status",
        "z": "3fb5a67.37c495a",
        "name": "ttyACM2",
        "scope": [
            "9120525e.fd0aa"
        ],
        "x": 120,
        "y": 1220,
        "wires": [
            [
                "f15fe6d.1f14818",
                "af3a836c.a6173"
            ]
        ]
    },
    {
        "id": "7b1ad4f7.ec60a4",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "default config",
        "func": "// get status\n\nvar status = msg.status.text;\nvar parts = status.split(\".\");\nvar temp1 = parts[0];\nvar temp2 = parts[1];\nvar temp3 = parts[2];\n\nif (temp3 == 'connected')\n{\n    msg.sensorid = 0;\n    msg.masterid = '/dev/ttyACM1';\n    msg.mperiod = 5;\n    msg.rcharge = 364705;\n    msg.vhigh = 1034;\n    msg.vlow = 512;\n    msg.mwindow = 1;\n    msg.description = 'default config';\n // for global variable setting\n    msg.payload = msg.masterid;\n}\nelse\n{\n     // for global variable setting\n    msg.payload = null;\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 1120,
        "wires": [
            [
                "88ce6c66.746dc"
            ]
        ]
    },
    {
        "id": "f15fe6d.1f14818",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "default config",
        "func": "// get status\n\nvar status = msg.status.text;\nvar parts = status.split(\".\");\nvar temp1 = parts[0];\nvar temp2 = parts[1];\nvar temp3 = parts[2];\n\nif (temp3 == 'connected')\n{\n    msg.sensorid = 0;\n    msg.masterid = '/dev/ttyACM2';\n    msg.mperiod = 5;\n    msg.rcharge = 364705;\n    msg.vhigh = 1034;\n    msg.vlow = 512;\n    msg.mwindow = 1;\n    msg.description = 'default config';\n//    msg.payload = 'connected';\n // for global variable setting\n    msg.payload = msg.masterid;\n}\nelse\n{\n     // for global variable setting\n    msg.payload = null\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 1220,
        "wires": [
            [
                "a02d56b5.4d928"
            ]
        ]
    },
    {
        "id": "9a8f0fe.fc81f7",
        "type": "debug",
        "z": "3fb5a67.37c495a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1370,
        "y": 1400,
        "wires": []
    },
    {
        "id": "c30ded45.66768",
        "type": "e-mail",
        "z": "3fb5a67.37c495a",
        "server": "mail.isenspro.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "log@isenspro.com",
        "dname": "log email",
        "x": 1440,
        "y": 1640,
        "wires": []
    },
    {
        "id": "f79cdec1.a2e858",
        "type": "ui_text",
        "z": "3fb5a67.37c495a",
        "group": "f726791c.9d1d88",
        "order": 6,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "{{msg.label}}",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "x": 990,
        "y": 2340,
        "wires": []
    },
    {
        "id": "e06d89d.6fbbf78",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "validate input",
        "func": "// get new flow variable\n//var description = flow.get('descriptionM1');\nvar ID = flow.get('master1ID');\n\nvar label = global.get('desc_label');\nvar change = global.get('desc_change');\nvar tooltip = global.get('desc_tooltip');\nvar set = global.get('desc_set');\n\nmsg.label = label;\nmsg.change = change;\nmsg.tooltip = tooltip;\nmsg.set = set;\n\n// when disabled tooltip becomes visible when hoovered over\n// when entry, input UI generates message to validation\n//msg.background = 'grey';\nif (msg.payload == '')\n{\n    msg.enabled = false;\n    msg.payload = null;\n    msg.change = null;\n}\nelse\n{\n    if (ID != '')\n    {\n        msg.enabled = true;\n        msg.background = 'green';\n        msg.change = change;\n        // payload is output of ui_widget\n        // msg.topic is only message part that can get across button     \n    }\n    else \n    {\n        msg.enabled = false;\n        msg.background = 'green';\n        msg.change = null;\n        msg.payload = null;\n    }\n    // payload = output of ui_text widget\n    msg.topic = msg.payload;\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 2400,
        "wires": [
            [
                "c949d133.f96d6"
            ]
        ]
    },
    {
        "id": "c949d133.f96d6",
        "type": "ui_button",
        "z": "3fb5a67.37c495a",
        "name": "",
        "group": "f726791c.9d1d88",
        "order": 7,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "{{ msg.set }}",
        "tooltip": "{{msg.tooltip}}",
        "color": "",
        "bgcolor": "{{background}}",
        "icon": "",
        "payload": "confirm",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 1170,
        "y": 2400,
        "wires": [
            [
                "2e15fdd1.3cad52",
                "a936ca50.08ecb",
                "1de86f9e.b13068",
                "d99cfcd6.e86338"
            ]
        ]
    },
    {
        "id": "a63a6e6e.c3f828",
        "type": "ui_text_input",
        "z": "3fb5a67.37c495a",
        "name": "description",
        "label": "{{change}}",
        "tooltip": "{{tooltip}}",
        "group": "f726791c.9d1d88",
        "order": 5,
        "width": 6,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": "100",
        "topic": "",
        "topicType": "str",
        "x": 590,
        "y": 2400,
        "wires": [
            [
                "e06d89d.6fbbf78"
            ]
        ]
    },
    {
        "id": "ce5c0b77.bc54d",
        "type": "inject",
        "z": "a66ad1ae.ff0e18",
        "name": "translations::database",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "translations",
        "payloadType": "str",
        "x": 140,
        "y": 1140,
        "wires": [
            [
                "9fdcfe85.fcdbc"
            ]
        ]
    },
    {
        "id": "d152f38.65baa9",
        "type": "debug",
        "z": "a66ad1ae.ff0e18",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 1140,
        "wires": []
    },
    {
        "id": "9f7bfed6.b3ee6",
        "type": "comment",
        "z": "a66ad1ae.ff0e18",
        "name": "Translations",
        "info": "",
        "x": 90,
        "y": 1080,
        "wires": []
    },
    {
        "id": "ff200785.91879",
        "type": "postgrestor",
        "z": "a66ad1ae.ff0e18",
        "name": "translations@localhost",
        "query": "DROP TABLE IF EXISTS \"{{ msg.topic }}\" CASCADE;\n\nCREATE TABLE \"{{ msg.topic }}\" (\n\t\"en\" varchar(50),\n\t\"nl\" varchar(50),\n\t\"fr\" varchar(50),\n\t\"de\" varchar(50),\n\t\"jp\" varchar(50),\n\t\"sw\" varchar(50),\n\t\"no\" varchar(50),\n\t\"ru\" varchar(50),\n\t\"fi\" varchar(50),\n\t\"ar\" varchar(50),\n\tCONSTRAINT \"translations_table_pk\" PRIMARY KEY (\"en\")\n) WITH (\n  OIDS=FALSE\n)\nTABLESPACE pg_default;\n",
        "postgresDB": "6787392.d78b7c8",
        "output": true,
        "outputs": 1,
        "x": 380,
        "y": 1200,
        "wires": [
            [
                "aae0770a.116a38"
            ]
        ]
    },
    {
        "id": "1440568d.554631",
        "type": "inject",
        "z": "a66ad1ae.ff0e18",
        "name": "translations_table",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "translations_table",
        "payloadType": "str",
        "x": 120,
        "y": 1200,
        "wires": [
            [
                "ff200785.91879"
            ]
        ]
    },
    {
        "id": "aae0770a.116a38",
        "type": "debug",
        "z": "a66ad1ae.ff0e18",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 1200,
        "wires": []
    },
    {
        "id": "9fdcfe85.fcdbc",
        "type": "template",
        "z": "a66ad1ae.ff0e18",
        "name": "extensions",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "echo '\\x \\\\ DROP DATABASE IF EXISTS {{payload}};' | psql -U postgres -h localhost\n\necho '\\x \\\\ CREATE DATABASE {{payload}};' | psql -U postgres -h localhost\necho '\\x \\\\ CREATE EXTENSION IF NOT EXISTS postgis CASCADE;' | psql -U postgres -h localhost -d weather_data\n",
        "output": "str",
        "x": 350,
        "y": 1140,
        "wires": [
            [
                "cec4e557.e2ba68"
            ]
        ]
    },
    {
        "id": "cec4e557.e2ba68",
        "type": "exec",
        "z": "a66ad1ae.ff0e18",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 550,
        "y": 1140,
        "wires": [
            [],
            [],
            [
                "d152f38.65baa9"
            ]
        ]
    },
    {
        "id": "e587a339.37909",
        "type": "inject",
        "z": "a66ad1ae.ff0e18",
        "name": "Translate EN word",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "between 1 and 4000 secs",
        "payloadType": "str",
        "x": 150,
        "y": 1300,
        "wires": [
            [
                "2a8dc65a.ad90fa",
                "676e7ab7.dadee4",
                "ec3fdfd0.2a77f",
                "cc4fd54f.6558b",
                "24f04687.b5ea1a",
                "59315de8.64b4ac",
                "9efbd77a.b8a96",
                "b327d4af.9f643"
            ]
        ]
    },
    {
        "id": "2a8dc65a.ad90fa",
        "type": "deepl",
        "z": "a66ad1ae.ff0e18",
        "name": "Deepl to FR",
        "auth_key": "40942aeb-6118-f285-28d9-95f24488eb51:fx",
        "option": "https://api-free.deepl.com/v2/translate",
        "source_lang": "EN",
        "text": "",
        "target_lang": "FR",
        "x": 330,
        "y": 1340,
        "wires": [
            [
                "d8d91dca.1e4b5"
            ]
        ]
    },
    {
        "id": "ba3d544.70a9128",
        "type": "debug",
        "z": "a66ad1ae.ff0e18",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 1340,
        "wires": []
    },
    {
        "id": "d8d91dca.1e4b5",
        "type": "function",
        "z": "a66ad1ae.ff0e18",
        "name": "",
        "func": "msg.fr = msg.payload.translations[0].text;\nflow.set(\"fr\",msg.fr);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 1340,
        "wires": [
            []
        ]
    },
    {
        "id": "3f959dd0.88cd62",
        "type": "function",
        "z": "a66ad1ae.ff0e18",
        "name": "",
        "func": "msg.en = msg.payload;\nflow.set(\"en\",msg.en);\n\nvar fr = flow.get(\"fr\");\nmsg.fr = fr;\n\nvar de = flow.get(\"de\");\nmsg.de = de;\n\nvar nl = flow.get(\"nl\");\nmsg.nl = nl;\n\nvar jp = flow.get(\"jp\");\nmsg.jp = jp;\n\nvar sw = flow.get(\"sw\");\nmsg.sw = sw;\n\nvar fi = flow.get(\"fi\");\nmsg.fi = fi;\n\nvar ru = flow.get(\"ru\");\nmsg.ru = ru;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 1300,
        "wires": [
            [
                "ba3d544.70a9128",
                "ecb8c3b4.688d7"
            ]
        ]
    },
    {
        "id": "9ca8b0fa.9ad5d8",
        "type": "deepl",
        "z": "a66ad1ae.ff0e18",
        "name": "Deepl to DE",
        "auth_key": "40942aeb-6118-f285-28d9-95f24488eb51:fx",
        "option": "https://api-free.deepl.com/v2/translate",
        "source_lang": "EN",
        "text": "",
        "target_lang": "DE",
        "x": 530,
        "y": 1380,
        "wires": [
            [
                "3d7c4c70.fc0f64"
            ]
        ]
    },
    {
        "id": "199f9099.af8e5f",
        "type": "deepl",
        "z": "a66ad1ae.ff0e18",
        "name": "Deepl to NL",
        "auth_key": "40942aeb-6118-f285-28d9-95f24488eb51:fx",
        "option": "https://api-free.deepl.com/v2/translate",
        "source_lang": "EN",
        "text": "",
        "target_lang": "NL",
        "x": 530,
        "y": 1420,
        "wires": [
            [
                "7a9856c8.ef0a18"
            ]
        ]
    },
    {
        "id": "d6519f5a.a2291",
        "type": "deepl",
        "z": "a66ad1ae.ff0e18",
        "name": "Deepl to JP",
        "auth_key": "40942aeb-6118-f285-28d9-95f24488eb51:fx",
        "option": "https://api-free.deepl.com/v2/translate",
        "source_lang": "EN",
        "text": "",
        "target_lang": "JA",
        "x": 530,
        "y": 1460,
        "wires": [
            [
                "f5efcf49.5ce178"
            ]
        ]
    },
    {
        "id": "54b1d069.2e098",
        "type": "deepl",
        "z": "a66ad1ae.ff0e18",
        "name": "Deepl to SW",
        "auth_key": "40942aeb-6118-f285-28d9-95f24488eb51:fx",
        "option": "https://api-free.deepl.com/v2/translate",
        "source_lang": "EN",
        "text": "",
        "target_lang": "SV",
        "x": 530,
        "y": 1500,
        "wires": [
            [
                "3b37f9bd.1693fe"
            ]
        ]
    },
    {
        "id": "66931d33.549d3c",
        "type": "deepl",
        "z": "a66ad1ae.ff0e18",
        "name": "Deepl to FI",
        "auth_key": "40942aeb-6118-f285-28d9-95f24488eb51:fx",
        "option": "https://api-free.deepl.com/v2/translate",
        "source_lang": "EN",
        "text": "",
        "target_lang": "FI",
        "x": 530,
        "y": 1540,
        "wires": [
            [
                "2a33a903.06886e"
            ]
        ]
    },
    {
        "id": "c4264afb.535ae",
        "type": "deepl",
        "z": "a66ad1ae.ff0e18",
        "name": "Deepl to RU",
        "auth_key": "40942aeb-6118-f285-28d9-95f24488eb51:fx",
        "option": "https://api-free.deepl.com/v2/translate",
        "source_lang": "EN",
        "text": "",
        "target_lang": "RU",
        "x": 530,
        "y": 1580,
        "wires": [
            [
                "9ccf1ca.e812ce"
            ]
        ]
    },
    {
        "id": "3d7c4c70.fc0f64",
        "type": "function",
        "z": "a66ad1ae.ff0e18",
        "name": "",
        "func": "msg.de = msg.payload.translations[0].text;\nflow.set(\"de\",msg.de);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 1380,
        "wires": [
            []
        ]
    },
    {
        "id": "7a9856c8.ef0a18",
        "type": "function",
        "z": "a66ad1ae.ff0e18",
        "name": "",
        "func": "msg.nl = msg.payload.translations[0].text;\nflow.set(\"nl\",msg.nl);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 1420,
        "wires": [
            []
        ]
    },
    {
        "id": "f5efcf49.5ce178",
        "type": "function",
        "z": "a66ad1ae.ff0e18",
        "name": "",
        "func": "msg.jp = msg.payload.translations[0].text;\nflow.set(\"jp\",msg.jp);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 1460,
        "wires": [
            []
        ]
    },
    {
        "id": "3b37f9bd.1693fe",
        "type": "function",
        "z": "a66ad1ae.ff0e18",
        "name": "",
        "func": "msg.sw = msg.payload.translations[0].text;\nflow.set(\"sw\",msg.sw);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 1500,
        "wires": [
            []
        ]
    },
    {
        "id": "2a33a903.06886e",
        "type": "function",
        "z": "a66ad1ae.ff0e18",
        "name": "",
        "func": "msg.fi = msg.payload.translations[0].text;\nflow.set(\"fi\",msg.fi);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 1540,
        "wires": [
            []
        ]
    },
    {
        "id": "9ccf1ca.e812ce",
        "type": "function",
        "z": "a66ad1ae.ff0e18",
        "name": "",
        "func": "msg.ru = msg.payload.translations[0].text;\nflow.set(\"ru\",msg.ru);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 1580,
        "wires": [
            []
        ]
    },
    {
        "id": "ecb8c3b4.688d7",
        "type": "postgrestor",
        "z": "a66ad1ae.ff0e18",
        "name": "translations@localhost",
        "query": "-- timestamp inserted automatically with default value now()\n\n\nINSERT INTO translations_table \n(\n en,\n fr,\n de,\n nl,\n jp,\n sw,\n fi,\n ru\n) \n    VALUES\n(\n '{{msg.en}}',\n '{{msg.fr}}',\n '{{msg.de}}',\n '{{msg.nl}}',\n '{{msg.jp}}',\n '{{msg.sw}}',\n '{{msg.fi}}',\n '{{msg.ru}}'\n);\n\n",
        "postgresDB": "6787392.d78b7c8",
        "output": true,
        "outputs": 1,
        "x": 860,
        "y": 1300,
        "wires": [
            [
                "a5e00f91.9ea3e8"
            ]
        ]
    },
    {
        "id": "a5e00f91.9ea3e8",
        "type": "debug",
        "z": "a66ad1ae.ff0e18",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 1340,
        "wires": []
    },
    {
        "id": "e9b447bf.24ac58",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "translations",
        "func": "var label = global.get('sensorid_label');\nvar change = global.get('sensorid_change');\nvar tooltip = global.get('sensorid_tooltip');\nvar set = global.get('sensorid_set');\n\nmsg.label = label;\nmsg.change = change;\nmsg.tooltip = tooltip;\n//msg.set = set;\nmsg.set = null;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1840,
        "wires": [
            [
                "d2feafb2.f66178"
            ]
        ]
    },
    {
        "id": "bd7748c5.1705f8",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "",
        "func": "var label = global.get('mperiod_label');\nvar change = global.get('mperiod_change');\nvar tooltip = global.get('mperiod_tooltip');\nvar set = global.get('mperiod_set');\n\n// msg.ui_text_input = { \"tooltip\": \"red\" }\nmsg.label = label;\nmsg.change = change;\nmsg.tooltip = tooltip;\nmsg.set = set;\n\nmsg.backspaces = 5;\n\nvar mperiod = String(msg.mperiod);\n\n// msg.payload = \"\" when masterID not selected yet\"\nif (msg.payload != '')\n{\n    msg.enabled = true;\n    msg.background = 'green';\n    \n    msg.payload = '';\n    //padding\n    for(var j = 0; j < (msg.backspaces-mperiod.length); j++)\n    { \n        msg.payload += '0';\n    }\n\n    for(var i = 0; i < mperiod.length; i++)\n    { \n        msg.payload += mperiod[i];\n    }    \n}\nelse\n{\n    msg.enabled = false;\n    msg.background = 'grey';\n    msg.payload = '' ;\n    msg.change = null;\n    msg.set = null;\n //   msg.payload = msg.payload.toString();\n    \n}\n\n//msg.payload = msg.payload.toString();\nmsg.topic = 2;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 1960,
        "wires": [
            [
                "b7041100.cb555",
                "227659b0.ea0b0e"
            ]
        ]
    },
    {
        "id": "32bdb2ea.712cb6",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "",
        "func": "var label = global.get('mwindow_label');\nvar change = global.get('mwindow_change');\nvar tooltip = global.get('mwindow_tooltip');\nvar set = global.get('mwindow_set');\n\nmsg.label = label;\nmsg.change = change;\nmsg.tooltip = tooltip;\nmsg.set = set;\n\nmsg.backspaces = 5;\nvar mwindow = String(msg.mwindow);\n\n// msg.payload = \"\" when masterID not selected yet\"\nif (msg.payload != '')\n{\n    msg.enabled = true;\n    msg.background = 'green';\n    \n    msg.payload = '';\n    //padding\n    for(var j = 0; j < (msg.backspaces-mwindow.length); j++)\n    { \n        msg.payload += '0';\n    }\n\n    for(var i = 0; i < mwindow.length; i++)\n    { \n        msg.payload += mwindow[i];\n    }\n}\nelse\n{\n    msg.enabled = false;\n    msg.background = 'grey';\n    msg.payload = '';\n    msg.change = null;\n    msg.set = null;\n //   msg.payload = msg.payload.toString();\n}\n\nmsg.topic = 3;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 2040,
        "wires": [
            [
                "fe6856ba.b57f88",
                "70ed7170.d90e38"
            ]
        ]
    },
    {
        "id": "1552ea08.727bee",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "",
        "func": "var label = global.get('vhigh_label');\nvar change = global.get('vhigh_change');\nvar tooltip = global.get('vhigh_tooltip');\nvar set = global.get('vhigh_set');\n\nmsg.label = label;\nmsg.change = change;\nmsg.tooltip = tooltip;\nmsg.set = set;\n\nmsg.backspaces = 4;\nvar vhigh = String(msg.vhigh);\n\n// msg.payload = \"\" when masterID not selected yet\"\nif (msg.payload != '')\n{\n    msg.enabled = true;\n    msg.background = 'green';\n\n    msg.payload = '';\n    //padding before number\n    for(var j = 0; j < (msg.backspaces-vhigh.length); j++)\n    { \n        msg.payload += '0';\n    }\n\n    for(var i = 0; i < vhigh.length; i++)\n    { \n        msg.payload += vhigh[i];\n    }\n}\nelse\n{\n    msg.enabled = false;\n    msg.background = 'grey';\n    msg.payload = '';\n    msg.change = null;\n    msg.set = null;\n//    msg.payload = msg.payload.toString();\n    \n}\n\nmsg.topic = 4;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 2120,
        "wires": [
            [
                "4cb58678.ca535",
                "f996ad86.32d81"
            ]
        ]
    },
    {
        "id": "c1c56d91.222cb8",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "",
        "func": "var label = global.get('vlow_label');\nvar change = global.get('vlow_change');\nvar tooltip = global.get('vlow_tooltip');\nvar set = global.get('vlow_set');\n\nmsg.label = label;\nmsg.change = change;\nmsg.tooltip = tooltip;\nmsg.set = set;\n\nmsg.backspaces = 4;\nvar vlow = String(msg.vlow);\n\n// msg.payload = \"\" when masterID not selected yet\"\nif (msg.payload != '')\n{\n    msg.enabled = true;\n    msg.background = 'green';\n\n    msg.payload = '';\n    //padding before number\n    for(var j = 0; j < (msg.backspaces-vlow.length); j++)\n    { \n        msg.payload += '0';\n    }\n\n    for(var i = 0; i < vlow.length; i++)\n    { \n        msg.payload += vlow[i];\n    }\n}\nelse\n{\n    msg.enabled = false;\n    msg.background = 'grey';\n    msg.payload = '';\n    msg.change = null;\n    msg.set = null;\n//    msg.payload = msg.payload.toString();\n}\n\nmsg.topic = 5;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 2200,
        "wires": [
            [
                "d460703d.86ffe8",
                "111ef4bb.33e273"
            ]
        ]
    },
    {
        "id": "1c04be2f.98dae2",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "",
        "func": "var label = global.get('rcharge_label');\nvar change = global.get('rcharge_change');\nvar tooltip = global.get('rcharge_tooltip');\nvar set = global.get('rcharge_set');\n\nmsg.label = label;\nmsg.change = change;\nmsg.tooltip = tooltip;\nmsg.set = set;\n\nmsg.backspaces = 6;\nvar rcharge = String(msg.rcharge);\n\n// msg.payload = \"\" when masterID not selected yet\"\nif (msg.payload != '')\n{\n    msg.enabled = true;\n    msg.background = 'green';\n\n    msg.payload = '';\n    //padding before number\n    for(var j = 0; j < (msg.backspaces-rcharge.length); j++)\n    { \n        msg.payload += '0';\n    }\n\n    for(var i = 0; i < rcharge.length; i++)\n    { \n        msg.payload += rcharge[i];\n    }\n}\nelse\n{\n    msg.enabled = false;\n    msg.background = 'grey';\n    msg.payload = '';\n    msg.change = null;\n    msg.set = null;\n//    msg.payload = msg.payload.toString();\n    \n}\n\nmsg.topic = 6;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 2280,
        "wires": [
            [
                "6792f289.62d7d4",
                "de2e59c0.e825e8"
            ]
        ]
    },
    {
        "id": "3cb69028.38adb",
        "type": "change",
        "z": "3fb5a67.37c495a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "language1ID",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "b1aea487.6c0a1",
        "type": "change",
        "z": "3fb5a67.37c495a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "language1ID",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 580,
        "wires": [
            [
                "229d6248.15aa0e"
            ]
        ]
    },
    {
        "id": "676e7ab7.dadee4",
        "type": "delay",
        "z": "a66ad1ae.ff0e18",
        "name": "",
        "pauseType": "delay",
        "timeout": "8",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 460,
        "y": 1300,
        "wires": [
            [
                "3f959dd0.88cd62"
            ]
        ]
    },
    {
        "id": "ec3fdfd0.2a77f",
        "type": "delay",
        "z": "a66ad1ae.ff0e18",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 340,
        "y": 1380,
        "wires": [
            [
                "9ca8b0fa.9ad5d8"
            ]
        ]
    },
    {
        "id": "cc4fd54f.6558b",
        "type": "delay",
        "z": "a66ad1ae.ff0e18",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 340,
        "y": 1420,
        "wires": [
            [
                "199f9099.af8e5f"
            ]
        ]
    },
    {
        "id": "24f04687.b5ea1a",
        "type": "delay",
        "z": "a66ad1ae.ff0e18",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 340,
        "y": 1460,
        "wires": [
            [
                "d6519f5a.a2291"
            ]
        ]
    },
    {
        "id": "59315de8.64b4ac",
        "type": "delay",
        "z": "a66ad1ae.ff0e18",
        "name": "",
        "pauseType": "delay",
        "timeout": "4",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 340,
        "y": 1500,
        "wires": [
            [
                "54b1d069.2e098"
            ]
        ]
    },
    {
        "id": "9efbd77a.b8a96",
        "type": "delay",
        "z": "a66ad1ae.ff0e18",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 340,
        "y": 1540,
        "wires": [
            [
                "66931d33.549d3c"
            ]
        ]
    },
    {
        "id": "b327d4af.9f643",
        "type": "delay",
        "z": "a66ad1ae.ff0e18",
        "name": "",
        "pauseType": "delay",
        "timeout": "6",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 340,
        "y": 1580,
        "wires": [
            [
                "c4264afb.535ae"
            ]
        ]
    },
    {
        "id": "1f3b60b1.b34b6f",
        "type": "postgrestor",
        "z": "3fb5a67.37c495a",
        "name": "translations@localhost",
        "query": "SELECT \"{{msg.lang}}\" AS translated FROM translations_table\nWHERE en = 'Select language '\nORDER BY en  DESC\nLIMIT 1;\n\nSELECT \"{{msg.lang}}\" AS label FROM translations_table\nWHERE en = 'Master1 ID'\nORDER BY en  DESC\nLIMIT 1;",
        "postgresDB": "6787392.d78b7c8",
        "output": true,
        "outputs": 1,
        "x": 620,
        "y": 520,
        "wires": [
            [
                "15a0ee4b.2ff532"
            ]
        ]
    },
    {
        "id": "efb5c96f.59ba2",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "Selected default language",
        "func": "msg.lang = msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 520,
        "wires": [
            [
                "1f3b60b1.b34b6f"
            ]
        ]
    },
    {
        "id": "15a0ee4b.2ff532",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "Translations",
        "func": "\nmsg.label1 = msg.payload[0].rows[0].translated;\nmsg.label2 = msg.payload[1].rows[0].label;\n\nmsg.payload = msg.lang;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 520,
        "wires": [
            [
                "fe25f7a5.7b32",
                "229d6248.15aa0e"
            ]
        ]
    },
    {
        "id": "fd7c54f.cd630a8",
        "type": "comment",
        "z": "3fb5a67.37c495a",
        "name": "Language choice",
        "info": "",
        "x": 620,
        "y": 480,
        "wires": []
    },
    {
        "id": "42cca9bb.83e3",
        "type": "comment",
        "z": "3fb5a67.37c495a",
        "name": "Master choice",
        "info": "",
        "x": 730,
        "y": 640,
        "wires": []
    },
    {
        "id": "fe25f7a5.7b32",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "To be translated",
        "func": "var lang = global.get(\"language1ID\");\n//msg.lang = msg.payload;\n\nmsg.master_label = 'Master1 ID';\n\nmsg.sensorid_change = 'change sensor ID';\nmsg.sensorid_tooltip = 'between 0 and 240';\nmsg.sensorid_label = 'Sensor ID : ';\nmsg.sensorid_set = 'Set new ID';\n\nmsg.mperiod_change = 'change Measurement Period (secs)';\nmsg.mperiod_tooltip = 'between 5 and 16M secs';\nmsg.mperiod_label = 'Actual period : ';\nmsg.mperiod_set = 'Set new period';\n\nmsg.mwindow_change = 'change Measurement duration (secs)';\nmsg.mwindow_tooltip = 'between 1 and 4000 secs';\nmsg.mwindow_label = 'Measurement duration : ';\nmsg.mwindow_set = 'Set new duration';\n\nmsg.vhigh_change = 'change V High (mV)';\nmsg.vhigh_tooltip = 'between VLow and 3170 mVolt';\nmsg.vhigh_label = 'Actual High Voltage : ';\nmsg.vhigh_set = 'Set new value';\n\nmsg.vlow_change = 'change V Low (mV)';\nmsg.vlow_tooltip = 'between 10mV and VHigh';\nmsg.vlow_label = 'Actual Low Voltage : ';\nmsg.vlow_set = 'Set new value';\n\nmsg.rcharge_change = 'change Charging resistor (Ohm)';\nmsg.rcharge_tooltip = 'between 1 and 730000 Ohm';\nmsg.rcharge_label = 'Actual resistor : ';\nmsg.rcharge_set = 'Set new value';\n\nmsg.desc_change = 'change Description';\nmsg.desc_tooltip = 'Description of measurement setup';\nmsg.desc_label = 'Actual Description : ';\nmsg.desc_set = 'Set new description';\n\nmsg.noise_label = 'Actual noise value (mV) : ';\n\nmsg.maxnoise_label = 'Maximum noise value (mV) : ';\n\nmsg.sequence_label = 'Sequence : ';\n\nmsg.cap_label = 'Actual value : ';\n\nmsg.avgcap_label = 'Actual average : ';\n\nmsg.status1 = 'waiting ...';\nmsg.status2 = 'data reception';\nmsg.status3 = 'seconds';\nmsg.status0 = 'STATUS';\n\nmsg.log_start ='START LOGGING';\nmsg.log_stop ='STOP LOGGING';\nmsg.log_email = 'Enter email for sending log file';\nmsg.log_logging = 'Logging ...';\nmsg.log_file = 'log file from iSensPro gateway';\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 520,
        "wires": [
            [
                "aa1cc20a.6bd5e"
            ]
        ]
    },
    {
        "id": "aa1cc20a.6bd5e",
        "type": "postgrestor",
        "z": "3fb5a67.37c495a",
        "name": "translations@localhost",
        "query": "--master---------------------------------------------\nSELECT \"{{msg.lang}}\" AS master_label FROM translations_table\nWHERE en = '{{ msg.master_label }}'\nLIMIT 1;\n\n--sensorid---------------------------------------------\nSELECT \"{{msg.lang}}\" AS sensorid_change FROM translations_table\nWHERE en = '{{ msg.sensorid_change }}'\nLIMIT 1;\nSELECT \"{{msg.lang}}\" AS sensorid_tooltip FROM translations_table\nWHERE en = '{{ msg.sensorid_tooltip }}'\nLIMIT 1;\nSELECT \"{{msg.lang}}\" AS sensorid_label FROM translations_table\nWHERE en = '{{ msg.sensorid_label }}'\nLIMIT 1;\nSELECT \"{{msg.lang}}\" AS sensorid_set FROM translations_table\nWHERE en = '{{ msg.sensorid_set }}'\nLIMIT 1;\n\n--mperiod----------------------------------------------------------\nSELECT \"{{msg.lang}}\" AS mperiod_change FROM translations_table\nWHERE en = '{{ msg.mperiod_change }}'\nLIMIT 1;\nSELECT \"{{msg.lang}}\" AS mperiod_tooltip FROM translations_table\nWHERE en = '{{ msg.mperiod_tooltip }}'\nLIMIT 1;\nSELECT \"{{msg.lang}}\" AS mperiod_label FROM translations_table\nWHERE en = '{{ msg.mperiod_label }}'\nLIMIT 1;\nSELECT \"{{msg.lang}}\" AS mperiod_set FROM translations_table\nWHERE en = '{{ msg.mperiod_set }}'\nLIMIT 1;\n\n--mwindow----------------------------------------------------------\nSELECT \"{{msg.lang}}\" AS mwindow_change FROM translations_table\nWHERE en = '{{ msg.mwindow_change }}'\nLIMIT 1;\nSELECT \"{{msg.lang}}\" AS mwindow_tooltip FROM translations_table\nWHERE en = '{{ msg.mwindow_tooltip }}'\nLIMIT 1;\nSELECT \"{{msg.lang}}\" AS mwindow_label FROM translations_table\nWHERE en = '{{ msg.mwindow_label }}'\nLIMIT 1;\nSELECT \"{{msg.lang}}\" AS mwindow_set FROM translations_table\nWHERE en = '{{ msg.mwindow_set }}'\nLIMIT 1;\n\n--vhigh----------------------------------------------------------\nSELECT \"{{msg.lang}}\" AS vhigh_change FROM translations_table\nWHERE en = '{{ msg.vhigh_change }}'\nLIMIT 1;\nSELECT \"{{msg.lang}}\" AS vhigh_tooltip FROM translations_table\nWHERE en = '{{ msg.vhigh_tooltip }}'\nLIMIT 1;\nSELECT \"{{msg.lang}}\" AS vhigh_label FROM translations_table\nWHERE en = '{{ msg.vhigh_label }}'\nLIMIT 1;\nSELECT \"{{msg.lang}}\" AS vhigh_set FROM translations_table\nWHERE en = '{{ msg.vhigh_set }}'\nLIMIT 1;\n\n--vlow----------------------------------------------------------\nSELECT \"{{msg.lang}}\" AS vlow_change FROM translations_table\nWHERE en = '{{ msg.vlow_change }}'\nLIMIT 1;\nSELECT \"{{msg.lang}}\" AS vlow_tooltip FROM translations_table\nWHERE en = '{{ msg.vlow_tooltip }}'\nLIMIT 1;\nSELECT \"{{msg.lang}}\" AS vlow_label FROM translations_table\nWHERE en = '{{ msg.vlow_label }}'\nLIMIT 1;\nSELECT \"{{msg.lang}}\" AS vlow_set FROM translations_table\nWHERE en = '{{ msg.vlow_set }}'\nLIMIT 1;\n\n--rcharge----------------------------------------------------------\nSELECT \"{{msg.lang}}\" AS rcharge_change FROM translations_table\nWHERE en = '{{ msg.rcharge_change }}'\nLIMIT 1;\nSELECT \"{{msg.lang}}\" AS rcharge_tooltip FROM translations_table\nWHERE en = '{{ msg.rcharge_tooltip }}'\nLIMIT 1;\nSELECT \"{{msg.lang}}\" AS rcharge_label FROM translations_table\nWHERE en = '{{ msg.rcharge_label }}'\nLIMIT 1;\nSELECT \"{{msg.lang}}\" AS rcharge_set FROM translations_table\nWHERE en = '{{ msg.rcharge_set }}'\nLIMIT 1;\n\n--desc----------------------------------------------------------\nSELECT \"{{msg.lang}}\" AS desc_change FROM translations_table\nWHERE en = '{{ msg.desc_change }}'\nLIMIT 1;\nSELECT \"{{msg.lang}}\" AS desc_tooltip FROM translations_table\nWHERE en = '{{ msg.desc_tooltip }}'\nLIMIT 1;\nSELECT \"{{msg.lang}}\" AS desc_label FROM translations_table\nWHERE en = '{{ msg.desc_label }}'\nLIMIT 1;\nSELECT \"{{msg.lang}}\" AS desc_set FROM translations_table\nWHERE en = '{{ msg.desc_set }}'\nLIMIT 1;\n\n--maxnoise----------------------------------------------------------\nSELECT \"{{msg.lang}}\" AS maxnoise_label FROM translations_table\nWHERE en = '{{ msg.maxnoise_label }}'\nLIMIT 1;\n\n--noise----------------------------------------------------------\nSELECT \"{{msg.lang}}\" AS noise_label FROM translations_table\nWHERE en = '{{ msg.noise_label }}'\nLIMIT 1;\n\n--sequence----------------------------------------------------------\nSELECT \"{{msg.lang}}\" AS sequence_label FROM translations_table\nWHERE en = '{{ msg.sequence_label }}'\nLIMIT 1;\n\n--cap----------------------------------------------------------\nSELECT \"{{msg.lang}}\" AS cap_label FROM translations_table\nWHERE en = '{{ msg.cap_label }}'\nLIMIT 1;\n\n--avgcap----------------------------------------------------------\nSELECT \"{{msg.lang}}\" AS avgcap_label FROM translations_table\nWHERE en = '{{ msg.avgcap_label }}'\nLIMIT 1;\n\n--status1----------------------------------------------------------\nSELECT \"{{msg.lang}}\" AS status1 FROM translations_table\nWHERE en = '{{ msg.status1 }}'\nLIMIT 1;\n\n--status2----------------------------------------------------------\nSELECT \"{{msg.lang}}\" AS status2 FROM translations_table\nWHERE en = '{{ msg.status2 }}'\nLIMIT 1;\n\n--status3----------------------------------------------------------\nSELECT \"{{msg.lang}}\" AS status3 FROM translations_table\nWHERE en = '{{ msg.status3 }}'\nLIMIT 1;\n--status0----------------------------------------------------------\nSELECT \"{{msg.lang}}\" AS status0 FROM translations_table\nWHERE en = '{{ msg.status0 }}'\nLIMIT 1;\n\n--log_start----------------------------------------------------------\nSELECT \"{{msg.lang}}\" AS log_start FROM translations_table\nWHERE en = '{{ msg.log_start }}'\nLIMIT 1;\n--log_stop----------------------------------------------------------\nSELECT \"{{msg.lang}}\" AS log_stop FROM translations_table\nWHERE en = '{{ msg.log_stop }}'\nLIMIT 1;\n--log_email----------------------------------------------------------\nSELECT \"{{msg.lang}}\" AS log_email FROM translations_table\nWHERE en = '{{ msg.log_email }}'\nLIMIT 1;\n--log_logging----------------------------------------------------------\nSELECT \"{{msg.lang}}\" AS log_logging FROM translations_table\nWHERE en = '{{ msg.log_logging }}'\nLIMIT 1;\n--log_file----------------------------------------------------------\nSELECT \"{{msg.lang}}\" AS log_file FROM translations_table\nWHERE en = '{{ msg.log_file }}'\nLIMIT 1;",
        "postgresDB": "6787392.d78b7c8",
        "output": true,
        "outputs": 1,
        "x": 1240,
        "y": 520,
        "wires": [
            [
                "592ce377.5077cc",
                "6dbbb1ac.428cb8"
            ]
        ]
    },
    {
        "id": "592ce377.5077cc",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "Translations",
        "func": "//master---------------------------------------------\nglobal.set('master1_label',msg.payload[0].rows[0].master_label);\n\n//sensorid---------------------------------------------\nglobal.set('sensorid_change',msg.payload[1].rows[0].sensorid_change);\nglobal.set('sensorid_tooltip',msg.payload[2].rows[0].sensorid_tooltip);\nglobal.set('sensorid_label',msg.payload[3].rows[0].sensorid_label);\nglobal.set('sensorid_set',msg.payload[4].rows[0].sensorid_set);\n\n//mperiod----------------------------------------------------------\nglobal.set('mperiod_change',msg.payload[5].rows[0].mperiod_change);\nglobal.set('mperiod_tooltip',msg.payload[6].rows[0].mperiod_tooltip);\nglobal.set('mperiod_label',msg.payload[7].rows[0].mperiod_label);\nglobal.set('mperiod_set',msg.payload[8].rows[0].mperiod_set);\n\n//mwindow----------------------------------------------------------\nglobal.set('mwindow_change',msg.payload[9].rows[0].mwindow_change);\nglobal.set('mwindow_tooltip',msg.payload[10].rows[0].mwindow_tooltip);\nglobal.set('mwindow_label',msg.payload[11].rows[0].mwindow_label);\nglobal.set('mwindow_set',msg.payload[12].rows[0].mwindow_set);\n\n//vhigh----------------------------------------------------------\nglobal.set('vhigh_change',msg.payload[13].rows[0].vhigh_change);\nglobal.set('vhigh_tooltip',msg.payload[14].rows[0].vhigh_tooltip);\nglobal.set('vhigh_label',msg.payload[15].rows[0].vhigh_label);\nglobal.set('vhigh_set',msg.payload[16].rows[0].vhigh_set);\n\n//vlow----------------------------------------------------------\nglobal.set('vlow_change',msg.payload[17].rows[0].vlow_change);\nglobal.set('vlow_tooltip',msg.payload[18].rows[0].vlow_tooltip);\nglobal.set('vlow_label',msg.payload[19].rows[0].vlow_label);\nglobal.set('vlow_set',msg.payload[20].rows[0].vlow_set);\n\n//rcharge----------------------------------------------------------\nglobal.set('rcharge_change',msg.payload[21].rows[0].rcharge_change);\nglobal.set('rcharge_tooltip',msg.payload[22].rows[0].rcharge_tooltip);\nglobal.set('rcharge_label',msg.payload[23].rows[0].rcharge_label);\nglobal.set('rcharge_set',msg.payload[24].rows[0].rcharge_set);\n\n//desc----------------------------------------------------------\nglobal.set('desc_change',msg.payload[25].rows[0].desc_change);\nglobal.set('desc_tooltip',msg.payload[26].rows[0].desc_tooltip);\nglobal.set('desc_label',msg.payload[27].rows[0].desc_label);\nglobal.set('desc_set',msg.payload[28].rows[0].desc_set);\n\n//maxnoise----------------------------------------------------------\nglobal.set('maxnoise_label',msg.payload[29].rows[0].maxnoise_label);\n\n//noise----------------------------------------------------------\nglobal.set('noise_label',msg.payload[30].rows[0].noise_label);\n\n//sequence----------------------------------------------------------\nglobal.set('sequence_label',msg.payload[31].rows[0].sequence_label);\n\n//cap----------------------------------------------------------\nglobal.set('cap_label',msg.payload[32].rows[0].cap_label);\n\n//avgcap----------------------------------------------------------\nglobal.set('avgcap_label',msg.payload[33].rows[0].avgcap_label);\n\n//status1----------------------------------------------------------\nglobal.set('status1',msg.payload[34].rows[0].status1);\n\n//status2----------------------------------------------------------\nglobal.set('status2',msg.payload[35].rows[0].status2);\n\n//status3----------------------------------------------------------\nglobal.set('status3',msg.payload[36].rows[0].status3);\n\n//status0----------------------------------------------------------\nglobal.set('status0',msg.payload[37].rows[0].status0);\n\n//log_start----------------------------------------------------------\nglobal.set('log_start',msg.payload[38].rows[0].log_start);\n\n//log_stop----------------------------------------------------------\nglobal.set('log_stop',msg.payload[39].rows[0].log_stop);\n\n//log_email----------------------------------------------------------\nglobal.set('log_email',msg.payload[40].rows[0].log_email);\n\n//log_logging----------------------------------------------------------\nglobal.set('log_logging',msg.payload[41].rows[0].log_logging);\n\n//log_logging----------------------------------------------------------\nglobal.set('log_file',msg.payload[42].rows[0].log_file);\n\n//msg.payload = \"\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1450,
        "y": 520,
        "wires": [
            [
                "8a658423.c1bb08",
                "99301a14.9fa72"
            ]
        ]
    },
    {
        "id": "d425b770.1ed9d",
        "type": "debug",
        "z": "3fb5a67.37c495a",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1150,
        "y": 660,
        "wires": []
    },
    {
        "id": "2d1838df.0d4f2",
        "type": "inject",
        "z": "3fb5a67.37c495a",
        "name": "init",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "en",
        "payloadType": "str",
        "x": 170,
        "y": 560,
        "wires": [
            [
                "efb5c96f.59ba2",
                "b1aea487.6c0a1"
            ]
        ]
    },
    {
        "id": "8a658423.c1bb08",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "Reset MasterID & set options",
        "func": "// show translated MasterID\nvar master_label = global.get('master1_label');\nmsg.master_label = master_label;\n\n\n// connected devices\nvar device0 = global.get('device0');\nvar device1 = global.get('device1');\nvar device2 = global.get('device2');\n\n\n//configs for empty selection\n// mperiod\nmsg.mperiod = 0;\n// mwindow\nmsg.mwindow = 0;\n// vhigh\nmsg.vhigh = 0;\n// vlow\nmsg.vlow = 0;\n// rcharge\nmsg.rcharge = 0;\n// description\nmsg.description = 'undefined';\n\n// when language selected, reset master ID\nmsg.payload = '';\nmsg.options = [device0,device1,device2];\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 680,
        "wires": [
            [
                "f93d3e8f.3d8778",
                "a4b1082e.061d48"
            ]
        ]
    },
    {
        "id": "a4b1082e.061d48",
        "type": "link out",
        "z": "3fb5a67.37c495a",
        "name": "",
        "links": [
            "7e8ec8e8.972498",
            "a018cb9c.3ea22",
            "eb349368.ef836",
            "1f33aeda.ad4039",
            "b7e8b958.e2d9b8",
            "524f8eff.0b5fe",
            "93d7b3e6.9b3438",
            "362e2158.6d4b26",
            "27a674ae.0022e4",
            "b51be3ae.b31ab",
            "a41679ce.1a43",
            "4196e87e.c6864",
            "f8f12511.f2a9b8",
            "54d1529.cd471ac"
        ],
        "x": 1435,
        "y": 580,
        "wires": []
    },
    {
        "id": "7e8ec8e8.972498",
        "type": "link in",
        "z": "3fb5a67.37c495a",
        "name": "",
        "links": [
            "a4b1082e.061d48"
        ],
        "x": 335,
        "y": 1860,
        "wires": [
            [
                "75dddb0.63096a4"
            ]
        ]
    },
    {
        "id": "75dddb0.63096a4",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "",
        "func": "var label = global.get('sensorid_label');\n//var change = global.get('sensorid_change');\nvar change = '';\nvar tooltip = global.get('sensorid_tooltip');\nvar set = global.get('sensorid_set');\n\nmsg.label = label;\nmsg.change = change;\nmsg.tooltip = tooltip;\nmsg.set = set;\n\nmsg.enabled = false;\nmsg.backspaces = 3;\n\nvar sensorid = String(msg.sensorid);\n\n// msg.payload = \"\" when masterID not selected yet\"\nif (msg.payload != '')\n{\n    msg.payload = '';\n}\nelse\n{\n    msg.payload = '';\n    msg.change = null;\n    msg.set = null;\n}\n\n//msg.payload = msg.payload.toString();\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 1880,
        "wires": [
            [
                "32b898b.df952e8",
                "e9b447bf.24ac58"
            ]
        ]
    },
    {
        "id": "227659b0.ea0b0e",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "translations",
        "func": "var label = global.get('mperiod_label');\nvar change = global.get('mperiod_change');\nvar tooltip = global.get('mperiod_tooltip');\nvar set = global.get('mperiod_set');\n\nmsg.label = label;\nmsg.change = change;\nmsg.tooltip = tooltip;\nmsg.set = set;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1920,
        "wires": [
            [
                "63f9d66e.7b49b"
            ]
        ]
    },
    {
        "id": "a018cb9c.3ea22",
        "type": "link in",
        "z": "3fb5a67.37c495a",
        "name": "",
        "links": [
            "a4b1082e.061d48"
        ],
        "x": 335,
        "y": 1960,
        "wires": [
            [
                "bd7748c5.1705f8"
            ]
        ]
    },
    {
        "id": "70ed7170.d90e38",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "translations",
        "func": "var label = global.get('mwindow_label');\nvar change = global.get('mwindow_change');\nvar tooltip = global.get('mwindow_tooltip');\nvar set = global.get('mwindow_set');\n\nmsg.label = label;\nmsg.change = change;\nmsg.tooltip = tooltip;\nmsg.set = set;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 2000,
        "wires": [
            [
                "e31e4144.4eb278"
            ]
        ]
    },
    {
        "id": "eb349368.ef836",
        "type": "link in",
        "z": "3fb5a67.37c495a",
        "name": "",
        "links": [
            "a4b1082e.061d48"
        ],
        "x": 335,
        "y": 2040,
        "wires": [
            [
                "32bdb2ea.712cb6"
            ]
        ]
    },
    {
        "id": "f996ad86.32d81",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "translations",
        "func": "var label = global.get('vhigh_label');\nvar change = global.get('vhigh_change');\nvar tooltip = global.get('vhigh_tooltip');\nvar set = global.get('vhigh_set');\n\nmsg.label = label;\nmsg.change = change;\nmsg.tooltip = tooltip;\nmsg.set = set;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 2080,
        "wires": [
            [
                "d59e10ae.bcf648"
            ]
        ]
    },
    {
        "id": "1f33aeda.ad4039",
        "type": "link in",
        "z": "3fb5a67.37c495a",
        "name": "",
        "links": [
            "a4b1082e.061d48"
        ],
        "x": 335,
        "y": 2120,
        "wires": [
            [
                "1552ea08.727bee"
            ]
        ]
    },
    {
        "id": "111ef4bb.33e273",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "translations",
        "func": "var label = global.get('vlow_label');\nvar change = global.get('vlow_change');\nvar tooltip = global.get('vlow_tooltip');\nvar set = global.get('vlow_set');\n\nmsg.label = label;\nmsg.change = change;\nmsg.tooltip = tooltip;\nmsg.set = set;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 2160,
        "wires": [
            [
                "f4629d6f.602868"
            ]
        ]
    },
    {
        "id": "de2e59c0.e825e8",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "translations",
        "func": "var label = global.get('rcharge_label');\nvar change = global.get('rcharge_change');\nvar tooltip = global.get('rcharge_tooltip');\nvar set = global.get('rcharge_set');\n\nmsg.label = label;\nmsg.change = change;\nmsg.tooltip = tooltip;\nmsg.set = set;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 2240,
        "wires": [
            [
                "6be38186.0c759"
            ]
        ]
    },
    {
        "id": "fea77453.727b48",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "translations",
        "func": "var label = global.get('noise_label');\n\nmsg.label = label;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 2480,
        "wires": [
            [
                "a7188d1d.89f8a8"
            ]
        ]
    },
    {
        "id": "36749289.c99cde",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "translations",
        "func": "var label = global.get('maxnoise_label');\n\nmsg.label = label;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 2540,
        "wires": [
            [
                "fe217ba8.cb07a"
            ]
        ]
    },
    {
        "id": "8f69284d.59fe38",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "translations",
        "func": "var label = global.get('sequence_label');\n\nmsg.label = label;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 2600,
        "wires": [
            [
                "4b6aa6bc.9fae38"
            ]
        ]
    },
    {
        "id": "c013982a.cf6248",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "translations",
        "func": "var status0 = global.get('status0');\nvar status1 = global.get('status1');\nvar status2 = global.get('status2');\nvar status3 = global.get('status3');\n\nmsg.status0 = status0;\nmsg.status1 = status1;\nmsg.status2 = status2;\nmsg.status3 = status3;\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 2660,
        "wires": [
            [
                "c380e12b.d7ed1"
            ]
        ]
    },
    {
        "id": "dfbefc3.9ba7",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "translations",
        "func": "var label = global.get('cap_label');\nmsg.label = label;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 2700,
        "wires": [
            [
                "39f77f8a.4d56d8"
            ]
        ]
    },
    {
        "id": "e38c221e.374eb",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "translations",
        "func": "var label = global.get('avgcap_label');\n\nmsg.label = label;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 2760,
        "wires": [
            [
                "8fa3a30b.7e3858"
            ]
        ]
    },
    {
        "id": "b7e8b958.e2d9b8",
        "type": "link in",
        "z": "3fb5a67.37c495a",
        "name": "",
        "links": [
            "a4b1082e.061d48"
        ],
        "x": 335,
        "y": 2200,
        "wires": [
            [
                "c1c56d91.222cb8"
            ]
        ]
    },
    {
        "id": "524f8eff.0b5fe",
        "type": "link in",
        "z": "3fb5a67.37c495a",
        "name": "",
        "links": [
            "a4b1082e.061d48"
        ],
        "x": 335,
        "y": 2280,
        "wires": [
            [
                "1c04be2f.98dae2"
            ]
        ]
    },
    {
        "id": "804a3896.233a2",
        "type": "postgrestor",
        "z": "3fb5a67.37c495a",
        "name": "sensor_config@localhost",
        "query": "-- last configuration of the master\n-- mperiod \nSELECT measperiod AS lastconfig FROM sensor_config_table\nWHERE masterid = '{{{ msg.payload }}}' AND measperiod IS NOT NULL\nORDER BY ts  DESC\nLIMIT 1;\n\n-- mwindow\nSELECT meastime AS lastconfig FROM sensor_config_table\nWHERE masterid = '{{{ msg.payload }}}' AND meastime IS NOT NULL\nORDER BY ts  DESC\nLIMIT 1;\n\n-- vhigh\nSELECT vhigh AS lastconfig FROM sensor_config_table\nWHERE masterid = '{{{ msg.payload }}}' AND vhigh IS NOT NULL\nORDER BY ts  DESC\nLIMIT 1;\n\n-- vlow\nSELECT vlow AS lastconfig FROM sensor_config_table\nWHERE masterid = '{{{ msg.payload }}}' AND vlow IS NOT NULL\nORDER BY ts  DESC\nLIMIT 1;\n\n--rcharge\nSELECT rcharge AS lastconfig FROM sensor_config_table\nWHERE masterid = '{{{ msg.payload }}}' AND rcharge IS NOT NULL\nORDER BY ts  DESC\nLIMIT 1;\n\n--description\nSELECT description AS lastconfig FROM sensor_config_table\nWHERE masterid = '{{{ msg.payload }}}' AND description IS NOT NULL\nORDER BY ts  DESC\nLIMIT 1;\n",
        "postgresDB": "6733d493.9cca6c",
        "output": true,
        "outputs": 1,
        "x": 950,
        "y": 700,
        "wires": [
            [
                "d425b770.1ed9d",
                "7a663a5b.e5472c"
            ]
        ]
    },
    {
        "id": "7a663a5b.e5472c",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "Last configs",
        "func": "\n//var masterid = flow.get('master1ID')\n//msg.masterid = masterid;\n\n// mperiod\nmsg.mperiod = msg.payload[0].rows[0].lastconfig;\n\n// mwindow\nmsg.mwindow = msg.payload[1].rows[0].lastconfig;\n\n// vhigh\nmsg.vhigh = msg.payload[2].rows[0].lastconfig;\n\n// vlow\nmsg.vlow = msg.payload[3].rows[0].lastconfig;\n\n// rcharge\nmsg.rcharge = msg.payload[4].rows[0].lastconfig;\n\n// description\nmsg.description = msg.payload[5].rows[0].lastconfig;\n\n// msg.payload = '';\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 700,
        "wires": [
            [
                "9f616e80.a35118",
                "a4b1082e.061d48"
            ]
        ]
    },
    {
        "id": "9f616e80.a35118",
        "type": "debug",
        "z": "3fb5a67.37c495a",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1390,
        "y": 700,
        "wires": []
    },
    {
        "id": "93d7b3e6.9b3438",
        "type": "link in",
        "z": "3fb5a67.37c495a",
        "name": "",
        "links": [
            "a4b1082e.061d48"
        ],
        "x": 315,
        "y": 2400,
        "wires": [
            [
                "7508d564.810eb4"
            ]
        ]
    },
    {
        "id": "91853a8c.c60ab",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "translations",
        "func": "var label = global.get('desc_label');\nvar change = global.get('desc_change');\nvar tooltip = global.get('desc_tooltip');\nvar set = global.get('desc_set');\n\nmsg.label = label;\nmsg.change = change;\nmsg.tooltip = tooltip;\nmsg.set = set;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 2360,
        "wires": [
            [
                "ee93e906.a4454"
            ]
        ]
    },
    {
        "id": "7508d564.810eb4",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "set variable",
        "func": "var label = global.get('desc_label');\nvar change = global.get('desc_change');\nvar tooltip = global.get('desc_tooltip');\nvar set = global.get('desc_set');\n\nmsg.label = label;\nmsg.change = change;\nmsg.tooltip = tooltip;\nmsg.set = set;\n\n// msg.payload = \"\" when masterID not selected yet\"\nif (msg.payload != '')\n{\n    msg.enabled = true;\n//    msg.background = 'green'; not a topic\n    msg.change = change;\n    msg.label = label;\n    msg.payload = msg.description;\n    flow.set('descriptionM1',msg.payload);\n}\n//when master selected for first time\nelse\n{\n    msg.enabled = false;\n//    msg.background = 'grey'; not a topic\n    msg.change = null;\n// default value are always there when USB started\n    msg.payload = '';\n    flow.set('descriptionM1',msg.payload);\n    msg.set = null;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 2400,
        "wires": [
            [
                "91853a8c.c60ab",
                "a63a6e6e.c3f828"
            ]
        ]
    },
    {
        "id": "ee93e906.a4454",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "Description",
        "func": "// get latest flow variable\nvar description = flow.get('descriptionM1');\nvar ID = flow.get('master1ID');\nvar change = global.get('desc_change');\n\nif (msg.payload == 'default config')\n{\n //   msg.payload = description;\n    msg.enabled = false;\n    msg.change = null;\n    msg.label = '';\n    msg.payload = null;\n}\nelse\n{\n    if (ID != '')\n    {\n        msg.enabled = true;\n        msg.change = change;\n        msg.payload = description;\n    }\n    else \n    {\n        msg.enabled = false;\n        msg.change = null;\n        msg.label = '';\n        msg.payload = '';\n    }\n}\n// background is not a topic of this widget\n//msg.background = 'green';\n\nmsg.topic = 7;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 2360,
        "wires": [
            [
                "f79cdec1.a2e858"
            ]
        ]
    },
    {
        "id": "362e2158.6d4b26",
        "type": "link in",
        "z": "3fb5a67.37c495a",
        "name": "",
        "links": [
            "a4b1082e.061d48"
        ],
        "x": 335,
        "y": 2480,
        "wires": [
            [
                "fea77453.727b48"
            ]
        ]
    },
    {
        "id": "27a674ae.0022e4",
        "type": "link in",
        "z": "3fb5a67.37c495a",
        "name": "",
        "links": [
            "a4b1082e.061d48"
        ],
        "x": 335,
        "y": 2540,
        "wires": [
            [
                "36749289.c99cde"
            ]
        ]
    },
    {
        "id": "b51be3ae.b31ab",
        "type": "link in",
        "z": "3fb5a67.37c495a",
        "name": "",
        "links": [
            "a4b1082e.061d48"
        ],
        "x": 335,
        "y": 2600,
        "wires": [
            [
                "8f69284d.59fe38"
            ]
        ]
    },
    {
        "id": "a41679ce.1a43",
        "type": "link in",
        "z": "3fb5a67.37c495a",
        "name": "",
        "links": [
            "a4b1082e.061d48"
        ],
        "x": 335,
        "y": 2700,
        "wires": [
            [
                "dfbefc3.9ba7"
            ]
        ]
    },
    {
        "id": "4196e87e.c6864",
        "type": "link in",
        "z": "3fb5a67.37c495a",
        "name": "",
        "links": [
            "a4b1082e.061d48"
        ],
        "x": 335,
        "y": 2760,
        "wires": [
            [
                "e38c221e.374eb"
            ]
        ]
    },
    {
        "id": "b599ddb1.cf46",
        "type": "ui_template",
        "z": "3fb5a67.37c495a",
        "group": "92957720.d414",
        "name": "drawing2M1",
        "order": 9,
        "width": 6,
        "height": 3,
        "format": "\n \n <img width=\"100%\" height=\"100%\" alt=\"Image not found\" src=\"data:image/png;base64,{{msg.payload}}\" />\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 890,
        "y": 2860,
        "wires": [
            []
        ]
    },
    {
        "id": "b5dd372f.28786",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "msg.filename",
        "func": "msg.filename = \"/home/nuci3/Desktop/PNG Tekeningen2.png\";\nreturn msg;\n    \n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 2860,
        "wires": [
            [
                "4aa5e8d7.45b028"
            ]
        ]
    },
    {
        "id": "e95c6a9b.2f8a48",
        "type": "inject",
        "z": "3fb5a67.37c495a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 310,
        "y": 2860,
        "wires": [
            [
                "b5dd372f.28786"
            ]
        ]
    },
    {
        "id": "4aa5e8d7.45b028",
        "type": "file in",
        "z": "3fb5a67.37c495a",
        "name": "",
        "filename": "",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 590,
        "y": 2860,
        "wires": [
            [
                "30287559.f8a95a"
            ]
        ]
    },
    {
        "id": "30287559.f8a95a",
        "type": "base64",
        "z": "3fb5a67.37c495a",
        "name": "",
        "action": "str",
        "property": "payload",
        "x": 740,
        "y": 2860,
        "wires": [
            [
                "b599ddb1.cf46"
            ]
        ]
    },
    {
        "id": "99301a14.9fa72",
        "type": "debug",
        "z": "3fb5a67.37c495a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1630,
        "y": 500,
        "wires": []
    },
    {
        "id": "f8f12511.f2a9b8",
        "type": "link in",
        "z": "3fb5a67.37c495a",
        "name": "",
        "links": [
            "a4b1082e.061d48"
        ],
        "x": 335,
        "y": 2660,
        "wires": [
            [
                "c013982a.cf6248"
            ]
        ]
    },
    {
        "id": "8db4d0fa.ca3f48",
        "type": "postgrestor",
        "z": "3fb5a67.37c495a",
        "name": "sensor_config@localhost",
        "query": "INSERT INTO sensor_config_table \n(\n    sensorid,\t\n    masterid\n    \n) VALUES\n(\n    '{{msg.sensorid}}',\n    '{{{msg.masterid}}}'\n);",
        "postgresDB": "6733d493.9cca6c",
        "output": true,
        "outputs": 1,
        "x": 1630,
        "y": 1840,
        "wires": [
            []
        ]
    },
    {
        "id": "b5676994.def7b8",
        "type": "postgrestor",
        "z": "3fb5a67.37c495a",
        "name": "sensor_config@localhost",
        "query": "INSERT INTO sensor_config_table \n(\n\tmeasperiod,\n\tmasterid,\n\tsensorid\n\t\n) VALUES\n(\n    '{{msg.mperiod}}',\n    '{{{msg.masterid}}}',\n    '{{msg.sensorid}}'\n);",
        "postgresDB": "6733d493.9cca6c",
        "output": true,
        "outputs": 1,
        "x": 1610,
        "y": 1920,
        "wires": [
            [
                "83412c8c.b9dc98"
            ]
        ]
    },
    {
        "id": "a528b21c.f2adb",
        "type": "postgrestor",
        "z": "3fb5a67.37c495a",
        "name": "sensor_config@localhost",
        "query": "INSERT INTO sensor_config_table \n(\n\tmeastime,\n\tmasterid,\n\tsensorid\n\n) VALUES\n(\n    '{{msg.mwindow}}',\n    '{{{msg.masterid}}}',\n    '{{msg.sensorid}}'\n);",
        "postgresDB": "6733d493.9cca6c",
        "output": true,
        "outputs": 1,
        "x": 1610,
        "y": 2000,
        "wires": [
            [
                "83412c8c.b9dc98"
            ]
        ]
    },
    {
        "id": "4e11726b.a3a00c",
        "type": "postgrestor",
        "z": "3fb5a67.37c495a",
        "name": "sensor_config@localhost",
        "query": "INSERT INTO sensor_config_table \n(\n\tvhigh,\n\tmasterid,\n\tsensorid\n\t\n) VALUES\n(\n    '{{msg.vhigh}}',\n    '{{{msg.masterid}}}',\n    '{{msg.sensorid}}'\n);",
        "postgresDB": "6733d493.9cca6c",
        "output": true,
        "outputs": 1,
        "x": 1610,
        "y": 2080,
        "wires": [
            [
                "83412c8c.b9dc98"
            ]
        ]
    },
    {
        "id": "8c4aa898.71fb88",
        "type": "postgrestor",
        "z": "3fb5a67.37c495a",
        "name": "sensor_config@localhost",
        "query": "INSERT INTO sensor_config_table \n\n\tvlow,\n\tmasterid,\n\tsensorid\n\t\n) VALUES\n(\n    '{{msg.vlow}}',\n    '{{{msg.masterid}}}',\n    '{{msg.sensorid}}'\n);",
        "postgresDB": "6733d493.9cca6c",
        "output": true,
        "outputs": 1,
        "x": 1610,
        "y": 2160,
        "wires": [
            [
                "83412c8c.b9dc98"
            ]
        ]
    },
    {
        "id": "3616d616.87d2d2",
        "type": "postgrestor",
        "z": "3fb5a67.37c495a",
        "name": "sensor_config@localhost",
        "query": "INSERT INTO sensor_config_table \n(\n\n\trcharge,\n\tmasterid,\n\tsensorid\n\n) VALUES\n(\n    '{{msg.rcharge}}',\n    '{{{msg.masterid}}}',\n    '{{msg.sensorid}}'\n);",
        "postgresDB": "6733d493.9cca6c",
        "output": true,
        "outputs": 1,
        "x": 1610,
        "y": 2240,
        "wires": [
            [
                "83412c8c.b9dc98"
            ]
        ]
    },
    {
        "id": "20728353.5a9354",
        "type": "postgrestor",
        "z": "3fb5a67.37c495a",
        "name": "sensor_config@localhost",
        "query": "INSERT INTO sensor_config_table \n(\n\n\tdescription,\n\tmasterid,\n\tsensorid\n) VALUES\n(\n    '{{msg.description}}',\n    '{{{msg.masterid}}}',\n    '{{{msg.sensorid}}}'\n);",
        "postgresDB": "6733d493.9cca6c",
        "output": true,
        "outputs": 1,
        "x": 1610,
        "y": 2400,
        "wires": [
            [
                "83412c8c.b9dc98"
            ]
        ]
    },
    {
        "id": "a936ca50.08ecb",
        "type": "change",
        "z": "3fb5a67.37c495a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "descriptionM1",
                "pt": "flow",
                "to": "topic",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1400,
        "y": 2360,
        "wires": [
            []
        ]
    },
    {
        "id": "f4bf6a54.619718",
        "type": "change",
        "z": "3fb5a67.37c495a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "device0",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 1000,
        "wires": [
            [
                "638becee.ac7084"
            ]
        ]
    },
    {
        "id": "88ce6c66.746dc",
        "type": "change",
        "z": "3fb5a67.37c495a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "device1",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 1100,
        "wires": [
            [
                "491d16d6.09384"
            ]
        ]
    },
    {
        "id": "a02d56b5.4d928",
        "type": "change",
        "z": "3fb5a67.37c495a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "device2",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 1200,
        "wires": [
            [
                "3a6f0db1.7824d2"
            ]
        ]
    },
    {
        "id": "79c42692.a3c8a8",
        "type": "comment",
        "z": "3fb5a67.37c495a",
        "name": "parameter configuration (part 1)",
        "info": "",
        "x": 190,
        "y": 1760,
        "wires": []
    },
    {
        "id": "1de86f9e.b13068",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "Prepare for dbase",
        "func": "\nvar masterid = flow.get('master1ID');\nvar sensorid = flow.get('sensorIDM1');\n\nif (msg.payload == 'confirm')\n{\n    msg.masterid = masterid;\n    msg.sensorid = sensorid;\n    msg.description = msg.topic;\n}\nelse\n{\n    \n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1390,
        "y": 2400,
        "wires": [
            [
                "20728353.5a9354",
                "f934fcb9.229cf8"
            ]
        ]
    },
    {
        "id": "45f25d96.e90d74",
        "type": "postgrestor",
        "z": "3fb5a67.37c495a",
        "name": "sensor_config@localhost",
        "query": "-- last configuration of the master\n-- mperiod \nSELECT measperiod AS lastconfig FROM sensor_config_table\nWHERE masterid = '{{{ msg.topic }}}' AND measperiod IS NOT NULL\nORDER BY ts  DESC\nLIMIT 1;\n\n-- mwindow\nSELECT meastime AS lastconfig FROM sensor_config_table\nWHERE masterid = '{{{ msg.topic }}}' AND meastime IS NOT NULL\nORDER BY ts  DESC\nLIMIT 1;\n\n-- vhigh\nSELECT vhigh AS lastconfig FROM sensor_config_table\nWHERE masterid = '{{{ msg.topic }}}' AND vhigh IS NOT NULL\nORDER BY ts  DESC\nLIMIT 1;\n\n-- vlow\nSELECT vlow AS lastconfig FROM sensor_config_table\nWHERE masterid = '{{{ msg.topic }}}' AND vlow IS NOT NULL\nORDER BY ts  DESC\nLIMIT 1;\n\n--rcharge\nSELECT rcharge AS lastconfig FROM sensor_config_table\nWHERE masterid = '{{{ msg.topic }}}' AND rcharge IS NOT NULL\nORDER BY ts  DESC\nLIMIT 1;\n\n--description\nSELECT description AS lastconfig FROM sensor_config_table\nWHERE masterid = '{{{ msg.topic }}}' AND description IS NOT NULL\nORDER BY ts  DESC\nLIMIT 1;\n",
        "postgresDB": "6733d493.9cca6c",
        "output": true,
        "outputs": 1,
        "x": 1670,
        "y": 1040,
        "wires": [
            [
                "cc86b8c9.6d335"
            ]
        ]
    },
    {
        "id": "cc86b8c9.6d335",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "Last description",
        "func": "// description\nmsg.description = msg.payload[5].rows[0].lastconfig;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1880,
        "y": 1040,
        "wires": [
            [
                "c9c084a.aa364f8"
            ]
        ]
    },
    {
        "id": "d5de4764.e839c",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "",
        "func": "var label = global.get('log_email');\n\nvar masterid = flow.get('master1ID');\n\nif (msg.payload != '')\n{\n    msg.enabled = true;\n    msg.background = 'green';\n    msg.log_label = label;\n    msg.payload = '';\n}\nelse\n{\n    msg.enabled = false;\n    msg.background = 'grey';\n    msg.payload = ' ';\n    msg.log_label = '';\n}\n\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 1400,
        "wires": [
            [
                "5c2b98c5.0b8918"
            ]
        ]
    },
    {
        "id": "aae04f08.2e52d8",
        "type": "ui_template",
        "z": "3fb5a67.37c495a",
        "group": "f12df54.fdd1f08",
        "name": "drawing3M1",
        "order": 10,
        "width": 6,
        "height": 3,
        "format": "\n \n <img width=\"100%\" height=\"100%\" alt=\"Image not found\" src=\"data:image/png;base64,{{msg.payload}}\" />\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 890,
        "y": 2920,
        "wires": [
            []
        ]
    },
    {
        "id": "8aa63d86.58a968",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "msg.filename",
        "func": "msg.filename = \"/home/nuci3/Desktop/PNG Tekeningen3.png\";\nreturn msg;\n    \n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 2920,
        "wires": [
            [
                "9d843f9e.902848"
            ]
        ]
    },
    {
        "id": "648f2e6d.ad6c98",
        "type": "inject",
        "z": "3fb5a67.37c495a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 310,
        "y": 2920,
        "wires": [
            [
                "8aa63d86.58a968"
            ]
        ]
    },
    {
        "id": "9d843f9e.902848",
        "type": "file in",
        "z": "3fb5a67.37c495a",
        "name": "",
        "filename": "",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 590,
        "y": 2920,
        "wires": [
            [
                "4fd089ac.42ffa8"
            ]
        ]
    },
    {
        "id": "4fd089ac.42ffa8",
        "type": "base64",
        "z": "3fb5a67.37c495a",
        "name": "",
        "action": "str",
        "property": "payload",
        "x": 740,
        "y": 2920,
        "wires": [
            [
                "aae04f08.2e52d8"
            ]
        ]
    },
    {
        "id": "1b1f0c4a.4e110c",
        "type": "ui_template",
        "z": "3fb5a67.37c495a",
        "group": "f12df54.fdd1f08",
        "name": "logo2M1",
        "order": 2,
        "width": 6,
        "height": 2,
        "format": "\n \n <img width=\"100%\" height=\"1OO%\" alt=\"Image not found\" src=\"data:image/png;base64,{{msg.payload}}\" />\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 880,
        "y": 2800,
        "wires": [
            []
        ]
    },
    {
        "id": "54d1529.cd471ac",
        "type": "link in",
        "z": "3fb5a67.37c495a",
        "name": "",
        "links": [
            "a4b1082e.061d48"
        ],
        "x": 675,
        "y": 1400,
        "wires": [
            [
                "d5de4764.e839c",
                "6357e3bc.d7df74"
            ]
        ]
    },
    {
        "id": "6dbbb1ac.428cb8",
        "type": "debug",
        "z": "3fb5a67.37c495a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1450,
        "y": 460,
        "wires": []
    },
    {
        "id": "229d6248.15aa0e",
        "type": "ui_dropdown",
        "z": "3fb5a67.37c495a",
        "name": "",
        "label": "{{msg.label1}}",
        "tooltip": "",
        "place": "",
        "group": "92957720.d414",
        "order": 1,
        "width": "6",
        "height": "2",
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "English",
                "value": "en",
                "type": "str"
            },
            {
                "label": "Deutsch",
                "value": "de",
                "type": "str"
            },
            {
                "label": "Français",
                "value": "fr",
                "type": "str"
            },
            {
                "label": "Nederlands",
                "value": "nl",
                "type": "str"
            },
            {
                "label": "日本 ",
                "value": "jp",
                "type": "str"
            },
            {
                "label": "svenska",
                "value": "sw",
                "type": "str"
            },
            {
                "label": "suomen",
                "value": "fi",
                "type": "str"
            },
            {
                "label": "русский",
                "value": "ru",
                "type": "str"
            },
            {
                "label": "عربى",
                "value": "ar",
                "type": "str"
            },
            {
                "label": "norsk",
                "value": "no",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "x": 620,
        "y": 580,
        "wires": [
            [
                "3cb69028.38adb",
                "efb5c96f.59ba2"
            ]
        ]
    },
    {
        "id": "99612a9b.e34d88",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "Change sensor ID (1)",
        "func": "msg.return_start = 1;\nmsg.return_end = 13;\nmsg.backspaces = 3;\n\n// reset max noise level\nflow.set('maxnoiseM2',0);\n\nmsg.newvalue = '';\n\nvar sensorid = String(flow.get('sensorIDM2'));\n\n//padding before number\nfor(var j = 0; j < (msg.backspaces-sensorid.length); j++)\n{ \n    msg.newvalue += '0';\n}\n\n\nfor(var i = 0; i < sensorid.length; i++)\n{ \n    msg.newvalue += sensorid[i];\n}\n\nmsg.newvalue = msg.newvalue.toString();\nmsg.topic = 1;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1500,
        "y": 3940,
        "wires": [
            [
                "c1f65286.f10498"
            ]
        ]
    },
    {
        "id": "ec24885b.81715",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "Change measurement period (2)",
        "func": "msg.return_start = 2;\nmsg.return_end = 12;\nmsg.backspaces = 5;\nmsg.newvalue = msg.payload;\n\n// reset max noise level\nflow.set('maxnoiseM2',0);\n\nmsg.newvalue = '';\n\nvar mperiod = String(flow.get('mperiodM2'));\n\n//padding before number\nfor(var j = 0; j < (msg.backspaces-mperiod.length); j++)\n{ \n    msg.newvalue += '0';\n}\n\n\nfor(var i = 0; i < mperiod.length; i++)\n{ \n    msg.newvalue += mperiod[i];\n}\n\nmsg.newvalue = msg.newvalue.toString();\nmsg.topic = 2;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1470,
        "y": 4020,
        "wires": [
            [
                "c1f65286.f10498"
            ]
        ]
    },
    {
        "id": "1bd18075.c1598",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "Change measurement window (3)",
        "func": "msg.return_start = 3;\nmsg.return_end = 11;\nmsg.backspaces = 5;\nmsg.newvalue = msg.payload;\n\n// reset max noise level\nflow.set('maxnoiseM2',0);\n\nmsg.newvalue = '';\n\nvar mwindow = String(flow.get('mwindowM2'));\n\n//padding before number\nfor(var j = 0; j < (msg.backspaces-mwindow.length); j++)\n{ \n    msg.newvalue += '0';\n}\n\n\nfor(var i = 0; i < mwindow.length; i++)\n{ \n    msg.newvalue += mwindow[i];\n}\n\nmsg.newvalue = msg.newvalue.toString();\nmsg.topic = 3;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1460,
        "y": 4100,
        "wires": [
            [
                "c1f65286.f10498"
            ]
        ]
    },
    {
        "id": "3a4921d9.52300e",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "Change VHigh (4)",
        "func": "msg.return_start = 4;\nmsg.return_end = 10;\nmsg.backspaces = 4;\n\n// reset max noise level\nflow.set('maxnoiseM2',0);\n\nmsg.newvalue = '';\n\nvar vhigh = String(flow.get('vhighM2'));\n\n//padding before number\nfor(var j = 0; j < (msg.backspaces-vhigh.length); j++)\n{ \n    msg.newvalue += '0';\n}\n\n\nfor(var i = 0; i < vhigh.length; i++)\n{ \n    msg.newvalue += vhigh[i];\n}\n\nmsg.newvalue = msg.newvalue.toString();\nmsg.topic = 4;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 4180,
        "wires": [
            [
                "c1f65286.f10498"
            ]
        ]
    },
    {
        "id": "69bdbd05.0de6ac",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "Change VLow (5)",
        "func": "msg.return_start = 5;\nmsg.return_end = 9;\nmsg.backspaces = 4;\nmsg.newvalue = msg.payload;\n\n// reset max noise level\nflow.set('maxnoiseM2',0);\n\nmsg.newvalue = '';\n\nvar vlow = String(flow.get('vlowM2'));\n\n//padding before number\nfor(var j = 0; j < (msg.backspaces-vlow.length); j++)\n{ \n    msg.newvalue += '0';\n}\n\n\nfor(var i = 0; i < vlow.length; i++)\n{ \n    msg.newvalue += vlow[i];\n}\n\nmsg.newvalue = msg.newvalue.toString();\nmsg.topic = 5;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 4260,
        "wires": [
            [
                "c1f65286.f10498"
            ]
        ]
    },
    {
        "id": "2fd34cb2.b7e6f4",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "Change RCharge (6)",
        "func": "msg.return_start = 6;\nmsg.return_end = 8;\nmsg.backspaces = 6;\nmsg.newvalue = msg.payload;\n\n// reset max noise level\nflow.set('maxnoiseM2',0);\n\nmsg.newvalue = '';\n\nvar rcharge = String(flow.get('rchargeM2'));\n\n//padding before number\nfor(var j = 0; j < (msg.backspaces-rcharge.length); j++)\n{ \n    msg.newvalue += '0';\n}\n\n\nfor(var i = 0; i < rcharge.length; i++)\n{ \n    msg.newvalue += rcharge[i];\n}\n\nmsg.newvalue = msg.newvalue.toString();\nmsg.topic = 6;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1500,
        "y": 4340,
        "wires": [
            [
                "c1f65286.f10498"
            ]
        ]
    },
    {
        "id": "427d5b76.b52c84",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "Change ROut (7)",
        "func": "msg.return_start = 7;\nmsg.return_end = 7;\nmsg.backspaces = 6;\nmsg.newvalue = msg.payload;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 4560,
        "wires": [
            [
                "c1f65286.f10498"
            ]
        ]
    },
    {
        "id": "71bd6eaf.2a705",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "Change Accel sensitivity (8)",
        "func": "msg.return_start = 8;\nmsg.return_end = 6;\nmsg.backspaces = 4;\nmsg.newvalue = msg.payload;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1480,
        "y": 4600,
        "wires": [
            [
                "c1f65286.f10498"
            ]
        ]
    },
    {
        "id": "d00c1a72.1a0ab",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "Change Number of sensors (9)",
        "func": "msg.return_start = 9;\nmsg.return_end = 5;\nmsg.backspaces = 3;\nmsg.newvalue = msg.payload;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1470,
        "y": 4640,
        "wires": [
            [
                "c1f65286.f10498"
            ]
        ]
    },
    {
        "id": "a756cf65.7fadf8",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "Change Custom byte (10)",
        "func": "msg.return_start = 4;\nmsg.return_end = 10;\nmsg.backspaces = 4;\nmsg.newvalue = msg.payload;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1490,
        "y": 4680,
        "wires": [
            [
                "c1f65286.f10498"
            ]
        ]
    },
    {
        "id": "9d0045fe.708b6",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "Change Reserved (TXPower) (11)",
        "func": "msg.return_start = 11;\nmsg.return_end = 3;\nmsg.backspaces = 5;\nmsg.newvalue = msg.payload;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1460,
        "y": 4720,
        "wires": [
            [
                "c1f65286.f10498"
            ]
        ]
    },
    {
        "id": "2a0659cb.8145ee",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "Change reserved (last) (13)",
        "func": "msg.return_start = 13;\nmsg.return_end = 11;\nmsg.backspaces = 5;\nmsg.newvalue = msg.payload;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1480,
        "y": 4800,
        "wires": [
            [
                "c1f65286.f10498"
            ]
        ]
    },
    {
        "id": "8f627dc6.501f88",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "Change reserved (frequency) (12)",
        "func": "msg.return_start = 12;\nmsg.return_end = 2;\nmsg.backspaces = 5;\nmsg.newvalue = msg.payload;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1460,
        "y": 4760,
        "wires": [
            [
                "c1f65286.f10498"
            ]
        ]
    },
    {
        "id": "3dd40725.07fed",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "Change nothing (14)",
        "func": "// reset max noise level\nglobal.set('maxnoise',0);\n\nmsg.payload ='\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1360,
        "y": 4840,
        "wires": [
            [
                "799738de.03ee08"
            ]
        ]
    },
    {
        "id": "462c9795.3196",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "scroll till end",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1690,
        "y": 4840,
        "wires": [
            [
                "780e1de5.0519fc"
            ]
        ]
    },
    {
        "id": "5834eec4.c08d28",
        "type": "serial out",
        "z": "3fb5a67.37c495a",
        "name": "",
        "serial": "dc726705.a597c8",
        "x": 2100,
        "y": 4260,
        "wires": []
    },
    {
        "id": "799738de.03ee08",
        "type": "delay",
        "z": "3fb5a67.37c495a",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 1540,
        "y": 4840,
        "wires": [
            [
                "462c9795.3196"
            ]
        ]
    },
    {
        "id": "c1f65286.f10498",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "send new value",
        "func": "var outputMsgs = [];\nvar i = 0;\n\n//click till param to be changed\nfor(i = 0; i < msg.return_start; i++)\n{ \n   outputMsgs.push({payload:'\\r'});\n}\n\n// delete existing value\nfor(i = 0; i < msg.backspaces; i++)\n{ \n   outputMsgs.push({payload:'\\b'});\n}\n\n// insert new value\n\nvar newvalue = msg.newvalue;\n\n//padding before number\nfor(var j = 0; j < (msg.backspaces-newvalue.length); j++)\n{ \n    outputMsgs.push({payload:'0'});\n}\n\n// sending newvalue\nfor(i = 0; i < newvalue.length; i++)\n{ \n    outputMsgs.push({payload:newvalue[i]});\n}\n\n// click through\nfor(i = 0; i < msg.return_end; i++)\n{ \n   outputMsgs.push({payload:'\\r'});\n}\n\nreturn [ outputMsgs ];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1720,
        "y": 4340,
        "wires": [
            [
                "626bcd68.1948ac",
                "780e1de5.0519fc"
            ]
        ]
    },
    {
        "id": "626bcd68.1948ac",
        "type": "debug",
        "z": "3fb5a67.37c495a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1870,
        "y": 4260,
        "wires": []
    },
    {
        "id": "639f9155.6a8c7",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "M Period",
        "func": "// set new flow variable\n//flow.set('mperiodM2',parseInt(msg.period));\n \nmsg.backspaces = 5;\nmsg.payload = '';\nmsg.enabled = true;\n// background is not a topic of this widget\n//msg.background = 'green';\n    \nvar tempstr = String(msg.mperiod);\n\n//padding\nfor(var j = 0; j < (msg.backspaces-tempstr.length); j++)\n{ \n    msg.payload += '0';\n}\n\n\nfor(var i = 0; i < tempstr.length; i++)\n{ \n    msg.payload += tempstr[i];\n}\n\nmsg.payload = msg.payload.toString();\nmsg.topic = 2;\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 3980,
        "wires": [
            [
                "ad63bdf0.a4e2a"
            ]
        ]
    },
    {
        "id": "1431a7fd.f973e8",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "M Window",
        "func": "// set new flow variable\n//flow.set('mwindowM2',parseInt(msg.mwindow));\n\nmsg.backspaces = 5;\nmsg.payload = '';\nmsg.enabled = true;\n// background is not a topic of this widget\n//msg.background = 'green';\n\nvar mwindow = String(msg.mwindow);\n\n//padding before number\nfor(var j = 0; j < (msg.backspaces-mwindow.length); j++)\n{ \n    msg.payload += '0';\n}\n\n\nfor(var i = 0; i < mwindow.length; i++)\n{ \n    msg.payload += mwindow[i];\n}\n\nmsg.payload = msg.payload.toString();\nmsg.topic = 3;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 4060,
        "wires": [
            [
                "bb6f6b85.51098"
            ]
        ]
    },
    {
        "id": "4a36d26e.3f434c",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "VHigh",
        "func": "// set new flow variable\nflow.set('vhighM2',parseInt(msg.vhigh));\n\nmsg.backspaces = 4;\nmsg.payload = '';\nmsg.enabled = true;\n// background is not a topic of this widget\n//msg.background = 'green';\n\nvar vhigh = String(msg.vhigh);\n\n//padding before number\nfor(var j = 0; j < (msg.backspaces-vhigh.length); j++)\n{ \n    msg.payload += '0';\n}\n\n\nfor(var i = 0; i < vhigh.length; i++)\n{ \n    msg.payload += vhigh[i];\n}\n\nmsg.payload = msg.payload.toString();\nmsg.topic = 4;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 4140,
        "wires": [
            [
                "a04231c.13fa65"
            ]
        ]
    },
    {
        "id": "3a4fb2f6.d3c10e",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "VLow",
        "func": "// set new flow variable\nflow.set('vlowM2',parseInt(msg.vlow));\n\nmsg.backspaces = 4;\nmsg.payload = '';\nmsg.enabled = true;\n// background is not a topic of this widget\n//msg.background = 'green';\n\nvar vlow = String(msg.vlow);\n\n//padding before number\nfor(var j = 0; j < (msg.backspaces-vlow.length); j++)\n{ \n    msg.payload += '0';\n}\n\n\nfor(var i = 0; i < vlow.length; i++)\n{ \n    msg.payload += vlow[i];\n}\n\nmsg.payload = msg.payload.toString();\nmsg.topic = 5;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 4220,
        "wires": [
            [
                "ead4eb20.cc15b"
            ]
        ]
    },
    {
        "id": "2add5a5f.f19f56",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "RCharge",
        "func": "// set new flow variable\n//flow.set('rchargeM2',parseInt(msg.rcharge));\n\nmsg.backspaces = 6;\nmsg.payload = '';\nmsg.enabled = true;\n// background is not a topic of this widget\n//msg.background = 'green';\n\nvar rcharge = String(msg.rcharge);\n\n//padding before number\nfor(var j = 0; j < (msg.backspaces-rcharge.length); j++)\n{ \n    msg.payload += '0';\n}\n\nfor(var i = 0; i < rcharge.length; i++)\n{ \n    msg.payload += rcharge[i];\n}\n\nmsg.payload = msg.payload.toString();\nmsg.topic = 6;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 4300,
        "wires": [
            [
                "cfba7e14.a6be48"
            ]
        ]
    },
    {
        "id": "690fe4fb.63c9dc",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "Sensor ID",
        "func": "// set new flow variable\nflow.set('sensorIDM2',parseInt(msg.sensorid));\n\nmsg.backspaces = 3;\nmsg.payload = '';\nmsg.enabled = true;\n// background is not a topic of this widget\n//msg.background = 'green';\n\nvar sensorid = String(msg.sensorid);\n\n//padding before number\nfor(var j = 0; j < (msg.backspaces-sensorid.length); j++)\n{ \n    msg.payload += '0';\n}\n\n\nfor(var i = 0; i < sensorid.length; i++)\n{ \n    msg.payload += sensorid[i];\n}\n\nmsg.payload = msg.payload.toString();\nmsg.payload.masterID = msg.payload;\nmsg.topic = 1;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 3900,
        "wires": [
            [
                "6c853dc3.13b0d4"
            ]
        ]
    },
    {
        "id": "6c853dc3.13b0d4",
        "type": "ui_text",
        "z": "3fb5a67.37c495a",
        "group": "f726791c.9d1d88",
        "order": 13,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "{{msg.label}}",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "x": 990,
        "y": 3880,
        "wires": []
    },
    {
        "id": "7cec1ce2.50d1ac",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "validate input",
        "func": "var ID = flow.get('master2ID');\n\nvar label = global.get('sensorid_label');\nvar change = global.get('sensorid_change');\nvar tooltip = global.get('sensorid_tooltip');\nvar set = global.get('sensorid_set');\n\nmsg.label = label;\n//msg.change = change;\nmsg.tooltip = tooltip;\n//msg.set = set;\nmsg.set = null;\n\nif (msg.payload == '')\n{\n    msg.enabled = true;\n    msg.background = 'grey';\n    msg.payload = '';\n    msg.change = null;\n}\nelse\n{\n    if ((parseInt(msg.payload) <= 240)  && (parseInt(msg.payload) >= 0) && (ID != '')) \n    {\n        msg.enabled = true;\n        msg.background = 'green';\n        msg.change = change;\n    }\n    else \n    {\n        msg.background = 'green'\n        msg.enabled = false;\n        msg.change = null;\n    }\n    //master has always sensorID = 0\n    msg.payload = 0;\n    msg.topic = msg.payload;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 3940,
        "wires": [
            [
                "73dc69d0.e2b91",
                "2d484af0.5881c6"
            ]
        ]
    },
    {
        "id": "2d484af0.5881c6",
        "type": "ui_button",
        "z": "3fb5a67.37c495a",
        "name": "",
        "group": "f726791c.9d1d88",
        "order": 14,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "{{ msg.set }}",
        "tooltip": "{{ msg.tooltip }}",
        "color": "",
        "bgcolor": "{{background}}",
        "icon": "",
        "payload": "confirm",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 1190,
        "y": 3940,
        "wires": [
            [
                "99612a9b.e34d88",
                "6299e35.a28969c",
                "4358550d.f87d6c"
            ]
        ]
    },
    {
        "id": "637abd58.8267e4",
        "type": "ui_text_input",
        "z": "3fb5a67.37c495a",
        "name": "sensorID",
        "label": "{{change}}",
        "tooltip": "{{tooltip}}",
        "group": "f726791c.9d1d88",
        "order": 12,
        "width": 6,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": "100",
        "topic": "",
        "topicType": "str",
        "x": 620,
        "y": 3940,
        "wires": [
            [
                "7cec1ce2.50d1ac"
            ]
        ]
    },
    {
        "id": "ad63bdf0.a4e2a",
        "type": "ui_text",
        "z": "3fb5a67.37c495a",
        "group": "f12df54.fdd1f08",
        "order": 20,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "{{msg.label}}",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "x": 1010,
        "y": 3960,
        "wires": []
    },
    {
        "id": "76068de0.540af4",
        "type": "ui_button",
        "z": "3fb5a67.37c495a",
        "name": "",
        "group": "f12df54.fdd1f08",
        "order": 22,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "{{ msg.set }}",
        "tooltip": "{{msg.tooltip}}",
        "color": "",
        "bgcolor": "{{background}}",
        "icon": "",
        "payload": "confirm",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 1190,
        "y": 4020,
        "wires": [
            [
                "ec24885b.81715",
                "6299e35.a28969c",
                "bde69f7.1eb816"
            ]
        ]
    },
    {
        "id": "e3b1193d.629b8",
        "type": "ui_text_input",
        "z": "3fb5a67.37c495a",
        "name": "mperiod",
        "label": "{{change}}",
        "tooltip": "{{tooltip}}",
        "group": "f12df54.fdd1f08",
        "order": 18,
        "width": 6,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": "100",
        "topic": "",
        "topicType": "str",
        "x": 620,
        "y": 4020,
        "wires": [
            [
                "7e83794b.7b5ab8"
            ]
        ]
    },
    {
        "id": "7e83794b.7b5ab8",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "validate input",
        "func": "var ID = flow.get('master2ID');\n\nvar label = global.get('mperiod_label');\nvar change = global.get('mperiod_change');\nvar tooltip = global.get('mperiod_tooltip');\nvar set = global.get('mperiod_set');\n\nmsg.label = label;\n//msg.change = change;\nmsg.tooltip = tooltip;\nmsg.set = set;\n\n// when disabled tooltip becomes visible when hoovered over\n// when entry, input UI generates message to validation\n//msg.background = 'green';\n\nif (msg.payload == '')\n{\n    msg.enabled = true;\n    msg.background = 'grey';\n    msg.payload = '';\n    msg.change = null;\n}\nelse\n{\n    if ((parseInt(msg.payload) <= 16666666) && (parseInt(msg.payload) >= 5) && (ID != ''))\n    {\n        msg.enabled = true;\n        msg.background = 'green';\n        msg.change = change;\n    }\n    else \n    {\n        msg.background = 'green'\n        msg.enabled = false;\n        msg.change = null;\n    }\n    msg.payload = parseInt(msg.payload);\n    msg.topic = msg.payload;\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 4020,
        "wires": [
            [
                "9698f22e.a80e28",
                "76068de0.540af4"
            ]
        ]
    },
    {
        "id": "bb6f6b85.51098",
        "type": "ui_text",
        "z": "3fb5a67.37c495a",
        "group": "f12df54.fdd1f08",
        "order": 21,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "{{msg.label}}",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "x": 1010,
        "y": 4040,
        "wires": []
    },
    {
        "id": "e820b8f3.54fa08",
        "type": "ui_text_input",
        "z": "3fb5a67.37c495a",
        "name": "mwindow",
        "label": "{{change}}",
        "tooltip": "{{tooltip}}",
        "group": "f12df54.fdd1f08",
        "order": 19,
        "width": 6,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": "100",
        "topic": "",
        "topicType": "str",
        "x": 620,
        "y": 4100,
        "wires": [
            [
                "7a75b6b3.8a121"
            ]
        ]
    },
    {
        "id": "7a75b6b3.8a121",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "validate input",
        "func": "var ID = flow.get('master2ID');\n\nvar label = global.get('mwindow_label');\nvar change = global.get('mwindow_change');\nvar tooltip = global.get('mwindow_tooltip');\nvar set = global.get('mwindow_set');\n\nmsg.label = label;\n//msg.change = change;\nmsg.tooltip = tooltip;\nmsg.set = set;\n\n// when disabled tooltip becomes visible when hoovered over\n// when entry, input UI generates message to validation\n// msg.background = 'grey';\nif (msg.payload == '')\n{\n    msg.enabled = true;\n    msg.background = 'grey';\n    msg.payload = '';\n    msg.change = null;\n}\nelse\n{\n    if ((parseInt(msg.payload) <= 4000) && (parseInt(msg.payload) >=1) && (ID != ''))\n    {\n        msg.enabled = true;\n        msg.background = 'green';\n        msg.change = change;\n    }\n    else \n    {\n        msg.background = 'green'\n        msg.enabled = false;\n        msg.change = null;\n    }\n    msg.payload = parseInt(msg.payload);\n    msg.topic = msg.payload;\n}\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 4100,
        "wires": [
            [
                "2b7f234b.0341ec",
                "4a62c312.b441ac"
            ]
        ]
    },
    {
        "id": "4a62c312.b441ac",
        "type": "ui_button",
        "z": "3fb5a67.37c495a",
        "name": "",
        "group": "f12df54.fdd1f08",
        "order": 23,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "{{ msg.set }}",
        "tooltip": "{{msg.tooltip}}",
        "color": "",
        "bgcolor": "{{background}}",
        "icon": "",
        "payload": "confirm",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 1190,
        "y": 4100,
        "wires": [
            [
                "1bd18075.c1598",
                "6299e35.a28969c",
                "3f5cc627.a6f912"
            ]
        ]
    },
    {
        "id": "a04231c.13fa65",
        "type": "ui_text",
        "z": "3fb5a67.37c495a",
        "group": "92957720.d414",
        "order": 20,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "{{msg.label}}",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "x": 1010,
        "y": 4120,
        "wires": []
    },
    {
        "id": "475c6b19.bc2a5c",
        "type": "ui_text_input",
        "z": "3fb5a67.37c495a",
        "name": "vhigh",
        "label": "{{change}}",
        "tooltip": "{{tooltip}}",
        "group": "92957720.d414",
        "order": 18,
        "width": 6,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": "100",
        "topic": "vhigh",
        "topicType": "str",
        "x": 610,
        "y": 4180,
        "wires": [
            [
                "c39f56cd.0b7608"
            ]
        ]
    },
    {
        "id": "c39f56cd.0b7608",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "validate input",
        "func": "// get last config value of vlow\nvar vlow = flow.get('vlowM2') || null;\nif (vlow == null) vlow = msg.vlow;\n\n// newly entered vhigh\nvar vhigh = parseInt(msg.payload);\n\nvar ID = flow.get('master1ID');\nvar label = global.get('vhigh_label');\nvar change = global.get('vhigh_change');\nvar tooltip = global.get('vhigh_tooltip');\nvar set = global.get('vhigh_set');\n\n// when disabled tooltip becomes visible when hoovered over\n// when entry, input UI generates message to validation\nmsg.label = label;\n//msg.change = change;\nmsg.tooltip = tooltip;\nmsg.set = set;\n\n//msg.background = 'grey';\n\nif (msg.payload == '')\n{\n    msg.enabled = true;\n    msg.background = 'grey';\n    msg.payload = '';\n    msg.change = null;\n}\nelse\n{\n    msg.vlowvalue = vlow;\n    msg.vhighvalue = vhigh;\n    if ((vhigh <= 3170) && (vhigh > vlow) && (ID != ''))\n    {\n        msg.enabled = true;\n        msg.background = 'green';\n        msg.change = change;\n    }\n    else \n    {\n        msg.background = 'green'\n        msg.enabled = false;\n        msg.change = null;\n    }\n    msg.payload = vhigh;\n    msg.topic = msg.payload;\n}\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 4180,
        "wires": [
            [
                "9d74b61f.280b8",
                "804c2a8.53d8c58"
            ]
        ]
    },
    {
        "id": "804c2a8.53d8c58",
        "type": "ui_button",
        "z": "3fb5a67.37c495a",
        "name": "",
        "group": "92957720.d414",
        "order": 22,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "{{ msg.set }}",
        "tooltip": "{{msg.tooltip}}",
        "color": "",
        "bgcolor": "{{background}}",
        "icon": "",
        "payload": "confirm",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 1190,
        "y": 4180,
        "wires": [
            [
                "3a4921d9.52300e",
                "6299e35.a28969c",
                "1ac3815d.0dc57f"
            ]
        ]
    },
    {
        "id": "ead4eb20.cc15b",
        "type": "ui_text",
        "z": "3fb5a67.37c495a",
        "group": "92957720.d414",
        "order": 21,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "{{msg.label}}",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "x": 1010,
        "y": 4200,
        "wires": []
    },
    {
        "id": "98aa17f2.144ff",
        "type": "ui_button",
        "z": "3fb5a67.37c495a",
        "name": "",
        "group": "92957720.d414",
        "order": 23,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "{{ msg.set }}",
        "tooltip": "{{msg.tooltip}}",
        "color": "",
        "bgcolor": "{{background}}",
        "icon": "",
        "payload": "confirm",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 1190,
        "y": 4260,
        "wires": [
            [
                "69bdbd05.0de6ac",
                "6299e35.a28969c",
                "a938d96a.3a383"
            ]
        ]
    },
    {
        "id": "3c30dcbf.fc59fc",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "validate input",
        "func": "// get last config value of vhigh\nvar vhigh = flow.get('vhighM2') || null;\nif (vhigh == null) vhigh = msg.vhigh;\n\n// newly entered vhigh\nvar vlow = parseInt(msg.payload);\n\n\nvar ID = flow.get('master1ID');\nvar label = global.get('vlow_label');\nvar change = global.get('vlow_change');\nvar tooltip = global.get('vlow_tooltip');\nvar set = global.get('vlow_set');\n\n// when disabled tooltip becomes visible when hoovered over\n// when entry, input UI generates message to validation\nmsg.label = label;\n//msg.change = change;\nmsg.tooltip = tooltip;\nmsg.set = set;\n\n//msg.background = 'grey';\n\nif (msg.payload == '')\n{\n    msg.enabled = true;\n    msg.background = 'grey';\n    msg.payload = '';\n    msg.change = null;\n}\nelse\n{\n    msg.vlowvalue = vlow;\n    msg.vhighvalue = vhigh;\n    \n    if ((vlow < vhigh) && (vlow >= 10) && (ID != ''))\n    {\n       msg.enabled = true;\n        msg.background = 'green';\n        msg.change = change;\n    }\n    else \n    {\n        msg.background = 'green'\n        msg.enabled = false;\n        msg.change = null;\n    }\n    msg.payload = vlow;\n    msg.topic = msg.payload;\n}\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 4260,
        "wires": [
            [
                "f5ef03d.9e5198",
                "98aa17f2.144ff"
            ]
        ]
    },
    {
        "id": "abad2eef.1338f",
        "type": "ui_text_input",
        "z": "3fb5a67.37c495a",
        "name": "vlow",
        "label": "{{change}}",
        "tooltip": "{{tooltip}}",
        "group": "92957720.d414",
        "order": 19,
        "width": 6,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": "100",
        "topic": "vlow",
        "topicType": "str",
        "x": 610,
        "y": 4260,
        "wires": [
            [
                "3c30dcbf.fc59fc"
            ]
        ]
    },
    {
        "id": "cfba7e14.a6be48",
        "type": "ui_text",
        "z": "3fb5a67.37c495a",
        "group": "f12df54.fdd1f08",
        "order": 26,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "{{msg.label}}",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "x": 1010,
        "y": 4280,
        "wires": []
    },
    {
        "id": "cba88230.0e2e98",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "validate input",
        "func": "var ID = flow.get('master2ID');\n\nvar label = global.get('rcharge_label');\nvar change = global.get('rcharge_change');\nvar tooltip = global.get('rcharge_tooltip');\nvar set = global.get('rcharge_set');\n\nmsg.label = label;\n//msg.change = change;\nmsg.tooltip = tooltip;\nmsg.set = set;\n\n// when disabled tooltip becomes visible when hoovered over\n// when entry, input UI generates message to validation\n//msg.background = 'grey';\nif (msg.payload == '')\n{\n    msg.enabled = true;\n    msg.background = 'grey';\n    msg.payload = '';\n    msg.change = null;\n}\nelse\n{\n    if ((parseInt(msg.payload) <= 730000) && (parseInt(msg.payload) >=1) && (ID != ''))\n    {\n        msg.enabled = true;\n        msg.background = 'green';\n        msg.change = change;\n    }\n    else \n    {\n        msg.background = 'green'\n        msg.enabled = false;\n        msg.change = null;\n    }\n    msg.payload = parseInt(msg.payload);\n    msg.topic = msg.payload;\n}\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 4340,
        "wires": [
            [
                "7edcac56.3406f4",
                "371d0a0.885dd76"
            ]
        ]
    },
    {
        "id": "371d0a0.885dd76",
        "type": "ui_button",
        "z": "3fb5a67.37c495a",
        "name": "",
        "group": "f12df54.fdd1f08",
        "order": 27,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "{{ msg.set }}",
        "tooltip": "{{msg.tooltip}}",
        "color": "",
        "bgcolor": "{{background}}",
        "icon": "",
        "payload": "confirm",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 1190,
        "y": 4340,
        "wires": [
            [
                "2fd34cb2.b7e6f4",
                "6299e35.a28969c",
                "827163e0.e7e0d8"
            ]
        ]
    },
    {
        "id": "1e845578.3bcec3",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "Noise",
        "func": "// set new flow variable\n//flow.set('noiseM2',msg.noise);\nmsg.background = 'grey';\n\nif (msg.payload == '')\n{\n    msg.enabled = false;\n    msg.payload = 0;\n    msg.label = null;\n}\nelse\n{\n    msg.enabled = true;\n    msg.payload = msg.noise;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 4540,
        "wires": [
            [
                "b647c018.370c7"
            ]
        ]
    },
    {
        "id": "8a85a5c2.f2306",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "Sequence",
        "func": "// set new flow variable\n//flow.set('sequenceM1',msg.sequence);\n\nmsg.background = 'grey';\n\nif (msg.payload == '')\n{\n    msg.enabled = false;\n    msg.payload = '';\n    msg.label = null;\n}\nelse\n{\n    msg.payload = msg.sequence;\n    msg.enabled = true;\n    \n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 4660,
        "wires": [
            [
                "7e240a1.1c6d574"
            ]
        ]
    },
    {
        "id": "b647c018.370c7",
        "type": "ui_numeric",
        "z": "3fb5a67.37c495a",
        "name": "",
        "label": "{{msg.label}}",
        "tooltip": "",
        "group": "f12df54.fdd1f08",
        "order": 28,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": false,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "0",
        "step": "0",
        "x": 1020,
        "y": 4540,
        "wires": [
            []
        ]
    },
    {
        "id": "7e240a1.1c6d574",
        "type": "ui_numeric",
        "z": "3fb5a67.37c495a",
        "name": "",
        "label": "{{msg.label}}",
        "tooltip": "",
        "group": "92957720.d414",
        "order": 28,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": false,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "0",
        "step": "0",
        "x": 1020,
        "y": 4660,
        "wires": [
            []
        ]
    },
    {
        "id": "55414836.23412",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "Cap",
        "func": "// set new flow variable\n//flow.set('measurementM1',msg.cap);\n\nmsg.background = 'grey';\n    \nif (msg.payload == '')\n{\n    msg.enabled = false;\n    msg.payload = '';\n    msg.label = null;\n}\nelse\n{\n    msg.payload = msg.cap;\n    msg.enabled = true;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 4760,
        "wires": [
            [
                "1d5f6760.2aa7e9"
            ]
        ]
    },
    {
        "id": "1d5f6760.2aa7e9",
        "type": "ui_numeric",
        "z": "3fb5a67.37c495a",
        "name": "",
        "label": "{{msg.label}}",
        "tooltip": "",
        "group": "f726791c.9d1d88",
        "order": 18,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": false,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "0",
        "step": "0",
        "x": 1020,
        "y": 4760,
        "wires": [
            []
        ]
    },
    {
        "id": "e354213a.86d248",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "Average",
        "func": "// set new flow variable\n//flow.set('avg_measurementM1',msg.avg);\n\nmsg.background = 'grey';\n    \nif (msg.payload == '')\n{\n    msg.enabled = false;\n    msg.payload = '';\n    msg.label = null;\n}\nelse\n{\n    msg.payload = msg.avg;\n    msg.enabled = true;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 4820,
        "wires": [
            [
                "f4cfeadd.b4922"
            ]
        ]
    },
    {
        "id": "f4cfeadd.b4922",
        "type": "ui_numeric",
        "z": "3fb5a67.37c495a",
        "name": "",
        "label": "{{msg.label}}",
        "tooltip": "",
        "group": "f726791c.9d1d88",
        "order": 19,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": false,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "0",
        "step": "0",
        "x": 1020,
        "y": 4820,
        "wires": [
            []
        ]
    },
    {
        "id": "66a55dd5.e6d84c",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "Max Noise",
        "func": "var maxnoise;\nvar noise;\n\nmsg.background = 'grey';\n\n\nif (msg.payload == '')\n{\n    msg.enabled = false;\n    msg.payload = '';\n    msg.label = null;\n}\nelse\n{\n    // get new flow variable\n    maxnoise = flow.get('maxnoiseM2') || 0;\n    noise = msg.noise;\n    msg.enabled = true;\n\n    if (noise > maxnoise) \n    {\n        flow.set('maxnoiseM2', noise);\n        msg.payload = noise;\n    }\n    else\n    {\n        msg.payload = maxnoise;\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 4600,
        "wires": [
            [
                "12e24768.2d1001"
            ]
        ]
    },
    {
        "id": "12e24768.2d1001",
        "type": "ui_numeric",
        "z": "3fb5a67.37c495a",
        "name": "",
        "label": "{{msg.label}}",
        "tooltip": "",
        "group": "f12df54.fdd1f08",
        "order": 29,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": false,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "0",
        "step": "0",
        "x": 1020,
        "y": 4600,
        "wires": [
            []
        ]
    },
    {
        "id": "73dc69d0.e2b91",
        "type": "change",
        "z": "3fb5a67.37c495a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "sensorIDM2",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 980,
        "y": 3920,
        "wires": [
            []
        ]
    },
    {
        "id": "9698f22e.a80e28",
        "type": "change",
        "z": "3fb5a67.37c495a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "mperiodM2",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 970,
        "y": 4000,
        "wires": [
            []
        ]
    },
    {
        "id": "2b7f234b.0341ec",
        "type": "change",
        "z": "3fb5a67.37c495a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "mwindowM2",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 980,
        "y": 4080,
        "wires": [
            []
        ]
    },
    {
        "id": "9d74b61f.280b8",
        "type": "change",
        "z": "3fb5a67.37c495a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "vhighM2",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 960,
        "y": 4160,
        "wires": [
            []
        ]
    },
    {
        "id": "f5ef03d.9e5198",
        "type": "change",
        "z": "3fb5a67.37c495a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "vlowM2",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 960,
        "y": 4240,
        "wires": [
            []
        ]
    },
    {
        "id": "7edcac56.3406f4",
        "type": "change",
        "z": "3fb5a67.37c495a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "rchargeM2",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 970,
        "y": 4320,
        "wires": [
            []
        ]
    },
    {
        "id": "504add30.77a95c",
        "type": "ui_text_input",
        "z": "3fb5a67.37c495a",
        "name": "rcharge",
        "label": "{{change}}",
        "tooltip": "{{tooltip}}",
        "group": "f12df54.fdd1f08",
        "order": 24,
        "width": 6,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": "100",
        "topic": "",
        "topicType": "str",
        "x": 620,
        "y": 4340,
        "wires": [
            [
                "cba88230.0e2e98"
            ]
        ]
    },
    {
        "id": "6299e35.a28969c",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "disable",
        "func": "var period = global.get('period');\n\n\nmsg.enabled = true;\nmsg.background = 'grey';\nmsg.topic = 'Waiting for at least ' + 2*period + ' secs';\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 3880,
        "wires": [
            [
                "2d484af0.5881c6",
                "4a62c312.b441ac",
                "804c2a8.53d8c58",
                "98aa17f2.144ff",
                "371d0a0.885dd76",
                "76068de0.540af4",
                "b67893a2.335438"
            ]
        ]
    },
    {
        "id": "d3389a9.ba4a6e8",
        "type": "ui_text",
        "z": "3fb5a67.37c495a",
        "group": "92957720.d414",
        "order": 29,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "{{topic}}",
        "format": "{{value | uppercase}}",
        "layout": "col-center",
        "x": 1010,
        "y": 4720,
        "wires": []
    },
    {
        "id": "22e80d92.19e042",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "Status",
        "func": "// widget has no topic background\n//msg.background = 'grey';\n\nif (msg.payload == '')\n{\n    msg.enabled = false;\n    msg.payload = msg.status1;\n    msg.topic = msg.status0;\n}\nelse\n{\n    msg.enabled = true;\n    msg.payload = msg.status2 + ' : ' + msg.mperiod + ' ' + msg.status3;\n    msg.topic = msg.status0;\n    \n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 4720,
        "wires": [
            [
                "d3389a9.ba4a6e8"
            ]
        ]
    },
    {
        "id": "b003b1e6.73c42",
        "type": "ui_text_input",
        "z": "3fb5a67.37c495a",
        "name": "LogToEmailM2",
        "label": "{{log_label}}",
        "tooltip": "",
        "group": "92957720.d414",
        "order": 25,
        "width": 6,
        "height": 1,
        "passthru": false,
        "mode": "email",
        "delay": "0",
        "topic": "topic",
        "topicType": "msg",
        "x": 980,
        "y": 3460,
        "wires": [
            [
                "601b6538.f5479c",
                "9fd71c80.936198"
            ]
        ]
    },
    {
        "id": "42d2a39a.aa0894",
        "type": "ui_button",
        "z": "3fb5a67.37c495a",
        "name": "",
        "group": "92957720.d414",
        "order": 26,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "{{msg.label}}",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{background}}",
        "icon": "",
        "payload": "start",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 530,
        "y": 3520,
        "wires": [
            [
                "5dc7586c.a37988",
                "59738c3.1fd3474",
                "b4bb11a5.2dc4d8"
            ]
        ]
    },
    {
        "id": "9c46bda9.b88be",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "msg.filename",
        "func": "msg.filename = \"/home/nuci3/Desktop/Logo-iSensPro-MD.png\";\nreturn msg;\n    \n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 4860,
        "wires": [
            [
                "4712cba4.41ee7c"
            ]
        ]
    },
    {
        "id": "96eb4d05.9e0348",
        "type": "inject",
        "z": "3fb5a67.37c495a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 330,
        "y": 4860,
        "wires": [
            [
                "9c46bda9.b88be"
            ]
        ]
    },
    {
        "id": "4712cba4.41ee7c",
        "type": "file in",
        "z": "3fb5a67.37c495a",
        "name": "",
        "filename": "",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 610,
        "y": 4860,
        "wires": [
            [
                "29f31930.b4aaee"
            ]
        ]
    },
    {
        "id": "29f31930.b4aaee",
        "type": "base64",
        "z": "3fb5a67.37c495a",
        "name": "",
        "action": "str",
        "property": "payload",
        "x": 760,
        "y": 4860,
        "wires": [
            [
                "9bf5d05b.f3bdd8"
            ]
        ]
    },
    {
        "id": "b7c529e1.a332e8",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "START",
        "func": "var label = global.get('log_start');\n\n// set new flow variable\nflow.set('loggingM2',0);\n\nmsg.enabled = false;\nmsg.background = 'green';\n\nmsg.label = label;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 3520,
        "wires": [
            [
                "42d2a39a.aa0894"
            ]
        ]
    },
    {
        "id": "59738c3.1fd3474",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "LOGGING",
        "func": "var label = global.get('log_logging');\n// set new flow variable\nflow.set('loggingM2',1);\n\nmsg.background = 'grey';\nmsg.enabled = false;\nmsg.label = label;\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 3520,
        "wires": [
            [
                "42d2a39a.aa0894",
                "8a55d1ea.4e791"
            ]
        ]
    },
    {
        "id": "5dc7586c.a37988",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "",
        "func": "msg.filename = '/home/nuci3/Desktop/logfileM2.csv';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 3460,
        "wires": [
            [
                "f86a7ccc.ba3a"
            ]
        ]
    },
    {
        "id": "f86a7ccc.ba3a",
        "type": "file",
        "z": "3fb5a67.37c495a",
        "name": "delete file",
        "filename": "",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "delete",
        "encoding": "none",
        "x": 540,
        "y": 3460,
        "wires": [
            []
        ]
    },
    {
        "id": "d73a6c9e.765f38",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "",
        "func": "var label = global.get('log_file');\n\nvar email = flow.get('LogToEmailM2');\n\nmsg.to = email;\n\nmsg.topic = topic;\nmsg.filename = '/home/nuci3/Desktop/logfileM2.csv';\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 3660,
        "wires": [
            [
                "8731ef1d.ffe268"
            ]
        ]
    },
    {
        "id": "8a55d1ea.4e791",
        "type": "debug",
        "z": "3fb5a67.37c495a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 3520,
        "wires": []
    },
    {
        "id": "601b6538.f5479c",
        "type": "change",
        "z": "3fb5a67.37c495a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "LogToEmailM2",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1200,
        "y": 3420,
        "wires": [
            [
                "6754ce39.b1a52"
            ]
        ]
    },
    {
        "id": "e10cd79f.efbb8",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "disable STOP",
        "func": "var label = global.get('log_stop');\n// set new flow variable\n// flow.set('logging',0);\n\nmsg.background = 'grey';\nmsg.enabled = false;\nmsg.label = label;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 3600,
        "wires": [
            [
                "24b972bc.83b3b6"
            ]
        ]
    },
    {
        "id": "24b972bc.83b3b6",
        "type": "ui_button",
        "z": "3fb5a67.37c495a",
        "name": "",
        "group": "92957720.d414",
        "order": 27,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "{{msg.label}}",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{background}}",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 530,
        "y": 3600,
        "wires": [
            [
                "e10cd79f.efbb8",
                "b7c529e1.a332e8",
                "d73a6c9e.765f38"
            ]
        ]
    },
    {
        "id": "b4bb11a5.2dc4d8",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "enable STOP",
        "func": "var label = global.get('log_stop');\n// set new flow variable\n//flow.set('logging',1);\n\nmsg.background = 'red';\nmsg.enabled = true;\nmsg.label = label;\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 3600,
        "wires": [
            [
                "24b972bc.83b3b6"
            ]
        ]
    },
    {
        "id": "6fa6da6d.f87ddc",
        "type": "comment",
        "z": "3fb5a67.37c495a",
        "name": "data logging ui (part 2)",
        "info": "",
        "x": 200,
        "y": 3460,
        "wires": []
    },
    {
        "id": "8731ef1d.ffe268",
        "type": "file in",
        "z": "3fb5a67.37c495a",
        "name": "",
        "filename": "",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 970,
        "y": 3660,
        "wires": [
            [
                "dfee540.79d1fb"
            ]
        ]
    },
    {
        "id": "dfee540.79d1fb",
        "type": "change",
        "z": "3fb5a67.37c495a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "attachments",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1180,
        "y": 3660,
        "wires": [
            [
                "161a6161.dc92ff",
                "4307f68.b062988"
            ]
        ]
    },
    {
        "id": "161a6161.dc92ff",
        "type": "e-mail",
        "z": "3fb5a67.37c495a",
        "server": "mail.isenspro.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "",
        "dname": "",
        "x": 1390,
        "y": 3660,
        "wires": []
    },
    {
        "id": "6754ce39.b1a52",
        "type": "debug",
        "z": "3fb5a67.37c495a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1390,
        "y": 3420,
        "wires": []
    },
    {
        "id": "9fd71c80.936198",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "enable START",
        "func": "var label = global.get('log_start');\n// set new flow variable\nflow.set('loggingM2',0);\n\nmsg.background = 'green';\nmsg.label = label;\nmsg.payload != '' ? msg.enabled = true : msg.enabled = false;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 3460,
        "wires": [
            [
                "42d2a39a.aa0894",
                "fb113bf2.cfec18"
            ]
        ]
    },
    {
        "id": "59d483cd.bf81ac",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "2ND MASTER",
        "func": "var ID = flow.get(\"master2ID\");\n\nif ((msg.masterid == ID) && (ID =! ''))\n{\n   return [msg,null]; \n}\nelse\n{\n   return [null,msg]; \n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3900,
        "wires": [
            [
                "aeb65a01.3f1608",
                "5ffbc1ee.d7699",
                "6c794033.38669",
                "7a1e97fe.e8f07",
                "c89c6c9c.81c4b8",
                "848d525e.3f07f8",
                "1ba7c0c2.71d84f",
                "472bf7c3.68321",
                "c8861eaf.64b9f",
                "a2dc8bea.132cb",
                "773a50db.2eb9c",
                "c1065dcf.1efc3",
                "90bf53cc.49acb8",
                "7a5cb8d7.c6118"
            ],
            []
        ]
    },
    {
        "id": "7a5cb8d7.c6118",
        "type": "debug",
        "z": "3fb5a67.37c495a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 430,
        "y": 3840,
        "wires": []
    },
    {
        "id": "29d6ab05.e3c854",
        "type": "serial out",
        "z": "3fb5a67.37c495a",
        "name": "",
        "serial": "fd6c249c.71f2d8",
        "x": 2100,
        "y": 4340,
        "wires": []
    },
    {
        "id": "239c45f2.7e42e2",
        "type": "serial out",
        "z": "3fb5a67.37c495a",
        "name": "",
        "serial": "50f22906.5ea4b",
        "x": 2100,
        "y": 4420,
        "wires": []
    },
    {
        "id": "780e1de5.0519fc",
        "type": "switch",
        "z": "3fb5a67.37c495a",
        "name": "",
        "property": "master2ID",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "/dev/ttyACM0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "/dev/ttyACM1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "/dev/ttyACM2",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1910,
        "y": 4320,
        "wires": [
            [
                "5834eec4.c08d28",
                "510b0abd.0f0004"
            ],
            [
                "29d6ab05.e3c854"
            ],
            [
                "239c45f2.7e42e2"
            ]
        ]
    },
    {
        "id": "4f53d74f.6d70d8",
        "type": "file",
        "z": "3fb5a67.37c495a",
        "name": "append file",
        "filename": "",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 890,
        "y": 3780,
        "wires": [
            []
        ]
    },
    {
        "id": "e5fd68c1.edae68",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "trim",
        "func": "\nmsg.original = msg.payload.trim();\nmsg.payload = String(msg.timestamp) + ',' + String(msg.topic) + ',' + String(msg.original);\nmsg.filename = '/home/nuci3/Desktop/logfileM2.csv';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 3780,
        "wires": [
            [
                "4f53d74f.6d70d8"
            ]
        ]
    },
    {
        "id": "aeb65a01.3f1608",
        "type": "switch",
        "z": "3fb5a67.37c495a",
        "name": "logging ?",
        "property": "loggingM2",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 420,
        "y": 3780,
        "wires": [
            [],
            [
                "287539fc.577136"
            ]
        ]
    },
    {
        "id": "287539fc.577136",
        "type": "timestamp",
        "z": "3fb5a67.37c495a",
        "name": "",
        "x": 570,
        "y": 3780,
        "wires": [
            [
                "e5fd68c1.edae68"
            ]
        ]
    },
    {
        "id": "78d61bea.d1881c",
        "type": "comment",
        "z": "3fb5a67.37c495a",
        "name": "data logging (part 2)",
        "info": "",
        "x": 430,
        "y": 3740,
        "wires": []
    },
    {
        "id": "510b0abd.0f0004",
        "type": "debug",
        "z": "3fb5a67.37c495a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2030,
        "y": 4220,
        "wires": []
    },
    {
        "id": "fb113bf2.cfec18",
        "type": "debug",
        "z": "3fb5a67.37c495a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1390,
        "y": 3460,
        "wires": []
    },
    {
        "id": "4307f68.b062988",
        "type": "e-mail",
        "z": "3fb5a67.37c495a",
        "server": "mail.isenspro.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "log@isenspro.com",
        "dname": "log email",
        "x": 1460,
        "y": 3700,
        "wires": []
    },
    {
        "id": "102d87dc.1355d8",
        "type": "ui_text",
        "z": "3fb5a67.37c495a",
        "group": "f726791c.9d1d88",
        "order": 16,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "{{msg.label}}",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "x": 1010,
        "y": 4400,
        "wires": []
    },
    {
        "id": "d57fd10d.33062",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "validate input",
        "func": "// get new flow variable\n//var description = flow.get('descriptionM1');\nvar ID = flow.get('master2ID');\n\nvar label = global.get('desc_label');\nvar change = global.get('desc_change');\nvar tooltip = global.get('desc_tooltip');\nvar set = global.get('desc_set');\n\nmsg.label = label;\nmsg.change = change;\nmsg.tooltip = tooltip;\nmsg.set = set;\n\n// when disabled tooltip becomes visible when hoovered over\n// when entry, input UI generates message to validation\n//msg.background = 'grey';\nif (msg.payload == '')\n{\n    msg.enabled = false;\n    msg.payload = null;\n    msg.change = null;\n}\nelse\n{\n    if (ID != '')\n    {\n        msg.enabled = true;\n        msg.background = 'green';\n        msg.change = change;\n        // payload is output of ui_widget\n        // msg.topic is only message part that can get across button     \n        msg.topic = msg.payload;\n    }\n    else \n    {\n        msg.enabled = false;\n        msg.background = 'green';\n        msg.change = null;\n        msg.payload = null;\n    }\n    // payload = output of ui_text widget\n//    msg.payload = msg.description;\n    msg.topic = msg.payload;\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 4460,
        "wires": [
            [
                "b67893a2.335438"
            ]
        ]
    },
    {
        "id": "b67893a2.335438",
        "type": "ui_button",
        "z": "3fb5a67.37c495a",
        "name": "",
        "group": "f726791c.9d1d88",
        "order": 17,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "{{ msg.set }}",
        "tooltip": "{{msg.tooltip}}",
        "color": "",
        "bgcolor": "{{background}}",
        "icon": "",
        "payload": "confirm",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 1190,
        "y": 4460,
        "wires": [
            [
                "6299e35.a28969c",
                "f8d5137d.0509",
                "d68c8a3b.7777b8"
            ]
        ]
    },
    {
        "id": "666d00d5.5ff8c8",
        "type": "ui_text_input",
        "z": "3fb5a67.37c495a",
        "name": "description",
        "label": "{{change}}",
        "tooltip": "{{tooltip}}",
        "group": "f726791c.9d1d88",
        "order": 15,
        "width": 6,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": "100",
        "topic": "",
        "topicType": "str",
        "x": 610,
        "y": 4460,
        "wires": [
            [
                "d57fd10d.33062"
            ]
        ]
    },
    {
        "id": "5ffbc1ee.d7699",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "translations",
        "func": "var label = global.get('sensorid_label');\nvar change = global.get('sensorid_change');\nvar tooltip = global.get('sensorid_tooltip');\nvar set = global.get('sensorid_set');\n\nmsg.label = label;\nmsg.change = change;\nmsg.tooltip = tooltip;\n//msg.set = set;\nmsg.set = null;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 3900,
        "wires": [
            [
                "690fe4fb.63c9dc"
            ]
        ]
    },
    {
        "id": "519ab41a.449d3c",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "",
        "func": "var label = global.get('mperiod_label');\nvar change = global.get('mperiod_change');\nvar tooltip = global.get('mperiod_tooltip');\nvar set = global.get('mperiod_set');\n\n// msg.ui_text_input = { \"tooltip\": \"red\" }\nmsg.label = label;\nmsg.change = change;\nmsg.tooltip = tooltip;\nmsg.set = set;\n\nmsg.backspaces = 5;\n\nvar mperiod = String(msg.mperiod);\n\n// msg.payload = \"\" when masterID not selected yet\"\nif (msg.payload != '')\n{\n    msg.enabled = true;\n    msg.background = 'green';\n    \n    msg.payload = '';\n    //padding\n    for(var j = 0; j < (msg.backspaces-mperiod.length); j++)\n    { \n        msg.payload += '0';\n    }\n\n    for(var i = 0; i < mperiod.length; i++)\n    { \n        msg.payload += mperiod[i];\n    }    \n}\nelse\n{\n    msg.enabled = false;\n    msg.background = 'grey';\n    msg.payload = '' ;\n    msg.change = null;\n    msg.set = null;\n //   msg.payload = msg.payload.toString();\n    \n}\n\n//msg.payload = msg.payload.toString();\nmsg.topic = 2;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 4020,
        "wires": [
            [
                "e3b1193d.629b8",
                "6c794033.38669"
            ]
        ]
    },
    {
        "id": "f7c9ccc7.67f9a8",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "",
        "func": "var label = global.get('mwindow_label');\nvar change = global.get('mwindow_change');\nvar tooltip = global.get('mwindow_tooltip');\nvar set = global.get('mwindow_set');\n\nmsg.label = label;\nmsg.change = change;\nmsg.tooltip = tooltip;\nmsg.set = set;\n\nmsg.backspaces = 5;\nvar mwindow = String(msg.mwindow);\n\n// msg.payload = \"\" when masterID not selected yet\"\nif (msg.payload != '')\n{\n    msg.enabled = true;\n    msg.background = 'green';\n    \n    msg.payload = '';\n    //padding\n    for(var j = 0; j < (msg.backspaces-mwindow.length); j++)\n    { \n        msg.payload += '0';\n    }\n\n    for(var i = 0; i < mwindow.length; i++)\n    { \n        msg.payload += mwindow[i];\n    }\n}\nelse\n{\n    msg.enabled = false;\n    msg.background = 'grey';\n    msg.payload = '';\n    msg.change = null;\n    msg.set = null;\n //   msg.payload = msg.payload.toString();\n}\n\nmsg.topic = 3;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 4100,
        "wires": [
            [
                "e820b8f3.54fa08",
                "7a1e97fe.e8f07"
            ]
        ]
    },
    {
        "id": "77aadd10.8cc9bc",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "",
        "func": "var label = global.get('vhigh_label');\nvar change = global.get('vhigh_change');\nvar tooltip = global.get('vhigh_tooltip');\nvar set = global.get('vhigh_set');\n\nmsg.label = label;\nmsg.change = change;\nmsg.tooltip = tooltip;\nmsg.set = set;\n\nmsg.backspaces = 4;\nvar vhigh = String(msg.vhigh);\n\n// msg.payload = \"\" when masterID not selected yet\"\nif (msg.payload != '')\n{\n    msg.enabled = true;\n    msg.background = 'green';\n\n    msg.payload = '';\n    //padding before number\n    for(var j = 0; j < (msg.backspaces-vhigh.length); j++)\n    { \n        msg.payload += '0';\n    }\n\n    for(var i = 0; i < vhigh.length; i++)\n    { \n        msg.payload += vhigh[i];\n    }\n}\nelse\n{\n    msg.enabled = false;\n    msg.background = 'grey';\n    msg.payload = '';\n    msg.change = null;\n    msg.set = null;\n//    msg.payload = msg.payload.toString();\n    \n}\n\nmsg.topic = 4;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 4180,
        "wires": [
            [
                "475c6b19.bc2a5c",
                "c89c6c9c.81c4b8"
            ]
        ]
    },
    {
        "id": "2a8d0cc2.9bdfd4",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "",
        "func": "var label = global.get('vlow_label');\nvar change = global.get('vlow_change');\nvar tooltip = global.get('vlow_tooltip');\nvar set = global.get('vlow_set');\n\nmsg.label = label;\nmsg.change = change;\nmsg.tooltip = tooltip;\nmsg.set = set;\n\nmsg.backspaces = 4;\nvar vlow = String(msg.vlow);\n\n// msg.payload = \"\" when masterID not selected yet\"\nif (msg.payload != '')\n{\n    msg.enabled = true;\n    msg.background = 'green';\n\n    msg.payload = '';\n    //padding before number\n    for(var j = 0; j < (msg.backspaces-vlow.length); j++)\n    { \n        msg.payload += '0';\n    }\n\n    for(var i = 0; i < vlow.length; i++)\n    { \n        msg.payload += vlow[i];\n    }\n}\nelse\n{\n    msg.enabled = false;\n    msg.background = 'grey';\n    msg.payload = '';\n    msg.change = null;\n    msg.set = null;\n//    msg.payload = msg.payload.toString();\n}\n\nmsg.topic = 5;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 4260,
        "wires": [
            [
                "abad2eef.1338f",
                "848d525e.3f07f8"
            ]
        ]
    },
    {
        "id": "3a9554c4.03cee4",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "",
        "func": "var label = global.get('rcharge_label');\nvar change = global.get('rcharge_change');\nvar tooltip = global.get('rcharge_tooltip');\nvar set = global.get('rcharge_set');\n\nmsg.label = label;\nmsg.change = change;\nmsg.tooltip = tooltip;\nmsg.set = set;\n\nmsg.backspaces = 6;\nvar rcharge = String(msg.rcharge);\n\n// msg.payload = \"\" when masterID not selected yet\"\nif (msg.payload != '')\n{\n    msg.enabled = true;\n    msg.background = 'green';\n\n    msg.payload = '';\n    //padding before number\n    for(var j = 0; j < (msg.backspaces-rcharge.length); j++)\n    { \n        msg.payload += '0';\n    }\n\n    for(var i = 0; i < rcharge.length; i++)\n    { \n        msg.payload += rcharge[i];\n    }\n}\nelse\n{\n    msg.enabled = false;\n    msg.background = 'grey';\n    msg.payload = '';\n    msg.change = null;\n    msg.set = null;\n//    msg.payload = msg.payload.toString();\n    \n}\n\nmsg.topic = 6;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 4340,
        "wires": [
            [
                "504add30.77a95c",
                "1ba7c0c2.71d84f"
            ]
        ]
    },
    {
        "id": "f2d49588.916d58",
        "type": "link in",
        "z": "3fb5a67.37c495a",
        "name": "",
        "links": [
            "a05e3166.1ce61"
        ],
        "x": 355,
        "y": 3920,
        "wires": [
            [
                "19c946df.966821"
            ]
        ]
    },
    {
        "id": "19c946df.966821",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "",
        "func": "var label = global.get('sensorid_label');\n//var change = global.get('sensorid_change');\nvar change = '';\nvar tooltip = global.get('sensorid_tooltip');\nvar set = global.get('sensorid_set');\n\nmsg.label = label;\nmsg.change = change;\nmsg.tooltip = tooltip;\nmsg.set = set;\n\nmsg.enabled = false;\nmsg.backspaces = 3;\n\nvar sensorid = String(msg.sensorid);\n\n// msg.payload = \"\" when masterID not selected yet\"\nif (msg.payload != '')\n{\n    msg.payload = '';\n}\nelse\n{\n    msg.payload = '';\n    msg.change = null;\n    msg.set = null;\n}\n\n//msg.payload = msg.payload.toString();\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 3940,
        "wires": [
            [
                "637abd58.8267e4",
                "5ffbc1ee.d7699"
            ]
        ]
    },
    {
        "id": "6c794033.38669",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "translations",
        "func": "var label = global.get('mperiod_label');\nvar change = global.get('mperiod_change');\nvar tooltip = global.get('mperiod_tooltip');\nvar set = global.get('mperiod_set');\n\nmsg.label = label;\nmsg.change = change;\nmsg.tooltip = tooltip;\nmsg.set = set;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 3980,
        "wires": [
            [
                "639f9155.6a8c7"
            ]
        ]
    },
    {
        "id": "2034989.a2eea68",
        "type": "link in",
        "z": "3fb5a67.37c495a",
        "name": "",
        "links": [
            "a05e3166.1ce61"
        ],
        "x": 355,
        "y": 4020,
        "wires": [
            [
                "519ab41a.449d3c"
            ]
        ]
    },
    {
        "id": "7a1e97fe.e8f07",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "translations",
        "func": "var label = global.get('mwindow_label');\nvar change = global.get('mwindow_change');\nvar tooltip = global.get('mwindow_tooltip');\nvar set = global.get('mwindow_set');\n\nmsg.label = label;\nmsg.change = change;\nmsg.tooltip = tooltip;\nmsg.set = set;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 4060,
        "wires": [
            [
                "1431a7fd.f973e8"
            ]
        ]
    },
    {
        "id": "440fc31d.65b1f4",
        "type": "link in",
        "z": "3fb5a67.37c495a",
        "name": "",
        "links": [
            "a05e3166.1ce61"
        ],
        "x": 355,
        "y": 4100,
        "wires": [
            [
                "f7c9ccc7.67f9a8"
            ]
        ]
    },
    {
        "id": "c89c6c9c.81c4b8",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "translations",
        "func": "var label = global.get('vhigh_label');\nvar change = global.get('vhigh_change');\nvar tooltip = global.get('vhigh_tooltip');\nvar set = global.get('vhigh_set');\n\nmsg.label = label;\nmsg.change = change;\nmsg.tooltip = tooltip;\nmsg.set = set;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 4140,
        "wires": [
            [
                "4a36d26e.3f434c"
            ]
        ]
    },
    {
        "id": "1b6452a0.d75855",
        "type": "link in",
        "z": "3fb5a67.37c495a",
        "name": "",
        "links": [
            "a05e3166.1ce61"
        ],
        "x": 355,
        "y": 4180,
        "wires": [
            [
                "77aadd10.8cc9bc"
            ]
        ]
    },
    {
        "id": "848d525e.3f07f8",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "translations",
        "func": "var label = global.get('vlow_label');\nvar change = global.get('vlow_change');\nvar tooltip = global.get('vlow_tooltip');\nvar set = global.get('vlow_set');\n\nmsg.label = label;\nmsg.change = change;\nmsg.tooltip = tooltip;\nmsg.set = set;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 4220,
        "wires": [
            [
                "3a4fb2f6.d3c10e"
            ]
        ]
    },
    {
        "id": "1ba7c0c2.71d84f",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "translations",
        "func": "var label = global.get('rcharge_label');\nvar change = global.get('rcharge_change');\nvar tooltip = global.get('rcharge_tooltip');\nvar set = global.get('rcharge_set');\n\nmsg.label = label;\nmsg.change = change;\nmsg.tooltip = tooltip;\nmsg.set = set;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 4300,
        "wires": [
            [
                "2add5a5f.f19f56"
            ]
        ]
    },
    {
        "id": "472bf7c3.68321",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "translations",
        "func": "var label = global.get('noise_label');\n\nmsg.label = label;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 4540,
        "wires": [
            [
                "1e845578.3bcec3"
            ]
        ]
    },
    {
        "id": "c8861eaf.64b9f",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "translations",
        "func": "var label = global.get('maxnoise_label');\n\nmsg.label = label;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 4600,
        "wires": [
            [
                "66a55dd5.e6d84c"
            ]
        ]
    },
    {
        "id": "a2dc8bea.132cb",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "translations",
        "func": "var label = global.get('sequence_label');\n\nmsg.label = label;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 4660,
        "wires": [
            [
                "8a85a5c2.f2306"
            ]
        ]
    },
    {
        "id": "b21909f5.edb0f",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "translations",
        "func": "var status0 = global.get('status0');\nvar status1 = global.get('status1');\nvar status2 = global.get('status2');\nvar status3 = global.get('status3');\n\nmsg.status0 = status0;\nmsg.status1 = status1;\nmsg.status2 = status2;\nmsg.status3 = status3;\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 4720,
        "wires": [
            [
                "22e80d92.19e042"
            ]
        ]
    },
    {
        "id": "773a50db.2eb9c",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "translations",
        "func": "var label = global.get('cap_label');\nmsg.label = label;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 4760,
        "wires": [
            [
                "55414836.23412"
            ]
        ]
    },
    {
        "id": "c1065dcf.1efc3",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "translations",
        "func": "var label = global.get('avgcap_label');\n\nmsg.label = label;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 4820,
        "wires": [
            [
                "e354213a.86d248"
            ]
        ]
    },
    {
        "id": "de632498.ee77c8",
        "type": "link in",
        "z": "3fb5a67.37c495a",
        "name": "",
        "links": [
            "a05e3166.1ce61"
        ],
        "x": 355,
        "y": 4260,
        "wires": [
            [
                "2a8d0cc2.9bdfd4"
            ]
        ]
    },
    {
        "id": "7901793f.d66a68",
        "type": "link in",
        "z": "3fb5a67.37c495a",
        "name": "",
        "links": [
            "a05e3166.1ce61"
        ],
        "x": 355,
        "y": 4340,
        "wires": [
            [
                "3a9554c4.03cee4"
            ]
        ]
    },
    {
        "id": "5f7a1147.cb468",
        "type": "link in",
        "z": "3fb5a67.37c495a",
        "name": "",
        "links": [
            "a05e3166.1ce61"
        ],
        "x": 335,
        "y": 4460,
        "wires": [
            [
                "9113dd63.05e848"
            ]
        ]
    },
    {
        "id": "90bf53cc.49acb8",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "translations",
        "func": "var label = global.get('desc_label');\nvar change = global.get('desc_change');\nvar tooltip = global.get('desc_tooltip');\nvar set = global.get('desc_set');\n\nmsg.label = label;\nmsg.change = change;\nmsg.tooltip = tooltip;\nmsg.set = set;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 4420,
        "wires": [
            [
                "37120db0.db667a"
            ]
        ]
    },
    {
        "id": "9113dd63.05e848",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "set variable",
        "func": "var label = global.get('desc_label');\nvar change = global.get('desc_change');\nvar tooltip = global.get('desc_tooltip');\nvar set = global.get('desc_set');\n\nmsg.label = label;\nmsg.change = change;\nmsg.tooltip = tooltip;\nmsg.set = set;\n\n// msg.payload = \"\" when masterID not selected yet\"\nif (msg.payload != '')\n{\n    msg.enabled = true;\n//    msg.background = 'green'; not a topic\n    msg.change = change;\n    msg.label = label;\n    msg.payload = msg.description;\n    flow.set('descriptionM2',msg.payload);\n}\n//when master selected for first time\nelse\n{\n    msg.enabled = false;\n//    msg.background = 'grey'; not a topic\n    msg.change = null;\n// default value are always there when USB started\n    msg.payload = '';\n    flow.set('descriptionM2',msg.payload);\n    msg.set = null;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 4460,
        "wires": [
            [
                "90bf53cc.49acb8",
                "666d00d5.5ff8c8"
            ]
        ]
    },
    {
        "id": "37120db0.db667a",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "Description",
        "func": "// get latest flow variable\nvar description = flow.get('descriptionM2');\nvar ID = flow.get('master1ID');\nvar change = global.get('desc_change');\n\nif (msg.payload == 'default config')\n{\n //   msg.payload = description;\n    msg.enabled = false;\n    msg.change = null;\n    msg.label = '';\n    msg.payload = null;\n}\nelse\n{\n    if (ID != '')\n    {\n        msg.enabled = true;\n        msg.change = change;\n        msg.payload = description;\n    }\n    else \n    {\n        msg.enabled = false;\n        msg.change = null;\n        msg.label = '';\n        msg.payload = '';\n    }\n}\n// background is not a topic of this widget\n//msg.background = 'green';\n\nmsg.topic = 7;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 4420,
        "wires": [
            [
                "102d87dc.1355d8"
            ]
        ]
    },
    {
        "id": "d6bb2153.5dc158",
        "type": "link in",
        "z": "3fb5a67.37c495a",
        "name": "",
        "links": [
            "a05e3166.1ce61"
        ],
        "x": 355,
        "y": 4540,
        "wires": [
            [
                "472bf7c3.68321"
            ]
        ]
    },
    {
        "id": "74e679b2.54d12",
        "type": "link in",
        "z": "3fb5a67.37c495a",
        "name": "",
        "links": [
            "a05e3166.1ce61"
        ],
        "x": 355,
        "y": 4600,
        "wires": [
            [
                "c8861eaf.64b9f"
            ]
        ]
    },
    {
        "id": "4cb605a0.8155ec",
        "type": "link in",
        "z": "3fb5a67.37c495a",
        "name": "",
        "links": [
            "a05e3166.1ce61"
        ],
        "x": 355,
        "y": 4660,
        "wires": [
            [
                "a2dc8bea.132cb"
            ]
        ]
    },
    {
        "id": "7634d25b.e5ace4",
        "type": "link in",
        "z": "3fb5a67.37c495a",
        "name": "",
        "links": [
            "a05e3166.1ce61"
        ],
        "x": 355,
        "y": 4760,
        "wires": [
            [
                "773a50db.2eb9c"
            ]
        ]
    },
    {
        "id": "58bc5753.11927",
        "type": "link in",
        "z": "3fb5a67.37c495a",
        "name": "",
        "links": [
            "a05e3166.1ce61"
        ],
        "x": 355,
        "y": 4820,
        "wires": [
            [
                "c1065dcf.1efc3"
            ]
        ]
    },
    {
        "id": "a95021df.972548",
        "type": "ui_template",
        "z": "3fb5a67.37c495a",
        "group": "92957720.d414",
        "name": "drawing2M2",
        "order": 24,
        "width": 6,
        "height": 3,
        "format": "\n \n <img width=\"100%\" height=\"100%\" alt=\"Image not found\" src=\"data:image/png;base64,{{msg.payload}}\" />\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 910,
        "y": 4920,
        "wires": [
            []
        ]
    },
    {
        "id": "fb0e25a1.ef1608",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "msg.filename",
        "func": "msg.filename = \"/home/nuci3/Desktop/PNG Tekeningen2.png\";\nreturn msg;\n    \n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 4920,
        "wires": [
            [
                "54d98cd4.8cbfbc"
            ]
        ]
    },
    {
        "id": "54d98cd4.8cbfbc",
        "type": "file in",
        "z": "3fb5a67.37c495a",
        "name": "",
        "filename": "",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 610,
        "y": 4920,
        "wires": [
            [
                "dc897c63.92c7c"
            ]
        ]
    },
    {
        "id": "dc897c63.92c7c",
        "type": "base64",
        "z": "3fb5a67.37c495a",
        "name": "",
        "action": "str",
        "property": "payload",
        "x": 760,
        "y": 4920,
        "wires": [
            [
                "a95021df.972548"
            ]
        ]
    },
    {
        "id": "2206279f.ea9d68",
        "type": "link in",
        "z": "3fb5a67.37c495a",
        "name": "",
        "links": [
            "a05e3166.1ce61"
        ],
        "x": 355,
        "y": 4720,
        "wires": [
            [
                "b21909f5.edb0f"
            ]
        ]
    },
    {
        "id": "95ff8dea.e0d83",
        "type": "postgrestor",
        "z": "3fb5a67.37c495a",
        "name": "sensor_config@localhost",
        "query": "INSERT INTO sensor_config_table \n(\n    sensorid,\t\n    masterid\n    \n) VALUES\n(\n    '{{msg.sensorid}}',\n    '{{{msg.masterid}}}'\n);",
        "postgresDB": "6733d493.9cca6c",
        "output": true,
        "outputs": 1,
        "x": 1650,
        "y": 3900,
        "wires": [
            []
        ]
    },
    {
        "id": "83ba4c5b.fb92d8",
        "type": "postgrestor",
        "z": "3fb5a67.37c495a",
        "name": "sensor_config@localhost",
        "query": "INSERT INTO sensor_config_table \n(\n\tmeasperiod,\n\tmasterid,\n\tsensorid\n\t\n) VALUES\n(\n    '{{msg.mperiod}}',\n    '{{{msg.masterid}}}',\n    '{{msg.sensorid}}'\n);",
        "postgresDB": "6733d493.9cca6c",
        "output": true,
        "outputs": 1,
        "x": 1650,
        "y": 3980,
        "wires": [
            []
        ]
    },
    {
        "id": "f5e53dcc.f04618",
        "type": "postgrestor",
        "z": "3fb5a67.37c495a",
        "name": "sensor_config@localhost",
        "query": "INSERT INTO sensor_config_table \n(\n\tmeastime,\n\tmasterid,\n\tsensorid\n\n) VALUES\n(\n    '{{msg.mwindow}}',\n    '{{{msg.masterid}}}',\n    '{{msg.sensorid}}'\n);",
        "postgresDB": "6733d493.9cca6c",
        "output": true,
        "outputs": 1,
        "x": 1650,
        "y": 4060,
        "wires": [
            []
        ]
    },
    {
        "id": "62e3f1a0.2caa18",
        "type": "postgrestor",
        "z": "3fb5a67.37c495a",
        "name": "sensor_config@localhost",
        "query": "INSERT INTO sensor_config_table \n(\n\tvhigh,\n\tmasterid,\n\tsensorid\n\t\n) VALUES\n(\n    '{{msg.vhigh}}',\n    '{{{msg.masterid}}}',\n    '{{msg.sensorid}}'\n);",
        "postgresDB": "6733d493.9cca6c",
        "output": true,
        "outputs": 1,
        "x": 1650,
        "y": 4140,
        "wires": [
            []
        ]
    },
    {
        "id": "54b163da.b00294",
        "type": "postgrestor",
        "z": "3fb5a67.37c495a",
        "name": "sensor_config@localhost",
        "query": "INSERT INTO sensor_config_table \n\n\tvlow,\n\tmasterid,\n\tsensorid\n\t\n) VALUES\n(\n    '{{msg.vlow}}',\n    '{{{msg.masterid}}}',\n    '{{msg.sensorid}}'\n);",
        "postgresDB": "6733d493.9cca6c",
        "output": true,
        "outputs": 1,
        "x": 1650,
        "y": 4220,
        "wires": [
            []
        ]
    },
    {
        "id": "44928c.73f07d74",
        "type": "postgrestor",
        "z": "3fb5a67.37c495a",
        "name": "sensor_config@localhost",
        "query": "INSERT INTO sensor_config_table \n(\n\n\trcharge,\n\tmasterid,\n\tsensorid\n\n) VALUES\n(\n    '{{msg.rcharge}}',\n    '{{{msg.masterid}}}',\n    '{{msg.sensorid}}'\n);",
        "postgresDB": "6733d493.9cca6c",
        "output": true,
        "outputs": 1,
        "x": 1650,
        "y": 4300,
        "wires": [
            []
        ]
    },
    {
        "id": "bde4fd51.d1e328",
        "type": "postgrestor",
        "z": "3fb5a67.37c495a",
        "name": "sensor_config@localhost",
        "query": "INSERT INTO sensor_config_table \n(\n\n\tdescription,\n\tmasterid,\n\tsensorid\n) VALUES\n(\n    '{{msg.description}}',\n    '{{{msg.masterid}}}',\n    '{{{msg.sensorid}}}'\n);",
        "postgresDB": "6733d493.9cca6c",
        "output": true,
        "outputs": 1,
        "x": 1630,
        "y": 4460,
        "wires": [
            []
        ]
    },
    {
        "id": "f8d5137d.0509",
        "type": "change",
        "z": "3fb5a67.37c495a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "descriptionM2",
                "pt": "flow",
                "to": "topic",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1420,
        "y": 4420,
        "wires": [
            []
        ]
    },
    {
        "id": "91988806.f861d8",
        "type": "comment",
        "z": "3fb5a67.37c495a",
        "name": "parameter configuration (part 2)",
        "info": "",
        "x": 210,
        "y": 3820,
        "wires": []
    },
    {
        "id": "d68c8a3b.7777b8",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "Prepare for dbase",
        "func": "\nvar masterid = flow.get('master2ID');\nvar sensorid = flow.get('sensorIDM2');\n\nif (msg.payload == 'confirm')\n{\n    msg.masterid = masterid;\n    msg.sensorid = sensorid;\n    msg.description = msg.topic;\n}\nelse\n{\n    \n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1410,
        "y": 4460,
        "wires": [
            [
                "bde4fd51.d1e328"
            ]
        ]
    },
    {
        "id": "3dc42bcd.6e86b4",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "",
        "func": "var label = global.get('log_email');\n\nvar masterid = flow.get('master2ID');\n\nif (msg.payload != '')\n{\n    msg.enabled = true;\n    msg.background = 'green';\n    msg.log_label = label;\n    msg.payload = '';\n}\nelse\n{\n    msg.enabled = false;\n    msg.background = 'grey';\n    msg.payload = ' ';\n    msg.log_label = '';\n}\n\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 3460,
        "wires": [
            [
                "b003b1e6.73c42"
            ]
        ]
    },
    {
        "id": "ca6ce228.cb3078",
        "type": "ui_template",
        "z": "3fb5a67.37c495a",
        "group": "f12df54.fdd1f08",
        "name": "drawing3M2",
        "order": 25,
        "width": 6,
        "height": 3,
        "format": "\n \n <img width=\"100%\" height=\"100%\" alt=\"Image not found\" src=\"data:image/png;base64,{{msg.payload}}\" />\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 910,
        "y": 4980,
        "wires": [
            []
        ]
    },
    {
        "id": "e0eebdcd.368e1",
        "type": "file in",
        "z": "3fb5a67.37c495a",
        "name": "",
        "filename": "",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 610,
        "y": 4980,
        "wires": [
            [
                "2314cb55.632bdc"
            ]
        ]
    },
    {
        "id": "2314cb55.632bdc",
        "type": "base64",
        "z": "3fb5a67.37c495a",
        "name": "",
        "action": "str",
        "property": "payload",
        "x": 760,
        "y": 4980,
        "wires": [
            [
                "ca6ce228.cb3078"
            ]
        ]
    },
    {
        "id": "9bf5d05b.f3bdd8",
        "type": "ui_template",
        "z": "3fb5a67.37c495a",
        "group": "f12df54.fdd1f08",
        "name": "logo2M2",
        "order": 17,
        "width": 6,
        "height": 2,
        "format": "\n \n <img width=\"100%\" height=\"1OO%\" alt=\"Image not found\" src=\"data:image/png;base64,{{msg.payload}}\" />\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 900,
        "y": 4860,
        "wires": [
            []
        ]
    },
    {
        "id": "236c2f64.5426f8",
        "type": "link in",
        "z": "3fb5a67.37c495a",
        "name": "",
        "links": [
            "a05e3166.1ce61"
        ],
        "x": 695,
        "y": 3460,
        "wires": [
            [
                "3dc42bcd.6e86b4",
                "b7c529e1.a332e8"
            ]
        ]
    },
    {
        "id": "af321811.136848",
        "type": "ui_dropdown",
        "z": "3fb5a67.37c495a",
        "name": "",
        "label": "{{msg.master_label}}",
        "tooltip": "",
        "place": "",
        "group": "f726791c.9d1d88",
        "order": 11,
        "width": 6,
        "height": 2,
        "passthru": true,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "x": 740,
        "y": 3320,
        "wires": [
            [
                "ba22f77a.62a8c8",
                "1d06289b.43faa7"
            ]
        ]
    },
    {
        "id": "ba22f77a.62a8c8",
        "type": "change",
        "z": "3fb5a67.37c495a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "master2ID",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 930,
        "y": 3300,
        "wires": [
            []
        ]
    },
    {
        "id": "14012aab.4a4ffd",
        "type": "change",
        "z": "3fb5a67.37c495a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "master2ID",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 3320,
        "wires": [
            [
                "af321811.136848"
            ]
        ]
    },
    {
        "id": "84dfeb61.ed2be8",
        "type": "change",
        "z": "3fb5a67.37c495a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "language2ID",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 3220,
        "wires": [
            []
        ]
    },
    {
        "id": "23b999d1.cd8886",
        "type": "change",
        "z": "3fb5a67.37c495a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "language2ID",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 3220,
        "wires": [
            [
                "7a63f9dd.ba6468"
            ]
        ]
    },
    {
        "id": "6f0b0a4b.666c9c",
        "type": "postgrestor",
        "z": "3fb5a67.37c495a",
        "name": "translations@localhost",
        "query": "SELECT \"{{msg.lang}}\" AS translated FROM translations_table\nWHERE en = 'Select language '\nORDER BY en  DESC\nLIMIT 1;\n\nSELECT \"{{msg.lang}}\" AS label FROM translations_table\nWHERE en = 'Master2 ID'\nORDER BY en  DESC\nLIMIT 1;",
        "postgresDB": "6787392.d78b7c8",
        "output": true,
        "outputs": 1,
        "x": 620,
        "y": 3160,
        "wires": [
            [
                "dc92f0ae.d4948"
            ]
        ]
    },
    {
        "id": "234730f6.4b9d1",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "Selected default language",
        "func": "msg.lang = msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 3160,
        "wires": [
            [
                "6f0b0a4b.666c9c"
            ]
        ]
    },
    {
        "id": "dc92f0ae.d4948",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "Translations",
        "func": "\nmsg.label1 = msg.payload[0].rows[0].translated;\nmsg.label2 = msg.payload[1].rows[0].label;\n\nmsg.payload = msg.lang;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 3160,
        "wires": [
            [
                "7856cab5.c7e8bc",
                "7a63f9dd.ba6468"
            ]
        ]
    },
    {
        "id": "35d37b89.57a9ec",
        "type": "comment",
        "z": "3fb5a67.37c495a",
        "name": "Language choice (part 2)",
        "info": "",
        "x": 650,
        "y": 3120,
        "wires": []
    },
    {
        "id": "720b9be1.bff6a4",
        "type": "comment",
        "z": "3fb5a67.37c495a",
        "name": "Master choice",
        "info": "",
        "x": 730,
        "y": 3280,
        "wires": []
    },
    {
        "id": "7856cab5.c7e8bc",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "To be translated",
        "func": "var lang = global.get(\"language1ID\");\n//msg.lang = msg.payload;\n\nmsg.master_label = 'Master2 ID';\n\nmsg.sensorid_change = 'change sensor ID';\nmsg.sensorid_tooltip = 'between 0 and 240';\nmsg.sensorid_label = 'Sensor ID : ';\nmsg.sensorid_set = 'Set new ID';\n\nmsg.mperiod_change = 'change Measurement Period (secs)';\nmsg.mperiod_tooltip = 'between 5 and 16M secs';\nmsg.mperiod_label = 'Actual period : ';\nmsg.mperiod_set = 'Set new period';\n\nmsg.mwindow_change = 'change Measurement duration (secs)';\nmsg.mwindow_tooltip = 'between 1 and 4000 secs';\nmsg.mwindow_label = 'Measurement duration : ';\nmsg.mwindow_set = 'Set new duration';\n\nmsg.vhigh_change = 'change V High (mV)';\nmsg.vhigh_tooltip = 'between VLow and 3170 mVolt';\nmsg.vhigh_label = 'Actual High Voltage : ';\nmsg.vhigh_set = 'Set new value';\n\nmsg.vlow_change = 'change V Low (mV)';\nmsg.vlow_tooltip = 'between 10mV and VHigh';\nmsg.vlow_label = 'Actual Low Voltage : ';\nmsg.vlow_set = 'Set new value';\n\nmsg.rcharge_change = 'change Charging resistor (Ohm)';\nmsg.rcharge_tooltip = 'between 1 and 730000 Ohm';\nmsg.rcharge_label = 'Actual resistor : ';\nmsg.rcharge_set = 'Set new value';\n\nmsg.desc_change = 'change Description';\nmsg.desc_tooltip = 'Description of measurement setup';\nmsg.desc_label = 'Actual Description : ';\nmsg.desc_set = 'Set new description';\n\nmsg.noise_label = 'Actual noise value (mV) : ';\n\nmsg.maxnoise_label = 'Maximum noise value (mV) : ';\n\nmsg.sequence_label = 'Sequence : ';\n\nmsg.cap_label = 'Actual value : ';\n\nmsg.avgcap_label = 'Actual average : ';\n\nmsg.status1 = 'waiting ...';\nmsg.status2 = 'data reception';\nmsg.status3 = 'seconds';\nmsg.status0 = 'STATUS';\n\nmsg.log_start ='START LOGGING';\nmsg.log_stop ='STOP LOGGING';\nmsg.log_email = 'Enter email for sending log file';\nmsg.log_logging = 'Logging ...';\nmsg.log_file = 'log file from iSensPro gateway';\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 3160,
        "wires": [
            [
                "18992aa5.5cead5"
            ]
        ]
    },
    {
        "id": "18992aa5.5cead5",
        "type": "postgrestor",
        "z": "3fb5a67.37c495a",
        "name": "translations@localhost",
        "query": "--master---------------------------------------------\nSELECT \"{{msg.lang}}\" AS master_label FROM translations_table\nWHERE en = '{{ msg.master_label }}'\nLIMIT 1;\n\n--sensorid---------------------------------------------\nSELECT \"{{msg.lang}}\" AS sensorid_change FROM translations_table\nWHERE en = '{{ msg.sensorid_change }}'\nLIMIT 1;\nSELECT \"{{msg.lang}}\" AS sensorid_tooltip FROM translations_table\nWHERE en = '{{ msg.sensorid_tooltip }}'\nLIMIT 1;\nSELECT \"{{msg.lang}}\" AS sensorid_label FROM translations_table\nWHERE en = '{{ msg.sensorid_label }}'\nLIMIT 1;\nSELECT \"{{msg.lang}}\" AS sensorid_set FROM translations_table\nWHERE en = '{{ msg.sensorid_set }}'\nLIMIT 1;\n\n--mperiod----------------------------------------------------------\nSELECT \"{{msg.lang}}\" AS mperiod_change FROM translations_table\nWHERE en = '{{ msg.mperiod_change }}'\nLIMIT 1;\nSELECT \"{{msg.lang}}\" AS mperiod_tooltip FROM translations_table\nWHERE en = '{{ msg.mperiod_tooltip }}'\nLIMIT 1;\nSELECT \"{{msg.lang}}\" AS mperiod_label FROM translations_table\nWHERE en = '{{ msg.mperiod_label }}'\nLIMIT 1;\nSELECT \"{{msg.lang}}\" AS mperiod_set FROM translations_table\nWHERE en = '{{ msg.mperiod_set }}'\nLIMIT 1;\n\n--mwindow----------------------------------------------------------\nSELECT \"{{msg.lang}}\" AS mwindow_change FROM translations_table\nWHERE en = '{{ msg.mwindow_change }}'\nLIMIT 1;\nSELECT \"{{msg.lang}}\" AS mwindow_tooltip FROM translations_table\nWHERE en = '{{ msg.mwindow_tooltip }}'\nLIMIT 1;\nSELECT \"{{msg.lang}}\" AS mwindow_label FROM translations_table\nWHERE en = '{{ msg.mwindow_label }}'\nLIMIT 1;\nSELECT \"{{msg.lang}}\" AS mwindow_set FROM translations_table\nWHERE en = '{{ msg.mwindow_set }}'\nLIMIT 1;\n\n--vhigh----------------------------------------------------------\nSELECT \"{{msg.lang}}\" AS vhigh_change FROM translations_table\nWHERE en = '{{ msg.vhigh_change }}'\nLIMIT 1;\nSELECT \"{{msg.lang}}\" AS vhigh_tooltip FROM translations_table\nWHERE en = '{{ msg.vhigh_tooltip }}'\nLIMIT 1;\nSELECT \"{{msg.lang}}\" AS vhigh_label FROM translations_table\nWHERE en = '{{ msg.vhigh_label }}'\nLIMIT 1;\nSELECT \"{{msg.lang}}\" AS vhigh_set FROM translations_table\nWHERE en = '{{ msg.vhigh_set }}'\nLIMIT 1;\n\n--vlow----------------------------------------------------------\nSELECT \"{{msg.lang}}\" AS vlow_change FROM translations_table\nWHERE en = '{{ msg.vlow_change }}'\nLIMIT 1;\nSELECT \"{{msg.lang}}\" AS vlow_tooltip FROM translations_table\nWHERE en = '{{ msg.vlow_tooltip }}'\nLIMIT 1;\nSELECT \"{{msg.lang}}\" AS vlow_label FROM translations_table\nWHERE en = '{{ msg.vlow_label }}'\nLIMIT 1;\nSELECT \"{{msg.lang}}\" AS vlow_set FROM translations_table\nWHERE en = '{{ msg.vlow_set }}'\nLIMIT 1;\n\n--rcharge----------------------------------------------------------\nSELECT \"{{msg.lang}}\" AS rcharge_change FROM translations_table\nWHERE en = '{{ msg.rcharge_change }}'\nLIMIT 1;\nSELECT \"{{msg.lang}}\" AS rcharge_tooltip FROM translations_table\nWHERE en = '{{ msg.rcharge_tooltip }}'\nLIMIT 1;\nSELECT \"{{msg.lang}}\" AS rcharge_label FROM translations_table\nWHERE en = '{{ msg.rcharge_label }}'\nLIMIT 1;\nSELECT \"{{msg.lang}}\" AS rcharge_set FROM translations_table\nWHERE en = '{{ msg.rcharge_set }}'\nLIMIT 1;\n\n--desc----------------------------------------------------------\nSELECT \"{{msg.lang}}\" AS desc_change FROM translations_table\nWHERE en = '{{ msg.desc_change }}'\nLIMIT 1;\nSELECT \"{{msg.lang}}\" AS desc_tooltip FROM translations_table\nWHERE en = '{{ msg.desc_tooltip }}'\nLIMIT 1;\nSELECT \"{{msg.lang}}\" AS desc_label FROM translations_table\nWHERE en = '{{ msg.desc_label }}'\nLIMIT 1;\nSELECT \"{{msg.lang}}\" AS desc_set FROM translations_table\nWHERE en = '{{ msg.desc_set }}'\nLIMIT 1;\n\n--maxnoise----------------------------------------------------------\nSELECT \"{{msg.lang}}\" AS maxnoise_label FROM translations_table\nWHERE en = '{{ msg.maxnoise_label }}'\nLIMIT 1;\n\n--noise----------------------------------------------------------\nSELECT \"{{msg.lang}}\" AS noise_label FROM translations_table\nWHERE en = '{{ msg.noise_label }}'\nLIMIT 1;\n\n--sequence----------------------------------------------------------\nSELECT \"{{msg.lang}}\" AS sequence_label FROM translations_table\nWHERE en = '{{ msg.sequence_label }}'\nLIMIT 1;\n\n--cap----------------------------------------------------------\nSELECT \"{{msg.lang}}\" AS cap_label FROM translations_table\nWHERE en = '{{ msg.cap_label }}'\nLIMIT 1;\n\n--avgcap----------------------------------------------------------\nSELECT \"{{msg.lang}}\" AS avgcap_label FROM translations_table\nWHERE en = '{{ msg.avgcap_label }}'\nLIMIT 1;\n\n--status1----------------------------------------------------------\nSELECT \"{{msg.lang}}\" AS status1 FROM translations_table\nWHERE en = '{{ msg.status1 }}'\nLIMIT 1;\n\n--status2----------------------------------------------------------\nSELECT \"{{msg.lang}}\" AS status2 FROM translations_table\nWHERE en = '{{ msg.status2 }}'\nLIMIT 1;\n\n--status3----------------------------------------------------------\nSELECT \"{{msg.lang}}\" AS status3 FROM translations_table\nWHERE en = '{{ msg.status3 }}'\nLIMIT 1;\n--status0----------------------------------------------------------\nSELECT \"{{msg.lang}}\" AS status0 FROM translations_table\nWHERE en = '{{ msg.status0 }}'\nLIMIT 1;\n\n--log_start----------------------------------------------------------\nSELECT \"{{msg.lang}}\" AS log_start FROM translations_table\nWHERE en = '{{ msg.log_start }}'\nLIMIT 1;\n--log_stop----------------------------------------------------------\nSELECT \"{{msg.lang}}\" AS log_stop FROM translations_table\nWHERE en = '{{ msg.log_stop }}'\nLIMIT 1;\n--log_email----------------------------------------------------------\nSELECT \"{{msg.lang}}\" AS log_email FROM translations_table\nWHERE en = '{{ msg.log_email }}'\nLIMIT 1;\n--log_logging----------------------------------------------------------\nSELECT \"{{msg.lang}}\" AS log_logging FROM translations_table\nWHERE en = '{{ msg.log_logging }}'\nLIMIT 1;\n--log_file----------------------------------------------------------\nSELECT \"{{msg.lang}}\" AS log_file FROM translations_table\nWHERE en = '{{ msg.log_file }}'\nLIMIT 1;",
        "postgresDB": "6787392.d78b7c8",
        "output": true,
        "outputs": 1,
        "x": 1240,
        "y": 3160,
        "wires": [
            [
                "4f192f2.d6d89d",
                "bc568584.c9c788"
            ]
        ]
    },
    {
        "id": "4f192f2.d6d89d",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "Translations",
        "func": "//master---------------------------------------------\nglobal.set('master2_label',msg.payload[0].rows[0].master_label);\n\n//sensorid---------------------------------------------\nglobal.set('sensorid_change',msg.payload[1].rows[0].sensorid_change);\nglobal.set('sensorid_tooltip',msg.payload[2].rows[0].sensorid_tooltip);\nglobal.set('sensorid_label',msg.payload[3].rows[0].sensorid_label);\nglobal.set('sensorid_set',msg.payload[4].rows[0].sensorid_set);\n\n//mperiod----------------------------------------------------------\nglobal.set('mperiod_change',msg.payload[5].rows[0].mperiod_change);\nglobal.set('mperiod_tooltip',msg.payload[6].rows[0].mperiod_tooltip);\nglobal.set('mperiod_label',msg.payload[7].rows[0].mperiod_label);\nglobal.set('mperiod_set',msg.payload[8].rows[0].mperiod_set);\n\n//mwindow----------------------------------------------------------\nglobal.set('mwindow_change',msg.payload[9].rows[0].mwindow_change);\nglobal.set('mwindow_tooltip',msg.payload[10].rows[0].mwindow_tooltip);\nglobal.set('mwindow_label',msg.payload[11].rows[0].mwindow_label);\nglobal.set('mwindow_set',msg.payload[12].rows[0].mwindow_set);\n\n//vhigh----------------------------------------------------------\nglobal.set('vhigh_change',msg.payload[13].rows[0].vhigh_change);\nglobal.set('vhigh_tooltip',msg.payload[14].rows[0].vhigh_tooltip);\nglobal.set('vhigh_label',msg.payload[15].rows[0].vhigh_label);\nglobal.set('vhigh_set',msg.payload[16].rows[0].vhigh_set);\n\n//vlow----------------------------------------------------------\nglobal.set('vlow_change',msg.payload[17].rows[0].vlow_change);\nglobal.set('vlow_tooltip',msg.payload[18].rows[0].vlow_tooltip);\nglobal.set('vlow_label',msg.payload[19].rows[0].vlow_label);\nglobal.set('vlow_set',msg.payload[20].rows[0].vlow_set);\n\n//rcharge----------------------------------------------------------\nglobal.set('rcharge_change',msg.payload[21].rows[0].rcharge_change);\nglobal.set('rcharge_tooltip',msg.payload[22].rows[0].rcharge_tooltip);\nglobal.set('rcharge_label',msg.payload[23].rows[0].rcharge_label);\nglobal.set('rcharge_set',msg.payload[24].rows[0].rcharge_set);\n\n//desc----------------------------------------------------------\nglobal.set('desc_change',msg.payload[25].rows[0].desc_change);\nglobal.set('desc_tooltip',msg.payload[26].rows[0].desc_tooltip);\nglobal.set('desc_label',msg.payload[27].rows[0].desc_label);\nglobal.set('desc_set',msg.payload[28].rows[0].desc_set);\n\n//maxnoise----------------------------------------------------------\nglobal.set('maxnoise_label',msg.payload[29].rows[0].maxnoise_label);\n\n//noise----------------------------------------------------------\nglobal.set('noise_label',msg.payload[30].rows[0].noise_label);\n\n//sequence----------------------------------------------------------\nglobal.set('sequence_label',msg.payload[31].rows[0].sequence_label);\n\n//cap----------------------------------------------------------\nglobal.set('cap_label',msg.payload[32].rows[0].cap_label);\n\n//avgcap----------------------------------------------------------\nglobal.set('avgcap_label',msg.payload[33].rows[0].avgcap_label);\n\n//status1----------------------------------------------------------\nglobal.set('status1',msg.payload[34].rows[0].status1);\n\n//status2----------------------------------------------------------\nglobal.set('status2',msg.payload[35].rows[0].status2);\n\n//status3----------------------------------------------------------\nglobal.set('status3',msg.payload[36].rows[0].status3);\n\n//status0----------------------------------------------------------\nglobal.set('status0',msg.payload[37].rows[0].status0);\n\n//log_start----------------------------------------------------------\nglobal.set('log_start',msg.payload[38].rows[0].log_start);\n\n//log_stop----------------------------------------------------------\nglobal.set('log_stop',msg.payload[39].rows[0].log_stop);\n\n//log_email----------------------------------------------------------\nglobal.set('log_email',msg.payload[40].rows[0].log_email);\n\n//log_logging----------------------------------------------------------\nglobal.set('log_logging',msg.payload[41].rows[0].log_logging);\n\n//log_logging----------------------------------------------------------\nglobal.set('log_file',msg.payload[42].rows[0].log_file);\n\n//msg.payload = \"\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1450,
        "y": 3160,
        "wires": [
            [
                "b8638591.d64bd8",
                "a8be2831.1d93e"
            ]
        ]
    },
    {
        "id": "8e81316b.7dfcc8",
        "type": "debug",
        "z": "3fb5a67.37c495a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1150,
        "y": 3300,
        "wires": []
    },
    {
        "id": "f2507f43.49a8a",
        "type": "inject",
        "z": "3fb5a67.37c495a",
        "name": "init",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "en",
        "payloadType": "str",
        "x": 170,
        "y": 3200,
        "wires": [
            [
                "234730f6.4b9d1",
                "23b999d1.cd8886"
            ]
        ]
    },
    {
        "id": "b8638591.d64bd8",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "Reset MasterID & set options",
        "func": "// show translated MasterID\nvar master_label = global.get('master2_label');\nmsg.master_label = master_label;\n\n\n// connected devices\nvar device0 = global.get('device0');\nvar device1 = global.get('device1');\nvar device2 = global.get('device2');\n\n\n//configs for empty selection\n// mperiod\nmsg.mperiod = 0;\n// mwindow\nmsg.mwindow = 0;\n// vhigh\nmsg.vhigh = 0;\n// vlow\nmsg.vlow = 0;\n// rcharge\nmsg.rcharge = 0;\n// description\nmsg.description = 'undefined';\n\n// when language selected, reset master ID\nmsg.payload = '';\nmsg.options = [device0,device1,device2];\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 3320,
        "wires": [
            [
                "14012aab.4a4ffd",
                "a05e3166.1ce61"
            ]
        ]
    },
    {
        "id": "a05e3166.1ce61",
        "type": "link out",
        "z": "3fb5a67.37c495a",
        "name": "",
        "links": [
            "f2d49588.916d58",
            "2034989.a2eea68",
            "440fc31d.65b1f4",
            "1b6452a0.d75855",
            "de632498.ee77c8",
            "7901793f.d66a68",
            "5f7a1147.cb468",
            "d6bb2153.5dc158",
            "74e679b2.54d12",
            "4cb605a0.8155ec",
            "7634d25b.e5ace4",
            "58bc5753.11927",
            "2206279f.ea9d68",
            "236c2f64.5426f8"
        ],
        "x": 1435,
        "y": 3240,
        "wires": []
    },
    {
        "id": "1d06289b.43faa7",
        "type": "postgrestor",
        "z": "3fb5a67.37c495a",
        "name": "sensor_config@localhost",
        "query": "-- last configuration of the master\n-- mperiod \nSELECT measperiod AS lastconfig FROM sensor_config_table\nWHERE masterid = '{{{ msg.payload }}}' AND measperiod IS NOT NULL\nORDER BY ts  DESC\nLIMIT 1;\n\n-- mwindow\nSELECT meastime AS lastconfig FROM sensor_config_table\nWHERE masterid = '{{{ msg.payload }}}' AND meastime IS NOT NULL\nORDER BY ts  DESC\nLIMIT 1;\n\n-- vhigh\nSELECT vhigh AS lastconfig FROM sensor_config_table\nWHERE masterid = '{{{ msg.payload }}}' AND vhigh IS NOT NULL\nORDER BY ts  DESC\nLIMIT 1;\n\n-- vlow\nSELECT vlow AS lastconfig FROM sensor_config_table\nWHERE masterid = '{{{ msg.payload }}}' AND vlow IS NOT NULL\nORDER BY ts  DESC\nLIMIT 1;\n\n--rcharge\nSELECT rcharge AS lastconfig FROM sensor_config_table\nWHERE masterid = '{{{ msg.payload }}}' AND rcharge IS NOT NULL\nORDER BY ts  DESC\nLIMIT 1;\n\n--description\nSELECT description AS lastconfig FROM sensor_config_table\nWHERE masterid = '{{{ msg.payload }}}' AND description IS NOT NULL\nORDER BY ts  DESC\nLIMIT 1;\n",
        "postgresDB": "6733d493.9cca6c",
        "output": true,
        "outputs": 1,
        "x": 950,
        "y": 3340,
        "wires": [
            [
                "8e81316b.7dfcc8",
                "d1d0987b.ebbfb"
            ]
        ]
    },
    {
        "id": "d1d0987b.ebbfb",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "Last configs",
        "func": "\n//var masterid = flow.get('master2ID')\n//msg.masterid = masterid;\n\n// mperiod\nmsg.mperiod = msg.payload[0].rows[0].lastconfig;\n\n// mwindow\nmsg.mwindow = msg.payload[1].rows[0].lastconfig;\n\n// vhigh\nmsg.vhigh = msg.payload[2].rows[0].lastconfig;\n\n// vlow\nmsg.vlow = msg.payload[3].rows[0].lastconfig;\n\n// rcharge\nmsg.rcharge = msg.payload[4].rows[0].lastconfig;\n\n// description\nmsg.description = msg.payload[5].rows[0].lastconfig;\n\n// msg.payload = '';\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 3340,
        "wires": [
            [
                "460c3891.0f0e3",
                "a05e3166.1ce61"
            ]
        ]
    },
    {
        "id": "460c3891.0f0e3",
        "type": "debug",
        "z": "3fb5a67.37c495a",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1390,
        "y": 3340,
        "wires": []
    },
    {
        "id": "a8be2831.1d93e",
        "type": "debug",
        "z": "3fb5a67.37c495a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1630,
        "y": 3140,
        "wires": []
    },
    {
        "id": "bc568584.c9c788",
        "type": "debug",
        "z": "3fb5a67.37c495a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1450,
        "y": 3100,
        "wires": []
    },
    {
        "id": "7a63f9dd.ba6468",
        "type": "ui_dropdown",
        "z": "3fb5a67.37c495a",
        "name": "",
        "label": "{{msg.label1}}",
        "tooltip": "",
        "place": "",
        "group": "92957720.d414",
        "order": 16,
        "width": "6",
        "height": "2",
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "English",
                "value": "en",
                "type": "str"
            },
            {
                "label": "Deutsch",
                "value": "de",
                "type": "str"
            },
            {
                "label": "Français",
                "value": "fr",
                "type": "str"
            },
            {
                "label": "Nederlands",
                "value": "nl",
                "type": "str"
            },
            {
                "label": "日本 ",
                "value": "jp",
                "type": "str"
            },
            {
                "label": "svenska",
                "value": "sw",
                "type": "str"
            },
            {
                "label": "suomen",
                "value": "fi",
                "type": "str"
            },
            {
                "label": "русский",
                "value": "ru",
                "type": "str"
            },
            {
                "label": "عربى",
                "value": "ar",
                "type": "str"
            },
            {
                "label": "norsk",
                "value": "no",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "x": 620,
        "y": 3220,
        "wires": [
            [
                "84dfeb61.ed2be8",
                "234730f6.4b9d1"
            ]
        ]
    },
    {
        "id": "20ce21c7.87540e",
        "type": "link in",
        "z": "3fb5a67.37c495a",
        "name": "",
        "links": [
            "638becee.ac7084",
            "491d16d6.09384",
            "3a6f0db1.7824d2"
        ],
        "x": 95,
        "y": 680,
        "wires": [
            [
                "8a658423.c1bb08"
            ]
        ]
    },
    {
        "id": "638becee.ac7084",
        "type": "link out",
        "z": "3fb5a67.37c495a",
        "name": "",
        "links": [
            "20ce21c7.87540e",
            "fbe3beb2.d62668"
        ],
        "x": 595,
        "y": 1000,
        "wires": []
    },
    {
        "id": "491d16d6.09384",
        "type": "link out",
        "z": "3fb5a67.37c495a",
        "name": "",
        "links": [
            "20ce21c7.87540e",
            "fbe3beb2.d62668"
        ],
        "x": 595,
        "y": 1100,
        "wires": []
    },
    {
        "id": "3a6f0db1.7824d2",
        "type": "link out",
        "z": "3fb5a67.37c495a",
        "name": "",
        "links": [
            "20ce21c7.87540e",
            "fbe3beb2.d62668"
        ],
        "x": 595,
        "y": 1200,
        "wires": []
    },
    {
        "id": "fbe3beb2.d62668",
        "type": "link in",
        "z": "3fb5a67.37c495a",
        "name": "",
        "links": [
            "638becee.ac7084",
            "491d16d6.09384",
            "3a6f0db1.7824d2"
        ],
        "x": 75,
        "y": 3320,
        "wires": [
            [
                "b8638591.d64bd8"
            ]
        ]
    },
    {
        "id": "12f0a673.e830ba",
        "type": "inject",
        "z": "3fb5a67.37c495a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 330,
        "y": 4920,
        "wires": [
            [
                "fb0e25a1.ef1608"
            ]
        ]
    },
    {
        "id": "5ce5b195.36a6a",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "msg.filename",
        "func": "msg.filename = \"/home/nuci3/Desktop/PNG Tekeningen3.png\";\nreturn msg;\n    \n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 4980,
        "wires": [
            [
                "e0eebdcd.368e1"
            ]
        ]
    },
    {
        "id": "45590b57.451bd4",
        "type": "inject",
        "z": "3fb5a67.37c495a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 330,
        "y": 4980,
        "wires": [
            [
                "5ce5b195.36a6a"
            ]
        ]
    },
    {
        "id": "f30d108e.bf3ac8",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "Prepare for dbase",
        "func": "\nvar masterid = flow.get('master1ID');\nvar sensorid = flow.get('sensorIDM1');\n\nif (msg.payload == 'confirm')\n{\n    msg.masterid = masterid;\n    msg.sensorid = sensorid;\n    msg.rcharge = msg.topic;\n}\nelse\n{\n    \n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1390,
        "y": 2240,
        "wires": [
            [
                "3616d616.87d2d2",
                "f934fcb9.229cf8"
            ]
        ]
    },
    {
        "id": "154ccc55.1edcfc",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "Prepare for dbase",
        "func": "\nvar masterid = flow.get('master1ID');\nvar sensorid = flow.get('sensorIDM1');\n\nif (msg.payload == 'confirm')\n{\n    msg.masterid = masterid;\n    msg.sensorid = sensorid;\n    msg.vlow = msg.topic;\n}\nelse\n{\n    \n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1390,
        "y": 2160,
        "wires": [
            [
                "8c4aa898.71fb88",
                "f934fcb9.229cf8"
            ]
        ]
    },
    {
        "id": "c73a5a4a.7a7408",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "Prepare for dbase",
        "func": "\nvar masterid = flow.get('master1ID');\nvar sensorid = flow.get('sensorIDM1');\n\nif (msg.payload == 'confirm')\n{\n    msg.masterid = masterid;\n    msg.sensorid = sensorid;\n    msg.vhigh = msg.topic;\n}\nelse\n{\n    \n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1390,
        "y": 2080,
        "wires": [
            [
                "4e11726b.a3a00c",
                "f934fcb9.229cf8"
            ]
        ]
    },
    {
        "id": "2f9f3aef.557a16",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "Prepare for dbase",
        "func": "\nvar masterid = flow.get('master1ID');\nvar sensorid = flow.get('sensorIDM1');\n\nif (msg.payload == 'confirm')\n{\n    msg.masterid = masterid;\n    msg.sensorid = sensorid;\n    msg.mwindow = msg.topic;\n}\nelse\n{\n    \n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1390,
        "y": 2000,
        "wires": [
            [
                "a528b21c.f2adb",
                "f934fcb9.229cf8"
            ]
        ]
    },
    {
        "id": "1572bf7b.cbc7a9",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "Prepare for dbase",
        "func": "\nvar masterid = flow.get('master1ID');\nvar sensorid = flow.get('sensorIDM1');\n\nif (msg.payload == 'confirm')\n{\n    msg.masterid = masterid;\n    msg.sensorid = sensorid;\n    msg.mperiod = msg.topic;\n}\nelse\n{\n    \n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1390,
        "y": 1920,
        "wires": [
            [
                "b5676994.def7b8",
                "f934fcb9.229cf8"
            ]
        ]
    },
    {
        "id": "c3469df9.a1254",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "Prepare for dbase",
        "func": "\nvar masterid = flow.get('master1ID');\nvar sensorid = flow.get('sensorIDM1');\n\nif (msg.payload == 'confirm')\n{\n    msg.masterid = masterid;\n    msg.sensorid = sensorid;\n}\nelse\n{\n    \n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1410,
        "y": 1840,
        "wires": [
            [
                "8db4d0fa.ca3f48",
                "f934fcb9.229cf8"
            ]
        ]
    },
    {
        "id": "83412c8c.b9dc98",
        "type": "debug",
        "z": "3fb5a67.37c495a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1830,
        "y": 1920,
        "wires": []
    },
    {
        "id": "d99cfcd6.e86338",
        "type": "debug",
        "z": "3fb5a67.37c495a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 1800,
        "wires": []
    },
    {
        "id": "f934fcb9.229cf8",
        "type": "debug",
        "z": "3fb5a67.37c495a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1570,
        "y": 1800,
        "wires": []
    },
    {
        "id": "af3a836c.a6173",
        "type": "debug",
        "z": "3fb5a67.37c495a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 290,
        "y": 980,
        "wires": []
    },
    {
        "id": "4358550d.f87d6c",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "Prepare for dbase",
        "func": "\nvar masterid = flow.get('master2ID');\nvar sensorid = flow.get('sensorIDM2');\n\nif (msg.payload == 'confirm')\n{\n    msg.masterid = masterid;\n    msg.sensorid = sensorid;\n}\nelse\n{\n    \n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1390,
        "y": 3900,
        "wires": [
            [
                "95ff8dea.e0d83"
            ]
        ]
    },
    {
        "id": "bde69f7.1eb816",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "Prepare for dbase",
        "func": "\nvar masterid = flow.get('master2ID');\nvar sensorid = flow.get('sensorIDM2');\n\nif (msg.payload == 'confirm')\n{\n    msg.masterid = masterid;\n    msg.sensorid = sensorid;\n    msg.mperiod = msg.topic;\n}\nelse\n{\n    \n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1390,
        "y": 3980,
        "wires": [
            [
                "83ba4c5b.fb92d8"
            ]
        ]
    },
    {
        "id": "3f5cc627.a6f912",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "Prepare for dbase",
        "func": "\nvar masterid = flow.get('master2ID');\nvar sensorid = flow.get('sensorIDM2');\n\nif (msg.payload == 'confirm')\n{\n    msg.masterid = masterid;\n    msg.sensorid = sensorid;\n    msg.mwindow = msg.topic;\n}\nelse\n{\n    \n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1390,
        "y": 4060,
        "wires": [
            [
                "f5e53dcc.f04618"
            ]
        ]
    },
    {
        "id": "1ac3815d.0dc57f",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "Prepare for dbase",
        "func": "\nvar masterid = flow.get('master2ID');\nvar sensorid = flow.get('sensorIDM2');\n\nif (msg.payload == 'confirm')\n{\n    msg.masterid = masterid;\n    msg.sensorid = sensorid;\n    msg.vhigh = msg.topic;\n}\nelse\n{\n    \n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1390,
        "y": 4140,
        "wires": [
            [
                "62e3f1a0.2caa18"
            ]
        ]
    },
    {
        "id": "a938d96a.3a383",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "Prepare for dbase",
        "func": "\nvar masterid = flow.get('master2ID');\nvar sensorid = flow.get('sensorIDM2');\n\nif (msg.payload == 'confirm')\n{\n    msg.masterid = masterid;\n    msg.sensorid = sensorid;\n    msg.vlow = msg.topic;\n}\nelse\n{\n    \n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1390,
        "y": 4220,
        "wires": [
            [
                "54b163da.b00294"
            ]
        ]
    },
    {
        "id": "827163e0.e7e0d8",
        "type": "function",
        "z": "3fb5a67.37c495a",
        "name": "Prepare for dbase",
        "func": "\nvar masterid = flow.get('master2ID');\nvar sensorid = flow.get('sensorIDM2');\n\nif (msg.payload == 'confirm')\n{\n    msg.masterid = masterid;\n    msg.sensorid = sensorid;\n    msg.rcharge = msg.topic;\n}\nelse\n{\n    \n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1390,
        "y": 4300,
        "wires": [
            [
                "44928c.73f07d74"
            ]
        ]
    },
    {
        "id": "b139562.32aafa8",
        "type": "debug",
        "z": "23aae268.c697d6",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 80,
        "wires": []
    },
    {
        "id": "ee9d704b.337628",
        "type": "debug",
        "z": "23aae268.c697d6",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 80,
        "wires": []
    },
    {
        "id": "cfc1f2c8.91513",
        "type": "debug",
        "z": "23aae268.c697d6",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 460,
        "wires": []
    },
    {
        "id": "fa68a92.81a11d8",
        "type": "debug",
        "z": "23aae268.c697d6",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 460,
        "wires": []
    },
    {
        "id": "17d23a58.b24a46",
        "type": "debug",
        "z": "23aae268.c697d6",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1110,
        "y": 80,
        "wires": []
    },
    {
        "id": "e929a807.d21e38",
        "type": "debug",
        "z": "23aae268.c697d6",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1290,
        "y": 60,
        "wires": []
    },
    {
        "id": "555a99fb.e05708",
        "type": "function",
        "z": "23aae268.c697d6",
        "name": "del reset",
        "func": "//first message\nif (msg.reset == true)\n{\n    delete msg.reset;\n    return [null,msg];\n}\n\n    delete msg.reset;\n    return [msg,null]; \n\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 180,
        "wires": [
            [
                "86b8cee1.18ef8",
                "e7abff2e.4802b",
                "e929a807.d21e38"
            ],
            []
        ]
    },
    {
        "id": "11344d99.e89d92",
        "type": "function",
        "z": "23aae268.c697d6",
        "name": "del reset",
        "func": "//first message\nif (msg.reset == true)\n{\n    delete msg.reset;\n    return [null,msg];\n}\n\n    delete msg.reset;\n    return [msg,null]; \n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 360,
        "wires": [
            [
                "26317863.e57f6",
                "a1b4490f.0f5138"
            ],
            []
        ]
    }
]